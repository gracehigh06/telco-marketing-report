/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_주활동지역_구매고객_1주
 일시 : 2018. 07. 20
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



/*********************************** 로직 1 ***********************************/


/* PRD_NO & CUST_NO를 KEY로 사용할 테이블 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP ;

/* 해당 고객의 최근 1달간 위치데이터 생성 */
/* 고객, 시간, 지역(읍면동) KEY로 중계기 잡힌 횟수를 집계하여 데이터 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP' AS
SELECT
  B.CUST_NO
 , A.TM
 , A.BASE_TM
 , A.END_LTE_CELL_ID
FROM ( SELECT
    BASE_TM
   , SUBSTR(BASE_TM, 12, 2) AS TM
   , IMSI_NO
   , END_LTE_CELL_ID
  FROM BDPVIEW.l1dat_sscrb_loc_hst
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      ) ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_01_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , END_LTE_CELL_ID
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_01_TEMP
WHERE 1=1
 AND TM BETWEEN '09' AND '22'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP' AS
SELECT
  A.CUST_NO
 , A.BASE_TM
 , CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) AS LTE_CEL_ADDR
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_02_TEMP AS A
LEFT JOIN ( SELECT
     LTE_CEL_ID
    , CITY_NM
    , CCW_NM
    , TOWN_NM
   FROM BDPVIEW.l1nat_lte_cel_mstr_bas ) AS B
ON A.END_LTE_CELL_ID = B.LTE_CEL_ID
WHERE CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) IS NOT NULL
HAVING LTE_CEL_ADDR IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP ;


/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LTE_CEL_ADDR AS LOC
 , LAG(LTE_CEL_ADDR, 1) OVER(PARTITION BY CUST_NO ORDER BY BASE_TM) AS LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_03_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LOC
 , LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_07_TEMP ;


/*********************************** 로직 2 ***********************************/



/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , LOC
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_BUY_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP ;


/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_BUY_1W_07_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_주활동지역_방문가망고객_1주
 일시 : 2018. 07. 20
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



/* 가망고객 */




/*********************************** 로직 1 ***********************************/


/* PRD_NO & CUST_NO를 KEY로 사용할 테이블 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP ;

/* 해당 고객의 최근 1달간 위치데이터 생성 */
/* 고객, 시간, 지역(읍면동) KEY로 중계기 잡힌 횟수를 집계하여 데이터 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP' AS
SELECT
  B.CUST_NO
 , A.TM
 , A.BASE_TM
 , A.END_LTE_CELL_ID
FROM ( SELECT
    BASE_TM
   , SUBSTR(BASE_TM, 12, 2) AS TM
   , IMSI_NO
   , END_LTE_CELL_ID
  FROM BDPVIEW.l1dat_sscrb_loc_hst
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      ) ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_01_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , END_LTE_CELL_ID
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_01_TEMP
WHERE 1=1
 AND TM BETWEEN '09' AND '22'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP' AS
SELECT
  A.CUST_NO
 , A.BASE_TM
 , CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) AS LTE_CEL_ADDR
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_02_TEMP AS A
LEFT JOIN ( SELECT
     LTE_CEL_ID
    , CITY_NM
    , CCW_NM
    , TOWN_NM
   FROM BDPVIEW.l1nat_lte_cel_mstr_bas ) AS B
ON A.END_LTE_CELL_ID = B.LTE_CEL_ID
WHERE CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) IS NOT NULL
HAVING LTE_CEL_ADDR IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP ;

/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LTE_CEL_ADDR AS LOC
 , LAG(LTE_CEL_ADDR, 1) OVER(PARTITION BY CUST_NO ORDER BY BASE_TM) AS LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_03_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LOC
 , LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_07_TEMP ;

/*********************************** 로직 2 ***********************************/


/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , LOC
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_HPOS_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
  , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_HPOS_1W_07_TEMP ;




/* 방문고객 */




/*********************************** 로직 1 ***********************************/


/* PRD_NO & CUST_NO를 KEY로 사용할 테이블 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP ;

/* 해당 고객의 최근 1달간 위치데이터 생성 */
/* 고객, 시간, 지역(읍면동) KEY로 중계기 잡힌 횟수를 집계하여 데이터 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP' AS
SELECT
  B.CUST_NO
 , A.TM
 , A.BASE_TM
 , A.END_LTE_CELL_ID
FROM ( SELECT
    BASE_TM
   , SUBSTR(BASE_TM, 12, 2) AS TM
   , IMSI_NO
   , END_LTE_CELL_ID
  FROM BDPVIEW.l1dat_sscrb_loc_hst
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
     ) ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_01_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , END_LTE_CELL_ID
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_01_TEMP
WHERE 1=1
 AND TM BETWEEN '09' AND '22'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP' AS
SELECT
  A.CUST_NO
 , A.BASE_TM
 , CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) AS LTE_CEL_ADDR
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_02_TEMP AS A
LEFT JOIN ( SELECT
     LTE_CEL_ID
    , CITY_NM
    , CCW_NM
    , TOWN_NM
   FROM BDPVIEW.l1nat_lte_cel_mstr_bas ) AS B
ON A.END_LTE_CELL_ID = B.LTE_CEL_ID
WHERE CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) IS NOT NULL
HAVING LTE_CEL_ADDR IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP ;


/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LTE_CEL_ADDR AS LOC
 , LAG(LTE_CEL_ADDR, 1) OVER(PARTITION BY CUST_NO ORDER BY BASE_TM) AS LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_03_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LOC
 , LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_07_TEMP ;




/*********************************** 로직 2 ***********************************/


/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , LOC
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_VST_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP ;


/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP' AS
SELECT
  CAST(STORE_ID AS VARCHAR(100)) AS STORE_ID
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP' AS
SELECT
  CAST(STORE_ID AS STRING) AS STORE_ID
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY STORE_ID, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_07_TEMP' AS
SELECT
  STORE_ID
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY STORE_ID)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_VST_1W_07_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_주활동지역_업종고객_1주
 일시 : 2018. 07. 20
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



/*********************************** 로직 1 ***********************************/


/* PRD_NO & CUST_NO를 KEY로 사용할 테이블 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP ;

/* 해당 고객의 최근 1달간 위치데이터 생성 */
/* 고객, 시간, 지역(읍면동) KEY로 중계기 잡힌 횟수를 집계하여 데이터 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP' AS
SELECT
  B.CUST_NO
 , A.TM
 , A.BASE_TM
 , A.END_LTE_CELL_ID
FROM ( SELECT
    BASE_TM
   , SUBSTR(BASE_TM, 12, 2) AS TM
   , IMSI_NO
   , END_LTE_CELL_ID
  FROM BDPVIEW.l1dat_sscrb_loc_hst
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
     ) ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_01_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , END_LTE_CELL_ID
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_01_TEMP
WHERE 1=1
 AND TM BETWEEN '09' AND '22'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP' AS
SELECT
  A.CUST_NO
 , A.BASE_TM
 , CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) AS LTE_CEL_ADDR
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_02_TEMP AS A
LEFT JOIN ( SELECT
     LTE_CEL_ID
    , CITY_NM
    , CCW_NM
    , TOWN_NM
   FROM BDPVIEW.l1nat_lte_cel_mstr_bas ) AS B
ON A.END_LTE_CELL_ID = B.LTE_CEL_ID
WHERE CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) IS NOT NULL
HAVING LTE_CEL_ADDR IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP ;

/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LTE_CEL_ADDR AS LOC
 , LAG(LTE_CEL_ADDR, 1) OVER(PARTITION BY CUST_NO ORDER BY BASE_TM) AS LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_03_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LOC
 , LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP' AS
SELECT
  CAST(LRG_DIV AS VARCHAR(100)) AS LRG_DIV
 , CAST(MID_DIV AS VARCHAR(100)) AS MID_DIV
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP' AS
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP' AS
SELECT
  CAST(LRG_DIV AS STRING) AS LRG_DIV
 , CAST(MID_DIV AS STRING) AS MID_DIV
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY LRG_DIV, MID_DIV, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_07_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_07_TEMP ;

/*********************************** 로직 2 ***********************************/


/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , LOC
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP' AS
SELECT
  CAST(LRG_DIV AS VARCHAR(100)) AS LRG_DIV
 , CAST(MID_DIV AS VARCHAR(100)) AS MID_DIV
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP' AS
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP' AS
SELECT
  CAST(LRG_DIV AS STRING) AS LRG_DIV
 , CAST(MID_DIV AS STRING) AS MID_DIV
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY LRG_DIV, MID_DIV, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_07_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_1W_07_TEMP ;


/********************************************************** 대분류 & 중분류전체 ***********************************************************/




/*********************************** 로직 1 ***********************************/


/* PRD_NO & CUST_NO를 KEY로 사용할 테이블 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP ;

/* 해당 고객의 최근 1달간 위치데이터 생성 */
/* 고객, 시간, 지역(읍면동) KEY로 중계기 잡힌 횟수를 집계하여 데이터 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP' AS
SELECT
  B.CUST_NO
 , A.TM
 , A.BASE_TM
 , A.END_LTE_CELL_ID
FROM ( SELECT
    BASE_TM
   , SUBSTR(BASE_TM, 12, 2) AS TM
   , IMSI_NO
   , END_LTE_CELL_ID
  FROM BDPVIEW.l1dat_sscrb_loc_hst
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
     ) ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_01_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , END_LTE_CELL_ID
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_01_TEMP
WHERE 1=1
 AND TM BETWEEN '09' AND '22'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP' AS
SELECT
  A.CUST_NO
 , A.BASE_TM
 , CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) AS LTE_CEL_ADDR
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_02_TEMP AS A
LEFT JOIN ( SELECT
     LTE_CEL_ID
    , CITY_NM
    , CCW_NM
    , TOWN_NM
   FROM BDPVIEW.l1nat_lte_cel_mstr_bas ) AS B
ON A.END_LTE_CELL_ID = B.LTE_CEL_ID
WHERE CONCAT(B.CITY_NM, ' ', B.CCW_NM, ' ', B.TOWN_NM) IS NOT NULL
HAVING LTE_CEL_ADDR IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP ;

/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LTE_CEL_ADDR AS LOC
 , LAG(LTE_CEL_ADDR, 1) OVER(PARTITION BY CUST_NO ORDER BY BASE_TM) AS LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_03_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP' AS
SELECT
  CUST_NO
 , BASE_TM
 , LOC
 , LOC1
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP' AS
SELECT
  CAST(LRG_DIV AS VARCHAR(100)) AS LRG_DIV
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP' AS
SELECT
  A.LRG_DIV
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP' AS
SELECT
  CAST(LRG_DIV AS STRING) AS LRG_DIV
-- , MID_DIV
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY LRG_DIV, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY LRG_DIV ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_07_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_07_TEMP ;


/*********************************** 로직 2 ***********************************/



/* 연속해서 머무른 장소 중 최초 1개 빼고 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , LOC
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC1_INKND_LRG_1W_04_01_TEMP
WHERE 1=1
 AND LOC != LOC1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP ;

/* 상점 상품명 별 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP' AS
SELECT
  CAST(LRG_DIV AS VARCHAR(100)) AS LRG_DIV
 , CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP' AS
SELECT
   CAST(CUST_NO AS VARCHAR(50)) AS CUST_NO
  , LOC
  , COUNT(CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_04_TEMP
GROUP BY CUST_NO, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP' AS
SELECT
  A.LRG_DIV
 , B.LOC
 , A.CUST_NO
 , B.CNT
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_02_TEMP AS B
ON A.CUST_NO = B.CUST_NO
--WHERE B.LOC IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP' AS
SELECT
  CAST(LRG_DIV AS STRING) AS LRG_DIV
-- , MID_DIV
 , LOC
 , SUM(CNT) AS CNT
 , CASE WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '서울시' THEN 1
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경기도' THEN 2
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '부산시' THEN 3
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '인천시' THEN 4
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대구시' THEN 5
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '대전시' THEN 6
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '광주시' THEN 7
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '울산시' THEN 8
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '세종시' THEN 9
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경남' THEN 10
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '경북' THEN 11
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충남' THEN 12
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전남' THEN 13
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '전북' THEN 14
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '충북' THEN 15
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '강원도' THEN 16
   WHEN SUBSTR(LOC, 1, LOCATE(' ', TRIM(LOC))-1) = '제주특별자치도' THEN 17
   ELSE 99
   END AS CITY_NM_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_01_TEMP
WHERE LOC IS NOT NULL
GROUP BY LRG_DIV, LOC
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , RANK() OVER(PARTITION BY LRG_DIV ORDER BY CNT DESC, CITY_NM_RANK, LOC ) AS LOC_RANK
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP ;

/* 300위 내 컬럼만 남기기 - 데이터 사이즈 문제...... */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_07_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , LOC
 , CNT
 , CITY_NM_RANK
 , LOC_RANK
-- , CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) AS LOC_PSS_RTO
 , CASE WHEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) >= 0 AND CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) <= 1 THEN CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE) WHEN IS_NAN(CAST((CNT) AS DOUBLE)/CAST((SUM(CNT) OVER(PARTITION BY LRG_DIV)) AS DOUBLE)) = 1 THEN NULL ELSE NULL END AS LOC_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_06_TEMP
WHERE LOC_RANK <= 30
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_LOC_LOGC2_INKND_LRG_1W_07_TEMP ;
