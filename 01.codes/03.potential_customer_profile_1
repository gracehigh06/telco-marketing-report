--SET REQUEST_POOL=RPIDD;
--SET MEM_LIMIT=7G;

/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_구매고객_1주
 일시 : 2018. 07. 12
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/

/* 구매고객 (상점사이트방문고객) 모수 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_BUY_1W_01_TEMP' AS
SELECT DISTINCT
  B.STORE_ID
 , A.CUST_NO
FROM BDPVIEW.L1DAT_ELST_STLM_TXN AS A
INNER JOIN ( SELECT DISTINCT STORE_ID
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '1' ) AS B
ON A.STORE_ID = B.STORE_ID
WHERE 1=1
 AND A.TRX_CNCL_YN = 0             
 AND A.CUST_NO IS NOT NULL
 AND A.TRX_APRV_DT BETWEEN FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)), 'yyyyMMdd') AND FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyyMMdd')
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_방문가망고객_1주
 일시 : 2018. 07. 12
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/

/* 방문고객, 가망고객 (상점사이트방문고객) 모수 생성 */

/* 방문고객, 가망고객을 구분하기 위한 상점별, 고객별 방문횟수, 평균체류시간 집계 데이터 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP' AS
SELECT
    IMSI_NO
   , HOST_SITE_NM
   , PSS_TM
  FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM
  WHERE 1=1
   AND PSS_TM >= 10
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
     )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP' AS
SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP' AS
SELECT DISTINCT STORE_ID
     , HOST_SITE_NM
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '1'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_01_01_TEMP' AS
SELECT
  C.STORE_ID
 , B.CUST_NO
 , A.IMSI_NO
 , A.PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_02_TEMP AS B
ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_03_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
LEFT ANTI JOIN BDPL200.L2COT_DYNA_ANAL_OCEM_HPNO_LIST AS T3
ON B.PRD_NO = T3.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_01_TEMP' AS
SELECT
  STORE_ID
 , CUST_NO
 , COUNT(IMSI_NO) AS VST_CNT
 , SUM(PSS_TM) AS SUM_PSS_TM
 , SUM(PSS_TM)/COUNT(IMSI_NO) AS AVG_PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_01_01_TEMP
GROUP BY STORE_ID, CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP ;

/* 방문고객 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_VST_1W_02_TEMP' AS
SELECT
  STORE_ID
 , CUST_NO
 , VST_CNT
 , SUM_PSS_TM
 , AVG_PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP
WHERE 1=1
 AND VST_CNT >= 1
 AND AVG_PSS_TM >= 10
;


COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ;

/* 가망고객 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HPOS_1W_02_TEMP' AS
SELECT
  STORE_ID
 , CUST_NO
 , VST_CNT
 , SUM_PSS_TM
 , AVG_PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_01_TEMP
WHERE 1=1
 AND VST_CNT >= 2
 AND AVG_PSS_TM >= 60
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_업종고객_1주
 일시 : 2018. 07. 11
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/

/* 업종고객(업종사이트방문고객) 모수 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_INKND_1W_01_TEMP' AS
SELECT DISTINCT
  C.LRG_DIV
 , C.MID_DIV
-- , C.SML_DIV
 , B.CUST_NO
FROM ( SELECT DISTINCT
    IMSI_NO
   , HOST_SITE_NM
  FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM
  WHERE 1=1
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
     ) ) AS A
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.IMSI_NO = B.PRD_NO
INNER JOIN ( SELECT DISTINCT
      IDKD_LCLS_CD_NM AS LRG_DIV
     , IDKD_MCLS_CD_NM AS MID_DIV
--     , SML_DIV
     , HOST_SITE_NM
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '1' ) AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
LEFT ANTI JOIN BDPL200.L2COT_DYNA_ANAL_OCEM_HPNO_LIST AS T3
ON B.PRD_NO = T3.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ;

/********************************************************** 대분류 & 중분류전체 ***********************************************************/

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP' AS
SELECT DISTINCT
  LRG_DIV
-- , MID_DIV
-- , SML_DIV
 , CUST_NO
FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_DEMO_구매고객_1주
 일시 : 2018. 07. 12
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 성/연령 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP' AS
SELECT '남자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '10.60~' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '10.60~' AS AGE_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP;


/* 성/연령 DEMO 정보 결합 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP' AS
SELECT
    A.CUST_NO
   , B.CUST_AGE
   , B.SEX_DV_CD
   , B.YY10_AGELV_ID
   , B.SEX_DV_NM
   , CASE  WHEN B.CUST_AGE <= 19 THEN '01.~19'
       WHEN B.CUST_AGE BETWEEN 20 AND 24 THEN '02.20~24'
       WHEN B.CUST_AGE BETWEEN 25 AND 29 THEN '03.25~29'
       WHEN B.CUST_AGE BETWEEN 30 AND 34 THEN '04.30~34'
       WHEN B.CUST_AGE BETWEEN 35 AND 39 THEN '05.35~39'
       WHEN B.CUST_AGE BETWEEN 40 AND 44 THEN '06.40~44'
       WHEN B.CUST_AGE BETWEEN 45 AND 49 THEN '07.45~49'
       WHEN B.CUST_AGE BETWEEN 50 AND 54 THEN '08.50~54'
       WHEN B.CUST_AGE BETWEEN 55 AND 59 THEN '09.55~59'
       WHEN B.CUST_AGE >= 60 THEN '10.60~'
       ELSE NULL
      END AS AGE_DIV       
FROM ( SELECT DISTINCT
    CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
  --ORDER BY CUST_NO
 ) AS A              -- 고객 INDEX 생성  
LEFT JOIN ( SELECT DISTINCT
      CUST_NO
     , SEX_DV_CD
     , CUST_AGE
     , YY10_AGELV_ID
     , SEX_DV_NM
    FROM BDPVIEW.L1AAT_CUST_BAS ) AS B -- L1_고객마스터
ON A.CUST_NO = B.CUST_NO  
--ORDER BY A.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP ;

/* SUMMARY */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT/SUM(CNT) OVER(PARTITION BY STORE_ID) AS CNT_PSS_RTO
FROM ( SELECT
     A.STORE_ID
      , B.SEX_DV_NM
      , B.AGE_DIV
      , COUNT(DISTINCT A.CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_01_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  WHERE 1=1
   AND B.SEX_DV_NM IS NOT NULL
   AND B.AGE_DIV IS NOT NULL
  GROUP BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  --ORDER BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_BUY_1W_03_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT_PSS_RTO
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, AGE_DIV, SEX_DV_NM DESC) AS SEX_AGE_DV_RANK
FROM (
SELECT
  A.STORE_ID
 , A.SEX_DV_NM
 , A.AGE_DIV
 , COALESCE(B.CNT, 0) AS CNT
 , COALESCE(B.CNT_PSS_RTO, 0) AS CNT_PSS_RTO
FROM (
  SELECT
    A1.STORE_ID
   , B1.SEX_DV_NM
   , B1.AGE_DIV
  FROM ( SELECT DISTINCT
      STORE_ID
    FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ) AS A1
  CROSS JOIN ( SELECT
       SEX_DV_NM
      , AGE_DIV
     FROM BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_00_TEMP ) AS B1
                    ) AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_02_TEMP AS B
ON A.STORE_ID = B.STORE_ID AND A.SEX_DV_NM = B.SEX_DV_NM AND A.AGE_DIV = B.AGE_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_BUY_1W_03_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_DEMO_방문가망고객_1주
 일시 : 2018. 07. 12
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/

/* 가망고객 */


/* 성/연령 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP' AS
SELECT '남자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '10.60~' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '10.60~' AS AGE_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP;

/* 성/연령 DEMO 정보 결합 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP' AS
SELECT
    A.CUST_NO
   , B.CUST_AGE
   , B.SEX_DV_CD
   , B.YY10_AGELV_ID
   , B.SEX_DV_NM
   , CASE  WHEN B.CUST_AGE <= 19 THEN '01.~19'
       WHEN B.CUST_AGE BETWEEN 20 AND 24 THEN '02.20~24'
       WHEN B.CUST_AGE BETWEEN 25 AND 29 THEN '03.25~29'
       WHEN B.CUST_AGE BETWEEN 30 AND 34 THEN '04.30~34'
       WHEN B.CUST_AGE BETWEEN 35 AND 39 THEN '05.35~39'
       WHEN B.CUST_AGE BETWEEN 40 AND 44 THEN '06.40~44'
       WHEN B.CUST_AGE BETWEEN 45 AND 49 THEN '07.45~49'
       WHEN B.CUST_AGE BETWEEN 50 AND 54 THEN '08.50~54'
       WHEN B.CUST_AGE BETWEEN 55 AND 59 THEN '09.55~59'
       WHEN B.CUST_AGE >= 60 THEN '10.60~'
       ELSE NULL
      END AS AGE_DIV       
FROM ( SELECT DISTINCT
    CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
  --ORDER BY CUST_NO
  ) AS A              -- 고객 INDEX 생성  
LEFT JOIN ( SELECT DISTINCT
      CUST_NO
     , SEX_DV_CD
     , CUST_AGE
     , YY10_AGELV_ID
     , SEX_DV_NM
    FROM BDPVIEW.L1AAT_CUST_BAS ) AS B -- L1_고객마스터
ON A.CUST_NO = B.CUST_NO  
--ORDER BY A.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP ;

/* SUMMARY */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT/SUM(CNT) OVER(PARTITION BY STORE_ID) AS CNT_PSS_RTO
FROM ( SELECT
     A.STORE_ID
      , B.SEX_DV_NM
      , B.AGE_DIV
      , COUNT(DISTINCT A.CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_01_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  WHERE 1=1
   AND B.SEX_DV_NM IS NOT NULL
   AND B.AGE_DIV IS NOT NULL
  GROUP BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  --ORDER BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_HPOS_1W_03_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT_PSS_RTO 
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, AGE_DIV, SEX_DV_NM DESC) AS SEX_AGE_DV_RANK
FROM (
SELECT
  A.STORE_ID
 , A.SEX_DV_NM
 , A.AGE_DIV
 , COALESCE(B.CNT, 0) AS CNT
 , COALESCE(B.CNT_PSS_RTO, 0) AS CNT_PSS_RTO  
FROM (
  SELECT
    A1.STORE_ID
   , B1.SEX_DV_NM
   , B1.AGE_DIV
  FROM ( SELECT DISTINCT
      STORE_ID
    FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ) AS A1
  CROSS JOIN ( SELECT
       SEX_DV_NM
      , AGE_DIV
     FROM BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_00_TEMP ) AS B1
                    ) AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_02_TEMP AS B
ON A.STORE_ID = B.STORE_ID AND A.SEX_DV_NM = B.SEX_DV_NM AND A.AGE_DIV = B.AGE_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_HPOS_1W_03_TEMP ;

/* 방문고객 */


/* 성/연령 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP' AS
SELECT '남자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '10.60~' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '10.60~' AS AGE_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP;

/* 성/연령 DEMO 정보 결합 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP' AS
SELECT
    A.CUST_NO
   , B.CUST_AGE
   , B.SEX_DV_CD
   , B.YY10_AGELV_ID
   , B.SEX_DV_NM
   , CASE  WHEN B.CUST_AGE <= 19 THEN '01.~19'
       WHEN B.CUST_AGE BETWEEN 20 AND 24 THEN '02.20~24'
       WHEN B.CUST_AGE BETWEEN 25 AND 29 THEN '03.25~29'
       WHEN B.CUST_AGE BETWEEN 30 AND 34 THEN '04.30~34'
       WHEN B.CUST_AGE BETWEEN 35 AND 39 THEN '05.35~39'
       WHEN B.CUST_AGE BETWEEN 40 AND 44 THEN '06.40~44'
       WHEN B.CUST_AGE BETWEEN 45 AND 49 THEN '07.45~49'
       WHEN B.CUST_AGE BETWEEN 50 AND 54 THEN '08.50~54'
       WHEN B.CUST_AGE BETWEEN 55 AND 59 THEN '09.55~59'
       WHEN B.CUST_AGE >= 60 THEN '10.60~'
       ELSE NULL
      END AS AGE_DIV       
FROM ( SELECT DISTINCT
    CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP
  --ORDER BY CUST_NO
  ) AS A              -- 고객 INDEX 생성  
LEFT JOIN ( SELECT DISTINCT
      CUST_NO
     , SEX_DV_CD
     , CUST_AGE
     , YY10_AGELV_ID
     , SEX_DV_NM
    FROM BDPVIEW.L1AAT_CUST_BAS ) AS B -- L1_고객마스터
ON A.CUST_NO = B.CUST_NO  
--ORDER BY A.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP ;

/* SUMMARY */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT/SUM(CNT) OVER(PARTITION BY STORE_ID) AS CNT_PSS_RTO
FROM ( SELECT
     A.STORE_ID
      , B.SEX_DV_NM
      , B.AGE_DIV
      , COUNT(DISTINCT A.CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_01_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  WHERE 1=1
   AND B.SEX_DV_NM IS NOT NULL
   AND B.AGE_DIV IS NOT NULL
  GROUP BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  --ORDER BY A.STORE_ID, B.SEX_DV_NM, B.AGE_DIV
  ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_VST_1W_03_TEMP' AS
SELECT
  STORE_ID
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT_PSS_RTO
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY CNT DESC, AGE_DIV, SEX_DV_NM DESC) AS SEX_AGE_DV_RANK
FROM (
SELECT
  A.STORE_ID
 , A.SEX_DV_NM
 , A.AGE_DIV
 , COALESCE(B.CNT, 0) AS CNT
 , COALESCE(B.CNT_PSS_RTO, 0) AS CNT_PSS_RTO  
FROM (
  SELECT
    A1.STORE_ID
   , B1.SEX_DV_NM
   , B1.AGE_DIV
  FROM ( SELECT DISTINCT
      STORE_ID
    FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ) AS A1
  CROSS JOIN ( SELECT
       SEX_DV_NM
      , AGE_DIV
     FROM BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_00_TEMP ) AS B1
                    ) AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_02_TEMP AS B
ON A.STORE_ID = B.STORE_ID AND A.SEX_DV_NM = B.SEX_DV_NM AND A.AGE_DIV = B.AGE_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_VST_1W_03_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_DEMO_업종고객_1주
 일시 : 2018. 07. 11
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 성/연령 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP' AS
SELECT '남자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '10.60~' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '10.60~' AS AGE_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP;


/* 성/연령 DEMO 정보 결합 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP' AS
SELECT
    A.CUST_NO
   , B.CUST_AGE
   , B.SEX_DV_CD
   , B.YY10_AGELV_ID
   , B.SEX_DV_NM
   , CASE  WHEN B.CUST_AGE <= 19 THEN '01.~19'
       WHEN B.CUST_AGE BETWEEN 20 AND 24 THEN '02.20~24'
       WHEN B.CUST_AGE BETWEEN 25 AND 29 THEN '03.25~29'
       WHEN B.CUST_AGE BETWEEN 30 AND 34 THEN '04.30~34'
       WHEN B.CUST_AGE BETWEEN 35 AND 39 THEN '05.35~39'
       WHEN B.CUST_AGE BETWEEN 40 AND 44 THEN '06.40~44'
       WHEN B.CUST_AGE BETWEEN 45 AND 49 THEN '07.45~49'
       WHEN B.CUST_AGE BETWEEN 50 AND 54 THEN '08.50~54'
       WHEN B.CUST_AGE BETWEEN 55 AND 59 THEN '09.55~59'
       WHEN B.CUST_AGE >= 60 THEN '10.60~'
       ELSE NULL
      END AS AGE_DIV       
FROM ( SELECT DISTINCT
    CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
  --ORDER BY CUST_NO
  ) AS A              -- 고객 INDEX 생성  
LEFT JOIN ( SELECT DISTINCT
      CUST_NO
     , SEX_DV_CD
     , CUST_AGE
     , YY10_AGELV_ID
     , SEX_DV_NM
    FROM BDPVIEW.L1AAT_CUST_BAS ) AS B -- L1_고객마스터
ON A.CUST_NO = B.CUST_NO  
--ORDER BY A.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP ;

/* SUMMARY */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP' AS
SELECT
  LRG_DIV
   , MID_DIV
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT/SUM(CNT) OVER(PARTITION BY LRG_DIV, MID_DIV) AS CNT_PSS_RTO
FROM ( SELECT
     A.LRG_DIV
      , A.MID_DIV
      , B.SEX_DV_NM
      , B.AGE_DIV
      , COUNT(DISTINCT A.CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_01_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  WHERE 1=1
   AND B.SEX_DV_NM IS NOT NULL
   AND B.AGE_DIV IS NOT NULL
  GROUP BY A.LRG_DIV, A.MID_DIV, B.SEX_DV_NM, B.AGE_DIV
  --ORDER BY A.LRG_DIV, A.MID_DIV, B.SEX_DV_NM, B.AGE_DIV
  ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_1W_03_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT_PSS_RTO 
 , RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY CNT DESC, AGE_DIV, SEX_DV_NM DESC) AS SEX_AGE_DV_RANK
FROM (
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , A.SEX_DV_NM
 , A.AGE_DIV
 , COALESCE(B.CNT, 0) AS CNT
 , COALESCE(B.CNT_PSS_RTO, 0) AS CNT_PSS_RTO  
FROM (
  SELECT
    A1.LRG_DIV
   , A1.MID_DIV
   , B1.SEX_DV_NM
   , B1.AGE_DIV
  FROM ( SELECT DISTINCT
      LRG_DIV
     , MID_DIV
    FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ) AS A1
  CROSS JOIN ( SELECT
       SEX_DV_NM
      , AGE_DIV
     FROM BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_00_TEMP ) AS B1
                    ) AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_02_TEMP AS B
ON A.LRG_DIV = B.LRG_DIV AND A.MID_DIV = B.MID_DIV AND A.SEX_DV_NM = B.SEX_DV_NM AND A.AGE_DIV = B.AGE_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_1W_03_TEMP ;


/********************************************************** 대분류 & 중분류전체 ***********************************************************/


/* 성/연령 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP' AS
SELECT '남자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '남자' AS SEX_DV_NM, '10.60~' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '01.~19' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '02.20~24' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '03.25~29' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '04.30~34' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '05.35~39' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '06.40~44' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '07.45~49' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '08.50~54' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '09.55~59' AS AGE_DIV UNION ALL
SELECT '여자' AS SEX_DV_NM, '10.60~' AS AGE_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP;


/* 성/연령 DEMO 정보 결합 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP' AS
SELECT
    A.CUST_NO
   , B.CUST_AGE
   , B.SEX_DV_CD
   , B.YY10_AGELV_ID
   , B.SEX_DV_NM
   , CASE  WHEN B.CUST_AGE <= 19 THEN '01.~19'
       WHEN B.CUST_AGE BETWEEN 20 AND 24 THEN '02.20~24'
       WHEN B.CUST_AGE BETWEEN 25 AND 29 THEN '03.25~29'
       WHEN B.CUST_AGE BETWEEN 30 AND 34 THEN '04.30~34'
       WHEN B.CUST_AGE BETWEEN 35 AND 39 THEN '05.35~39'
       WHEN B.CUST_AGE BETWEEN 40 AND 44 THEN '06.40~44'
       WHEN B.CUST_AGE BETWEEN 45 AND 49 THEN '07.45~49'
       WHEN B.CUST_AGE BETWEEN 50 AND 54 THEN '08.50~54'
       WHEN B.CUST_AGE BETWEEN 55 AND 59 THEN '09.55~59'
       WHEN B.CUST_AGE >= 60 THEN '10.60~'
       ELSE NULL
      END AS AGE_DIV       
FROM ( SELECT DISTINCT
    CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP
  --ORDER BY CUST_NO
  ) AS A              -- 고객 INDEX 생성  
LEFT JOIN ( SELECT DISTINCT
      CUST_NO
     , SEX_DV_CD
     , CUST_AGE
     , YY10_AGELV_ID
     , SEX_DV_NM
    FROM BDPVIEW.L1AAT_CUST_BAS ) AS B -- L1_고객마스터
ON A.CUST_NO = B.CUST_NO  
--ORDER BY A.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP ;

/* SUMMARY */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP' AS
SELECT
  LRG_DIV
--  , MID_DIV
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT/SUM(CNT) OVER(PARTITION BY LRG_DIV) AS CNT_PSS_RTO
FROM ( SELECT
     A.LRG_DIV
--      , A.MID_DIV
      , B.SEX_DV_NM
      , B.AGE_DIV
      , COUNT(DISTINCT A.CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_01_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  WHERE 1=1
   AND B.SEX_DV_NM IS NOT NULL
   AND B.AGE_DIV IS NOT NULL
  GROUP BY A.LRG_DIV, B.SEX_DV_NM, B.AGE_DIV
  --ORDER BY A.LRG_DIV, B.SEX_DV_NM, B.AGE_DIV
  ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_03_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , SEX_DV_NM
 , AGE_DIV
 , CNT
 , CNT_PSS_RTO
 , RANK() OVER(PARTITION BY LRG_DIV ORDER BY CNT DESC, AGE_DIV, SEX_DV_NM DESC) AS SEX_AGE_DV_RANK
FROM (
SELECT
  A.LRG_DIV
-- , A.MID_DIV
 , A.SEX_DV_NM
 , A.AGE_DIV
 , COALESCE(B.CNT, 0) AS CNT
 , COALESCE(B.CNT_PSS_RTO, 0) AS CNT_PSS_RTO  
FROM (
  SELECT
    A1.LRG_DIV
--   , A1.MID_DIV
   , B1.SEX_DV_NM
   , B1.AGE_DIV
  FROM ( SELECT DISTINCT
      LRG_DIV
--     , MID_DIV
    FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ) AS A1
  CROSS JOIN ( SELECT
       SEX_DV_NM
      , AGE_DIV
     FROM BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_00_TEMP ) AS B1
                    ) AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_02_TEMP AS B
ON A.LRG_DIV = B.LRG_DIV AND A.SEX_DV_NM = B.SEX_DV_NM AND A.AGE_DIV = B.AGE_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_DEMO_INKND_LRG_1W_03_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_가구정보_U+모바일전체고객_1주
 일시 : 2018. 07. 26
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* U+모바일전체고객에 가구정보 조인 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP' AS
SELECT
        A.CUST_NO
 , B.HSHD_DV
FROM ( SELECT
    TMP.CUST_NO
   , TMP.PRD_NO
   , TMP.RANK_PRD_NO
  FROM ( SELECT
      CUST_NO
     , PRD_NO
     , RANK() OVER(PARTITION BY CUST_NO ORDER BY FRST_ENTR_DT DESC, ACE_NO DESC) AS RANK_PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS -- L1_고객마스터
    WHERE ENTR_STTS_CD = 'A' ) TMP
  WHERE TMP.RANK_PRD_NO = 1 ) AS A
LEFT JOIN ( SELECT
      BASE_YYMM
     , CTN_NO
     , CUST_NO
     , CUST_AGE
     , SEX_DV_NM
     , CASE WHEN HSEBY_HSHD_DV_CD IN ('101', '102', '103', '104', '105', '106') THEN '1인가구'
       WHEN HSEBY_HSHD_DV_CD IN ('201', '202', '203', '204', '205') THEN '2인가구'
       WHEN HSEBY_HSHD_DV_CD IN ('301', '302', '303', '304', '305') THEN '3인가구'
       WHEN HSEBY_HSHD_DV_CD IN ('401', '402', '403', '404', '405') THEN '4인가구'
       WHEN HSEBY_HSHD_DV_CD IN ('501', '502', '503', '504', '505') THEN '5인가구'
       WHEN HSEBY_HSHD_DV_CD IN ('601', '602', '603', '604', '605') THEN '6인가구'
       END AS HSHD_DV
    FROM BDPVIEW.L2BCT_INTG_MBL_INDIV_IST  -- L2_통합모바일특성인사이트
    WHERE 1=1
     AND BASE_YYMM=FROM_UNIXTIME(UNIX_TIMESTAMP(ADD_MONTHS(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)), 'yyyyMM')
     AND CUST_NO IS NOT NULL ) AS B
ON A.PRD_NO = B.CTN_NO
WHERE 1=1
 AND A.CUST_NO IS NOT NULL
 AND B.HSHD_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP' AS
SELECT
  HSHD_DV
 , CNT
 , CNT/(SUM(CNT) OVER()) AS PSS_RTO
FROM ( SELECT
    HSHD_DV
   , COUNT(DISTINCT CUST_NO) AS CNT
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP
  GROUP BY HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_가구정보_구매고객_1주
 일시 : 2018. 07. 26
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP' AS
SELECT '1인가구' AS HSHD_DV UNION ALL
SELECT '2인가구' AS HSHD_DV UNION ALL
SELECT '3인가구' AS HSHD_DV UNION ALL
SELECT '4인가구' AS HSHD_DV UNION ALL
SELECT '5인가구' AS HSHD_DV UNION ALL
SELECT '6인가구' AS HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.HSHD_DV
 , COUNT(DISTINCT A.CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP AS B
ON A.CUST_NO = B.CUST_NO
WHERE 1=1
 AND B.HSHD_DV IS NOT NULL
GROUP BY A.STORE_ID, B.HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP' AS
SELECT
  C.STORE_ID
 , C.HSHD_DV
 , C.CNT
-- , C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) AS PSS_RTO
 , CASE WHEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) >= 0 AND C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) <= 1 THEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) WHEN IS_NAN(C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID))) = 1 THEN NULL ELSE NULL END AS PSS_RTO
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , COALESCE(B.CNT, 0) AS CNT
  FROM ( SELECT
      A1.STORE_ID
     , B1.HSHD_DV
    FROM ( SELECT DISTINCT
        STORE_ID
      FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ) AS A1
    CROSS JOIN ( SELECT
         HSHD_DV
       FROM BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_00_TEMP ) AS B1 ) AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_01_TEMP AS B
  ON A.STORE_ID = B.STORE_ID AND A.HSHD_DV = B.HSHD_DV ) AS C
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_BUY_1W_03_TEMP' AS
SELECT
  STORE_ID
 , HSHD_DV
 , CNT
 , PSS_RTO
 , MBL_CNT
 , MBL_PSS_RTO
 , PSS_RTO_DIFFR
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFFR DESC, PSS_RTO DESC, MBL_PSS_RTO DESC, HSHD_DV DESC) AS HSHD_RANK
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , A.CNT
   , A.PSS_RTO
   , B.CNT AS MBL_CNT
   , B.PSS_RTO AS MBL_PSS_RTO
   , A.PSS_RTO - B.PSS_RTO AS PSS_RTO_DIFFR
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP AS B
  ON A.HSHD_DV = B.HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_BUY_1W_03_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_가구정보_방문가망고객_1주
 일시 : 2018. 07. 26
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 가망고객 */



/* 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP' AS
SELECT '1인가구' AS HSHD_DV UNION ALL
SELECT '2인가구' AS HSHD_DV UNION ALL
SELECT '3인가구' AS HSHD_DV UNION ALL
SELECT '4인가구' AS HSHD_DV UNION ALL
SELECT '5인가구' AS HSHD_DV UNION ALL
SELECT '6인가구' AS HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.HSHD_DV
 , COUNT(DISTINCT A.CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP AS B
ON A.CUST_NO = B.CUST_NO
WHERE 1=1
 AND B.HSHD_DV IS NOT NULL
GROUP BY A.STORE_ID, B.HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP' AS
SELECT
  C.STORE_ID
 , C.HSHD_DV
 , C.CNT
-- , C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) AS PSS_RTO
  , CASE WHEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) >= 0 AND C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) <= 1 THEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) WHEN IS_NAN(C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID))) = 1 THEN NULL ELSE NULL END AS PSS_RTO
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , COALESCE(B.CNT, 0) AS CNT
  FROM ( SELECT
      A1.STORE_ID
     , B1.HSHD_DV
    FROM ( SELECT DISTINCT
        STORE_ID
      FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP ) AS A1
    CROSS JOIN ( SELECT
         HSHD_DV
       FROM BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_00_TEMP ) AS B1 ) AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_01_TEMP AS B
  ON A.STORE_ID = B.STORE_ID AND A.HSHD_DV = B.HSHD_DV ) AS C
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_HPOS_1W_03_TEMP' AS
SELECT
  STORE_ID
 , HSHD_DV
 , CNT
 , PSS_RTO
 , MBL_CNT
 , MBL_PSS_RTO
 , PSS_RTO_DIFFR
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFFR DESC, PSS_RTO DESC, MBL_PSS_RTO DESC, HSHD_DV DESC) AS HSHD_RANK
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , A.CNT
   , A.PSS_RTO
   , B.CNT AS MBL_CNT
   , B.PSS_RTO AS MBL_PSS_RTO
   , A.PSS_RTO - B.PSS_RTO AS PSS_RTO_DIFFR
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP AS B
  ON A.HSHD_DV = B.HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_HPOS_1W_03_TEMP ;


/* 방문고객 */




/* 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP' AS
SELECT '1인가구' AS HSHD_DV UNION ALL
SELECT '2인가구' AS HSHD_DV UNION ALL
SELECT '3인가구' AS HSHD_DV UNION ALL
SELECT '4인가구' AS HSHD_DV UNION ALL
SELECT '5인가구' AS HSHD_DV UNION ALL
SELECT '6인가구' AS HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP' AS
SELECT
  A.STORE_ID
 , B.HSHD_DV
 , COUNT(DISTINCT A.CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP AS B
ON A.CUST_NO = B.CUST_NO
WHERE 1=1
 AND B.HSHD_DV IS NOT NULL
GROUP BY A.STORE_ID, B.HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP' AS
SELECT
  C.STORE_ID
 , C.HSHD_DV
 , C.CNT
-- , C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) AS PSS_RTO
  , CASE WHEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) >= 0 AND C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) <= 1 THEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID)) WHEN IS_NAN(C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.STORE_ID))) = 1 THEN NULL ELSE NULL END AS PSS_RTO
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , COALESCE(B.CNT, 0) AS CNT
  FROM ( SELECT
      A1.STORE_ID
     , B1.HSHD_DV
    FROM ( SELECT DISTINCT
        STORE_ID
      FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP ) AS A1
    CROSS JOIN ( SELECT
         HSHD_DV
       FROM BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_00_TEMP ) AS B1 ) AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_01_TEMP AS B
  ON A.STORE_ID = B.STORE_ID AND A.HSHD_DV = B.HSHD_DV ) AS C
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_VST_1W_03_TEMP' AS
SELECT
  STORE_ID
 , HSHD_DV
 , CNT
 , PSS_RTO
 , MBL_CNT
 , MBL_PSS_RTO
 , PSS_RTO_DIFFR
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFFR DESC, PSS_RTO DESC, MBL_PSS_RTO DESC, HSHD_DV DESC) AS HSHD_RANK
FROM ( SELECT
    A.STORE_ID
   , A.HSHD_DV
   , A.CNT
   , A.PSS_RTO
   , B.CNT AS MBL_CNT
   , B.PSS_RTO AS MBL_PSS_RTO
   , A.PSS_RTO - B.PSS_RTO AS PSS_RTO_DIFFR
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP AS B
  ON A.HSHD_DV = B.HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_VST_1W_03_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_가구정보_업종고객_1주
 일시 : 2018. 07. 26
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



/* 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP' AS
SELECT '1인가구' AS HSHD_DV UNION ALL
SELECT '2인가구' AS HSHD_DV UNION ALL
SELECT '3인가구' AS HSHD_DV UNION ALL
SELECT '4인가구' AS HSHD_DV UNION ALL
SELECT '5인가구' AS HSHD_DV UNION ALL
SELECT '6인가구' AS HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP' AS
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , B.HSHD_DV
 , COUNT(DISTINCT A.CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP AS B
ON A.CUST_NO = B.CUST_NO
WHERE 1=1
 AND B.HSHD_DV IS NOT NULL
GROUP BY A.LRG_DIV, A.MID_DIV, B.HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP' AS
SELECT
  C.LRG_DIV
 , C.MID_DIV
 , C.HSHD_DV
 , C.CNT
-- , C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV, C.MID_DIV)) AS PSS_RTO
 , CASE WHEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV, C.MID_DIV)) >= 0 AND C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV, C.MID_DIV)) <= 1 THEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV, C.MID_DIV)) WHEN IS_NAN(C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV, C.MID_DIV))) = 1 THEN NULL ELSE NULL END AS PSS_RTO
FROM ( SELECT
    A.LRG_DIV
   , A.MID_DIV
   , A.HSHD_DV
   , COALESCE(B.CNT, 0) AS CNT
  FROM ( SELECT
      A1.LRG_DIV
     , A1.MID_DIV
     , B1.HSHD_DV
    FROM ( SELECT DISTINCT
        LRG_DIV
       , MID_DIV
      FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP ) AS A1
    CROSS JOIN ( SELECT
         HSHD_DV
       FROM BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_00_TEMP ) AS B1 ) AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_01_TEMP AS B
  ON A.LRG_DIV = B.LRG_DIV AND A.MID_DIV = B.MID_DIV AND A.HSHD_DV = B.HSHD_DV ) AS C
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_1W_03_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , HSHD_DV
 , CNT
 , PSS_RTO
 , MBL_CNT
 , MBL_PSS_RTO
 , PSS_RTO_DIFFR
 , RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY PSS_RTO_DIFFR DESC, PSS_RTO DESC, MBL_PSS_RTO DESC, HSHD_DV DESC) AS HSHD_RANK
FROM ( SELECT
    A.LRG_DIV
   , A.MID_DIV
   , A.HSHD_DV
   , A.CNT
   , A.PSS_RTO
   , B.CNT AS MBL_CNT
   , B.PSS_RTO AS MBL_PSS_RTO
   , A.PSS_RTO - B.PSS_RTO AS PSS_RTO_DIFFR
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP AS B
  ON A.HSHD_DV = B.HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_1W_03_TEMP ;

/********************************************************** 대분류 & 중분류전체 ***********************************************************/



/* 참조테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP' AS
SELECT '1인가구' AS HSHD_DV UNION ALL
SELECT '2인가구' AS HSHD_DV UNION ALL
SELECT '3인가구' AS HSHD_DV UNION ALL
SELECT '4인가구' AS HSHD_DV UNION ALL
SELECT '5인가구' AS HSHD_DV UNION ALL
SELECT '6인가구' AS HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP' AS
SELECT
  A.LRG_DIV
-- , A.MID_DIV
 , B.HSHD_DV
 , COUNT(DISTINCT A.CUST_NO) AS CNT
FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_01_TEMP AS B
ON A.CUST_NO = B.CUST_NO
WHERE 1=1
 AND B.HSHD_DV IS NOT NULL
GROUP BY A.LRG_DIV, B.HSHD_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP' AS
SELECT
  C.LRG_DIV
-- , C.MID_DIV
 , C.HSHD_DV
 , C.CNT
-- , C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV)) AS PSS_RTO
 , CASE WHEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV)) >= 0 AND C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV)) <= 1 THEN C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV)) WHEN IS_NAN(C.CNT/(SUM(C.CNT) OVER(PARTITION BY C.LRG_DIV))) = 1 THEN NULL ELSE NULL END AS PSS_RTO
FROM ( SELECT
    A.LRG_DIV
--   , A.MID_DIV
   , A.HSHD_DV
   , COALESCE(B.CNT, 0) AS CNT
  FROM ( SELECT
      A1.LRG_DIV
--     , A1.MID_DIV
     , B1.HSHD_DV
    FROM ( SELECT DISTINCT
        LRG_DIV
--       , MID_DIV
      FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP ) AS A1
    CROSS JOIN ( SELECT
         HSHD_DV
       FROM BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_00_TEMP ) AS B1 ) AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_01_TEMP AS B
  ON A.LRG_DIV = B.LRG_DIV AND A.HSHD_DV = B.HSHD_DV ) AS C
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_03_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , HSHD_DV
 , CNT
 , PSS_RTO
 , MBL_CNT
 , MBL_PSS_RTO
 , PSS_RTO_DIFFR
 , RANK() OVER(PARTITION BY LRG_DIV ORDER BY PSS_RTO_DIFFR DESC, PSS_RTO DESC, MBL_PSS_RTO DESC, HSHD_DV DESC) AS HSHD_RANK
FROM ( SELECT
    A.LRG_DIV
--   , A.MID_DIV
   , A.HSHD_DV
   , A.CNT
   , A.PSS_RTO
   , B.CNT AS MBL_CNT
   , B.PSS_RTO AS MBL_PSS_RTO
   , A.PSS_RTO - B.PSS_RTO AS PSS_RTO_DIFFR
  FROM BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_HSHD_MBL_1W_02_TEMP AS B
  ON A.HSHD_DV = B.HSHD_DV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_HSHD_INKND_LRG_1W_03_TEMP ;
