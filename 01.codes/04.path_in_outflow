/****************************************************************************************************************************

 제목 : 유입이탈경로_1일
 일시 : 2018. 08. 13
 버전 : v01
 --수정 19-01-18: duration 으로 변경확인
    
****************************************************************************************************************************/


/***************************************************************************************************
  01. 우리상점(사이트/홈페이지) 인입
***************************************************************************************************/
/* RAW 데이터 가져오기 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_01_TEMP' AS
SELECT
  A.IMSI
 , A.START_TIME
 , A.HOST_NAME
 , SUM(A.PSS_TM) AS PSS_TM
FROM ( SELECT
    IMSI
   , START_TIME
   , CONCAT(HOST_NAME_SERV, '.', HOST_NAME_PROV) AS HOST_NAME
   , CAST(DURATION AS DECIMAL(20,4)) AS PSS_TM
  FROM BDPVIEW.L0NMT_F_NMS_LQ_SGI_96W_A
  WHERE 1=1
   AND HOST_NAME_PROV IS NOT NULL   
   AND HOST_NAME_PROV != ''
   AND CAST(DURATION AS DECIMAL(20,4)) > 0
   AND (     
              (     P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2))
               AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2))
               AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2))
               AND P_BASIS_HH = 23 )
         OR  (    P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1))
               AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1))
               AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
         OR  (     P_BASIS_YYYY = YEAR(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP))
               AND P_BASIS_MM = MONTH(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP))
               AND P_BASIS_DD = DAY(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP))
               AND P_BASIS_HH = 0 ) ) )AS A
INNER JOIN ( SELECT DISTINCT HOST_SITE_NM
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO ) AS B
ON A.HOST_NAME = B.HOST_SITE_NM
GROUP BY A.IMSI, A.START_TIME, A.HOST_NAME
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_01_TEMP ;

/* 사이트명(정보) 매핑 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_02_TEMP' AS
SELECT
  B.IDKD_LCLS_CD_NM
 , B.IDKD_MCLS_CD_NM
 , B.STORE_ID
 , B.SITE_NM
 , A.IMSI
 , A.START_TIME
 , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM BDPL200.L2CET_PATH_ALL_01_TEMP AS A
  INNER JOIN ( SELECT
        STORE_ID
       , IDKD_LCLS_CD_NM
       , IDKD_MCLS_CD_NM
       , SITE_NM
       , HOST_SITE_NM
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '1' ) AS B  -- 사이트명 매핑 테이블
    ON A.HOST_NAME = B.HOST_SITE_NM
WHERE 1=1
  AND SUBSTR(A.START_TIME,1,10) = FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd')  -- 전일 방문한 사이트 이력만 key로 작성
GROUP BY B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STORE_ID, B.SITE_NM, A.IMSI, A.START_TIME
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_02_TEMP ;

/* 10초 이상 체류한 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_03_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
    , SUBSTR(IMSI,1,1) AS FST_SUBSTR
FROM (
  SELECT
          IDKD_LCLS_CD_NM
         , IDKD_MCLS_CD_NM
         , STORE_ID
         , SITE_NM
         , IMSI
         , START_TIME
         , SUM_PSS_TM
        , CASE  WHEN SUM_PSS_TM <= 60 THEN SUM_PSS_TM
                WHEN SUM_PSS_TM > 60 THEN 60.0
              ELSE NULL
            END AS PSS_TM_MDFY  --  60초 이상인 CASE는 무조건 60으로 강제 매핑
  FROM BDPL200.L2CET_PATH_ALL_02_TEMP
 ) AS TMP
WHERE 1=1
 AND TMP.PSS_TM_MDFY >= 10
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_03_TEMP ;

/* 이후 접속시간을 찾기위한 작업 - 1 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_01_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('0', '1')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_02_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('2', '3')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_03_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('4', '5')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_03_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_04_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('6', '7')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_04_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_05_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('8', '9')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_06_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('A', 'B')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_06_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_07_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('C', 'D')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_07_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_08_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
 , LEAD(START_TIME, 1, NULL) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS START_TIME_1
FROM BDPL200.L2CET_PATH_ALL_03_TEMP
WHERE 1=1
 AND FST_SUBSTR IN ('E', 'F')
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_08_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_04_TEMP' AS
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_01_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_02_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_03_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_04_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_05_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_06_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_07_TEMP UNION ALL
SELECT * FROM BDPL200.L2CET_PATH_ALL_04_08_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_04_TEMP ;

/* 이후 접속시간을 찾기위한 작업 - 2 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_05_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
    , START_TIME_1
 , CASE  WHEN START_TIME_1 IS NOT NULL THEN START_TIME_1
    WHEN START_TIME_1 IS NULL THEN START_TIME
   ELSE NULL
  END AS START_TIME_2
FROM BDPL200.L2CET_PATH_ALL_04_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_05_TEMP ;

/* 300초 이상 차이나는 CASE 분류 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_06_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , IMSI
    , START_TIME
    , SUM_PSS_TM
    , PSS_TM_MDFY
    , START_TIME_1
    , START_TIME_2
    ,  CASE  WHEN UNIX_TIMESTAMP(CONCAT(START_TIME_2,':00')) - UNIX_TIMESTAMP(CONCAT(START_TIME,':00')) >= 300 THEN 1
       WHEN UNIX_TIMESTAMP(CONCAT(START_TIME_2,':00')) - UNIX_TIMESTAMP(CONCAT(START_TIME,':00')) < 300 THEN 0
       ELSE NULL
      END AS GRP_TEST_1
FROM BDPL200.L2CET_PATH_ALL_05_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_06_TEMP ;

/* 1건을 1ROW로 만들기 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_07_TEMP' AS
SELECT
  B.IDKD_LCLS_CD_NM
 , B.IDKD_MCLS_CD_NM
 , B.STORE_ID
 , B.SITE_NM
 , B.IMSI
 , B.GRP_TEST_3
 , MIN(B.START_TIME) AS STR_TIME
 , MAX(B.START_TIME) AS END_TIME
 , SUM(B.PSS_TM_MDFY) AS USE_TIME
FROM(
  SELECT
    A.IDKD_LCLS_CD_NM
   , A.IDKD_MCLS_CD_NM
   , A.STORE_ID
   , A.SITE_NM
   , A.IMSI
   , A.START_TIME
   , A.SUM_PSS_TM
   , A.PSS_TM_MDFY
   , A.START_TIME_1
   , A.START_TIME_2
   , A.GRP_TEST_1
   , A.GRP_TEST_2
   , SUM(A.GRP_TEST_2) OVER( PARTITION BY A.IMSI, A.SITE_NM
          ORDER BY A.START_TIME) AS GRP_TEST_3  
  FROM (
    SELECT
      IDKD_LCLS_CD_NM
        , IDKD_MCLS_CD_NM
        , STORE_ID
        , SITE_NM
        , IMSI
        , START_TIME
        , SUM_PSS_TM
        , PSS_TM_MDFY
        , START_TIME_1
        , START_TIME_2
        , GRP_TEST_1
     , LAG(GRP_TEST_1, 1, 0) OVER (PARTITION BY IMSI, SITE_NM ORDER BY START_TIME) AS GRP_TEST_2 
    FROM BDPL200.L2CET_PATH_ALL_06_TEMP
   ) AS A
 ) AS B
GROUP BY B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STORE_ID, B.SITE_NM, B.IMSI, B.GRP_TEST_3
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_07_TEMP ;

/* 분단위 점유시간 재생성 - 시간 RANGE를 60초를 곱하여 SEC으로 재 환산 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ALL_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ALL_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ALL_08_TEMP' AS
SELECT
  B.IDKD_LCLS_CD
 , B.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , B.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , UNIX_TIMESTAMP(CONCAT(A.END_TIME,':00')) - UNIX_TIMESTAMP(CONCAT(A.STR_TIME,':00')) + 60 AS USE_TIME_1 -- 시간 범위를 60초로 환산한 점유시간
FROM BDPL200.L2CET_PATH_ALL_07_TEMP AS A
LEFT JOIN ( SELECT DISTINCT
     IDKD_LCLS_CD
    , IDKD_MCLS_CD
    , IDKD_SCLS_CD
    , IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , IDKD_SCLS_CD_NM
    , STORE_ID
    , REP_URL_ADDR
   FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
   WHERE 1=1
    AND TBL_DIVS_CD = '1' ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ALL_08_TEMP ;

/***************************************************************************************************
  02. 유입찾기
***************************************************************************************************/

/* 사이트명(정보) 매핑 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ENTER_ALL_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ENTER_ALL_02_TEMP' AS
SELECT
  B.SML_DIV
 , B.SITE_NM
 , B.REP_URL_ADDR
 , A.IMSI
 , A.START_TIME
 , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM BDPL200.L2CET_PATH_ALL_01_TEMP AS A
  INNER JOIN ( SELECT
        IDKD_SCLS_CD_NM AS SML_DIV
       , SITE_NM
       , REP_URL_ADDR
       , HOST_SITE_NM
    FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '4' ) AS B
    ON A.HOST_NAME = B.HOST_SITE_NM
GROUP BY B.SML_DIV, B.SITE_NM, B.REP_URL_ADDR, A.IMSI, A.START_TIME
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ENTER_ALL_02_TEMP ;

/* 10초 이상 체류한 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ENTER_ALL_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ENTER_ALL_03_TEMP' AS
SELECT
  TMP.SML_DIV
 , TMP.SITE_NM
 , TMP.REP_URL_ADDR
 , TMP.IMSI
 , TMP.START_TIME
 , TMP.SUM_PSS_TM
 , TMP.PSS_TM_MDFY
FROM (
  SELECT
          SML_DIV
         , SITE_NM
         , REP_URL_ADDR
         , IMSI
         , START_TIME
         , SUM_PSS_TM
      , CASE  WHEN SUM_PSS_TM <= 60 THEN SUM_PSS_TM
                WHEN SUM_PSS_TM > 60 THEN 60.0
              ELSE NULL
            END AS PSS_TM_MDFY  --  60초 이상인 CASE는 무조건 60으로 강제 매핑
  FROM BDPL200.L2CET_PATH_ENTER_ALL_02_TEMP
 ) AS TMP
WHERE 1=1
 AND TMP.PSS_TM_MDFY >= 10
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ENTER_ALL_03_TEMP ;

/* 15분(900초) 이내 방문 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ENTER_ALL_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ENTER_ALL_04_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1
 , B.SML_DIV AS ENTER_SML_DIV
 , B.SITE_NM AS ENTER_SITE_NM
 , B.REP_URL_ADDR AS ENTER_URL_ADDR
 , B.START_TIME AS ENTER_SITE_TIME
 , B.PSS_TM_MDFY AS ENTER_SITE_PSS_TM
 , UNIX_TIMESTAMP(CONCAT(A.STR_TIME,':00')) - UNIX_TIMESTAMP(CONCAT(B.START_TIME,':00')) AS ENTER_TIME_DIV
FROM BDPL200.L2CET_PATH_ALL_08_TEMP AS A
 LEFT JOIN BDPL200.L2CET_PATH_ENTER_ALL_03_TEMP AS B
  ON A.IMSI = B.IMSI
WHERE 1=1
 AND UNIX_TIMESTAMP(CONCAT(A.STR_TIME,':00')) - UNIX_TIMESTAMP(CONCAT(B.START_TIME,':00')) BETWEEN 60 AND 900
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ENTER_ALL_04_TEMP ;

/* 최 인접 방문 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_ENTER_ALL_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_ENTER_ALL_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_ENTER_ALL_05_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1
 , A.ENTER_SML_DIV
 , A.ENTER_SITE_NM
 , A.ENTER_URL_ADDR
 , A.ENTER_SITE_TIME
 , A.ENTER_SITE_PSS_TM
 , A.ENTER_TIME_DIV
 , A.ENTER_SITE_RANK
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , IMSI
   , GRP_TEST_3
   , STR_TIME
   , END_TIME
   , USE_TIME
   , USE_TIME_1
   , ENTER_SML_DIV
   , ENTER_SITE_NM
   , ENTER_URL_ADDR
   , ENTER_SITE_TIME
   , ENTER_SITE_PSS_TM
   , ENTER_TIME_DIV
   , ROW_NUMBER () OVER(PARTITION BY IMSI, SITE_NM, GRP_TEST_3 ORDER BY ENTER_TIME_DIV, ENTER_SITE_PSS_TM, ENTER_SITE_NM) AS ENTER_SITE_RANK
  FROM BDPL200.L2CET_PATH_ENTER_ALL_04_TEMP
  WHERE 1=1
   AND SITE_NM != ENTER_SITE_NM
 ) AS A
WHERE 1=1
 AND A.ENTER_SITE_RANK = 1
HAVING A.ENTER_SITE_NM IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_ENTER_ALL_05_TEMP ;

/***************************************************************************************************
  03. 이탈찾기
***************************************************************************************************/

/* 사이트명(정보) 매핑 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_EXIT_ALL_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_EXIT_ALL_02_TEMP' AS
SELECT
  B.IDKD_LCLS_CD_NM
   , B.IDKD_MCLS_CD_NM
--  B.SML_DIV
 , B.SITE_NM
 , B.REP_URL_ADDR
 , A.IMSI
 , A.START_TIME
 , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM BDPL200.L2CET_PATH_ALL_01_TEMP AS A
  INNER JOIN ( SELECT
        IDKD_LCLS_CD_NM
       , IDKD_MCLS_CD_NM
--       , SML_DIV
       , SITE_NM
       , REP_URL_ADDR
       , HOST_SITE_NM
    FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD IN ('1', '2')
     AND IDKD_LCLS_CD NOT IN ('BUS', 'ETC', 'FIN', 'GOV', 'INT', 'SOL', 'ZZZ') ) AS B
    ON A.HOST_NAME = B.HOST_SITE_NM
GROUP BY B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.SITE_NM, B.REP_URL_ADDR, A.IMSI, A.START_TIME
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_EXIT_ALL_02_TEMP ;

/* 10초 이상 체류한 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_EXIT_ALL_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_EXIT_ALL_03_TEMP' AS
SELECT
  IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
--  SML_DIV
 , SITE_NM
 , REP_URL_ADDR
 , IMSI
 , START_TIME
 , SUM_PSS_TM
 , PSS_TM_MDFY
FROM (
  SELECT
    IDKD_LCLS_CD_NM
         , IDKD_MCLS_CD_NM
--          SML_DIV
         , SITE_NM
         , REP_URL_ADDR
         , IMSI
         , START_TIME
         , SUM_PSS_TM
      , CASE  WHEN SUM_PSS_TM <= 60 THEN SUM_PSS_TM
                WHEN SUM_PSS_TM > 60 THEN 60.0
              ELSE NULL
            END AS PSS_TM_MDFY  --  60초 이상인 CASE는 무조건 60으로 강제 매핑
  FROM BDPL200.L2CET_PATH_EXIT_ALL_02_TEMP
 ) AS TMP
WHERE 1=1
 AND TMP.PSS_TM_MDFY >= 10
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_EXIT_ALL_03_TEMP ;

/* 15분(900초) 이후 방문 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_EXIT_ALL_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_EXIT_ALL_04_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1
 , B.IDKD_LCLS_CD_NM AS EXIT_IDKD_LCLS_CD_NM
 , B.IDKD_MCLS_CD_NM AS EXIT_IDKD_MCLS_CD_NM
 , B.SITE_NM AS EXIT_SITE_NM
 , B.REP_URL_ADDR AS EXIT_URL_ADDR
 , B.START_TIME AS EXIT_SITE_TIME
 , B.PSS_TM_MDFY AS EXIT_SITE_PSS_TM
 , UNIX_TIMESTAMP(CONCAT(B.START_TIME,':00')) - UNIX_TIMESTAMP(CONCAT(A.STR_TIME,':00')) AS EXIT_TIME_DIV
FROM BDPL200.L2CET_PATH_ALL_08_TEMP AS A
 LEFT JOIN BDPL200.L2CET_PATH_EXIT_ALL_03_TEMP AS B
  ON A.IMSI = B.IMSI
WHERE 1=1
 AND UNIX_TIMESTAMP(CONCAT(B.START_TIME,':00')) - UNIX_TIMESTAMP(CONCAT(A.STR_TIME,':00')) BETWEEN 60 AND 900
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_EXIT_ALL_04_TEMP ;

/* 최 인접 방문 사이트 추출 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_EXIT_ALL_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_EXIT_ALL_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_EXIT_ALL_05_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1
 , A.EXIT_IDKD_LCLS_CD_NM
 , A.EXIT_IDKD_MCLS_CD_NM
 , A.EXIT_SITE_NM
 , A.EXIT_URL_ADDR
 , A.EXIT_SITE_TIME
 , A.EXIT_SITE_PSS_TM
 , A.EXIT_TIME_DIV
 , A.EXIT_SITE_RANK
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , IMSI
   , GRP_TEST_3
   , STR_TIME
   , END_TIME
   , USE_TIME
   , USE_TIME_1
   , EXIT_IDKD_LCLS_CD_NM
   , EXIT_IDKD_MCLS_CD_NM
   , EXIT_SITE_NM
   , EXIT_URL_ADDR
   , EXIT_SITE_TIME
   , EXIT_SITE_PSS_TM
   , EXIT_TIME_DIV
   , ROW_NUMBER () OVER(PARTITION BY IMSI, SITE_NM, GRP_TEST_3 ORDER BY EXIT_TIME_DIV, EXIT_SITE_PSS_TM, EXIT_SITE_NM) AS EXIT_SITE_RANK
  FROM BDPL200.L2CET_PATH_EXIT_ALL_04_TEMP
  WHERE 1=1
   AND SITE_NM != EXIT_SITE_NM
 ) AS A
WHERE 1=1
 AND A.EXIT_SITE_RANK = 1
HAVING A.EXIT_SITE_NM IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_EXIT_ALL_05_TEMP ;

/***************************************************************************************************
  04. 상점별 구매고객 찾기
***************************************************************************************************/


--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_BUY_ALL_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_BUY_ALL_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_BUY_ALL_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_BUY_ALL_01_TEMP' AS
SELECT
        A.STORE_ID
      , A.TRX_APRV_DT
      , A.TRX_APRV_TME
      , A.TRX_CNCL_YN
      , A.CUST_NO
      , C.PRD_NO
      , 1 AS BUY_BIT
FROM BDPVIEW.L1DAT_ELST_STLM_TXN AS A
  INNER JOIN (  SELECT DISTINCT
                            STORE_ID
                FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
                WHERE 1=1
                 AND TBL_DIVS_CD IN ('1', '2')
              )AS B  -- 사이트명 매핑 테이블
    ON A.STORE_ID = B.STORE_ID
  LEFT JOIN BDPVIEW.L1AAT_MBL_ENTR_BAS AS C
    ON A.CUST_NO = C.CUST_NO
WHERE 1=1
 AND A.TRX_APRV_DT = FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyyMMdd')
 AND A.CUST_NO IS NOT NULL
 AND A.TRX_CNCL_YN = 0
 AND C.ENTR_STTS_CD = 'A'
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_BUY_ALL_01_TEMP ;

/***************************************************************************************************
  05. 유입&이탈에 대한 CASE 1ROW 매핑
***************************************************************************************************/


/* 건단위 마트로 구성 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_01_01_TEMP' AS
SELECT
        A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1 -- 시간 범위를 60초로 환산한 점유시간
      , CASE  WHEN A.USE_TIME >= 60 THEN 1
              WHEN A.USE_TIME < 60 THEN 0
              ELSE 99
            END AS VALID_VST_BIT
      , B.ENTER_SML_DIV
      , B.ENTER_SITE_NM
      , B.ENTER_URL_ADDR
      , B.ENTER_SITE_TIME
      , B.ENTER_SITE_PSS_TM
      , B.ENTER_TIME_DIV
FROM BDPL200.L2CET_PATH_ALL_08_TEMP AS A
  LEFT JOIN BDPL200.L2CET_PATH_ENTER_ALL_05_TEMP AS B
      ON    A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM
        AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM
        AND A.STORE_ID = B.STORE_ID
        AND A.SITE_NM = B.SITE_NM
        AND A.IMSI = B.IMSI
        AND A.GRP_TEST_3 = B.GRP_TEST_3
        AND A.STR_TIME = B.STR_TIME
        AND A.END_TIME = B.END_TIME
        AND A.USE_TIME = B.USE_TIME
        AND A.USE_TIME_1 = B.USE_TIME_1
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_01_TEMP' AS
SELECT
        A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1 -- 시간 범위를 60초로 환산한 점유시간
    , A.VALID_VST_BIT
 , A.ENTER_SML_DIV
 , A.ENTER_SITE_NM
 , A.ENTER_URL_ADDR
 , A.ENTER_SITE_TIME
 , A.ENTER_SITE_PSS_TM
 , A.ENTER_TIME_DIV
 , C.EXIT_IDKD_LCLS_CD_NM
 , C.EXIT_IDKD_MCLS_CD_NM
 , C.EXIT_SITE_NM
 , C.EXIT_URL_ADDR
 , C.EXIT_SITE_TIME
 , C.EXIT_SITE_PSS_TM
 , C.EXIT_TIME_DIV
FROM BDPL200.L2CET_PATH_MART_ALL_01_01_TEMP AS A
  LEFT JOIN BDPL200.L2CET_PATH_EXIT_ALL_05_TEMP AS C
      ON    A.IDKD_LCLS_CD_NM = C.IDKD_LCLS_CD_NM
        AND A.IDKD_MCLS_CD_NM = C.IDKD_MCLS_CD_NM
        AND A.STORE_ID = C.STORE_ID
        AND A.SITE_NM = C.SITE_NM
        AND A.IMSI = C.IMSI
        AND A.GRP_TEST_3 = C.GRP_TEST_3
        AND A.STR_TIME = C.STR_TIME
        AND A.END_TIME = C.END_TIME
        AND A.USE_TIME = C.USE_TIME
        AND A.USE_TIME_1 = C.USE_TIME_1
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_01_TEMP ;


/* 구매 BIT 추가 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_02_TEMP' AS
SELECT
      C.IDKD_LCLS_CD_NM
    , C.IDKD_MCLS_CD_NM
    , C.STORE_ID
    , C.SITE_NM
    , C.IMSI
    , C.GRP_TEST_3
    , C.STR_TIME
    , C.END_TIME
    , C.USE_TIME
    , C.USE_TIME_1
    , SUM(C.BUY_BIT) AS BUY_CNT
FROM (
        SELECT
                A.IDKD_LCLS_CD_NM
   , A.IDKD_MCLS_CD_NM
   , A.STORE_ID
   , A.SITE_NM
   , A.IMSI
   , A.GRP_TEST_3
   , A.STR_TIME
   , A.END_TIME
   , A.USE_TIME
   , A.USE_TIME_1 -- 시간 범위를 60초로 환산한 점유시간
      , A.VALID_VST_BIT
   , A.ENTER_SML_DIV
   , A.ENTER_SITE_NM
   , A.ENTER_SITE_TIME
   , A.ENTER_SITE_PSS_TM
   , A.ENTER_TIME_DIV
   , A.EXIT_IDKD_LCLS_CD_NM
   , A.EXIT_IDKD_MCLS_CD_NM
   , A.EXIT_SITE_NM
   , A.EXIT_SITE_TIME
   , A.EXIT_SITE_PSS_TM
   , A.EXIT_TIME_DIV
   , CONCAT(SUBSTR(A.STR_TIME,12,2),SUBSTR(A.STR_TIME,15,2)) AS STR_TIME_1
   , CONCAT(SUBSTR(A.END_TIME,12,2),SUBSTR(A.END_TIME,15,2)) AS END_TIME_1
   , B.BUY_BIT
   , SUBSTR(B.TRX_APRV_TME,1,4) AS BUY_TIME
        FROM BDPL200.L2CET_PATH_MART_ALL_01_TEMP AS A
          INNER JOIN BDPL200.L2CET_PATH_BUY_ALL_01_TEMP AS B
            ON    A.STORE_ID = B.STORE_ID
              AND A.IMSI = B.PRD_NO
      ) AS C
WHERE 1=1
  AND C.BUY_TIME BETWEEN C.STR_TIME_1 AND C.END_TIME_1
GROUP BY  C.IDKD_LCLS_CD_NM, C.IDKD_MCLS_CD_NM, C.STORE_ID, C.SITE_NM, C.IMSI, C.GRP_TEST_3, C.STR_TIME, C.END_TIME, C.USE_TIME, C.USE_TIME_1
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_02_TEMP ;

/* 구매여부 결합 - SUMMARY에 활용할 마트 완성! */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_03_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.IMSI
 , A.GRP_TEST_3
 , A.STR_TIME
 , A.END_TIME
 , A.USE_TIME
 , A.USE_TIME_1 -- 시간 범위를 60초로 환산한 점유시간
    , A.VALID_VST_BIT
 , A.ENTER_SML_DIV
 , A.ENTER_SITE_NM
 , A.ENTER_URL_ADDR
 , A.ENTER_SITE_TIME
 , A.ENTER_SITE_PSS_TM
 , A.ENTER_TIME_DIV
 , A.EXIT_IDKD_LCLS_CD_NM
 , A.EXIT_IDKD_MCLS_CD_NM
 , A.EXIT_SITE_NM
 , A.EXIT_URL_ADDR
 , A.EXIT_SITE_TIME
 , A.EXIT_SITE_PSS_TM
 , A.EXIT_TIME_DIV
 , B.BUY_CNT
FROM BDPL200.L2CET_PATH_MART_ALL_01_TEMP AS A
  LEFT JOIN BDPL200.L2CET_PATH_MART_ALL_02_TEMP AS B
      ON    A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM
        AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM
        AND A.STORE_ID = B.STORE_ID
        AND A.SITE_NM = B.SITE_NM
        AND A.IMSI = B.IMSI
        AND A.GRP_TEST_3 = B.GRP_TEST_3
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_03_TEMP ;


/***************************************************************************************************
  06. 개별 SUMMARY 테이블 생성
***************************************************************************************************/
/* 우리상점 유효방문율, 구매건수, 평균체류시간(초) 구하기 - 화면 1 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_04_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.AVR_PSS_TM
 , B.BUY_AVR_PSS_TM
 , A.VST_CNT
 , A.SUM_VALID_VST_CNT
 , A.SUM_BUY_CNT
 , A.VALID_VST_RTO
 , A.BUY_RTO
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , AVG(USE_TIME_1) AS AVR_PSS_TM
   , COUNT(IMSI) AS VST_CNT
   , SUM(VALID_VST_BIT) AS SUM_VALID_VST_CNT
   , SUM(BUY_CNT) AS SUM_BUY_CNT
   , CASE WHEN SUM(VALID_VST_BIT)/COUNT(IMSI) >= 0 AND SUM(VALID_VST_BIT)/COUNT(IMSI) <= 1 THEN SUM(VALID_VST_BIT)/COUNT(IMSI) ELSE NULL END AS VALID_VST_RTO
   , CASE WHEN SUM(BUY_CNT)/COUNT(IMSI) >= 0 AND SUM(BUY_CNT)/COUNT(IMSI) <= 1 THEN SUM(BUY_CNT)/COUNT(IMSI) ELSE NULL END AS BUY_RTO
  FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR ) AS A
LEFT JOIN ( SELECT
     IDKD_LCLS_CD
    , IDKD_MCLS_CD
    , IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , REP_URL_ADDR
    , SUM(USE_TIME_1)/SUM(BUY_CNT) AS BUY_AVR_PSS_TM
   FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
   WHERE 1=1
    AND BUY_CNT IS NOT NULL
   GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR
  ) AS B
ON A.IDKD_LCLS_CD = B.IDKD_LCLS_CD AND A.IDKD_MCLS_CD = B.IDKD_MCLS_CD AND A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM
 AND A.STORE_ID = B.STORE_ID AND A.SITE_NM = B.SITE_NM AND A.REP_URL_ADDR = B.REP_URL_ADDR
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_04_TEMP ;




/* 우리상점별, 유입사이트 점유율 구하기 - 화면 2 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_05_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.ENTER_SML_DIV
 , A.ENTER_SITE_NM
 , A.ENTER_URL_ADDR
 , A.AVR_PSS_TM
 , B.BUY_AVR_PSS_TM
 , A.VST_CNT
 , A.SUM_VALID_VST_CNT
 , A.SUM_BUY_CNT
 , A.VALID_VST_RTO
 , A.BUY_RTO
 , A.ENTER_PSS_RTO
 , A.ENTER_SITE_RANK
FROM  ( SELECT
     IDKD_LCLS_CD
    , IDKD_MCLS_CD
    , IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , REP_URL_ADDR
    , ENTER_SML_DIV
    , ENTER_SITE_NM
    , ENTER_URL_ADDR
    , AVR_PSS_TM
    , VST_CNT
    , SUM_VALID_VST_CNT
    , SUM_BUY_CNT
    , VALID_VST_RTO
    , BUY_RTO
    , CASE WHEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM) >= 0
        AND VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM) <= 1
        THEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM)
      ELSE NULL
      END AS ENTER_PSS_RTO
    , RANK() OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM ORDER BY VST_CNT DESC, AVR_PSS_TM DESC, VALID_VST_RTO DESC, ENTER_SITE_NM) AS ENTER_SITE_RANK
   FROM ( SELECT
       IDKD_LCLS_CD
      , IDKD_MCLS_CD
      , IDKD_LCLS_CD_NM
      , IDKD_MCLS_CD_NM
      , STORE_ID
      , SITE_NM
      , REP_URL_ADDR
      , ENTER_SML_DIV
      , ENTER_SITE_NM
      , ENTER_URL_ADDR
      , AVG(USE_TIME_1) AS AVR_PSS_TM
      , COUNT(IMSI) AS VST_CNT
      , SUM(VALID_VST_BIT) AS SUM_VALID_VST_CNT
      , SUM(BUY_CNT) AS SUM_BUY_CNT
      , CASE WHEN SUM(VALID_VST_BIT)/COUNT(IMSI) >= 0 AND SUM(VALID_VST_BIT)/COUNT(IMSI) <= 1 THEN SUM(VALID_VST_BIT)/COUNT(IMSI) ELSE NULL END AS VALID_VST_RTO
      , CASE WHEN SUM(BUY_CNT)/COUNT(IMSI) >= 0 AND SUM(BUY_CNT)/COUNT(IMSI) <= 1 THEN SUM(BUY_CNT)/COUNT(IMSI) ELSE NULL END AS BUY_RTO
     FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
     WHERE 1=1
      AND ENTER_SITE_NM IS NOT NULL
     GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR, ENTER_SML_DIV, ENTER_SITE_NM, ENTER_URL_ADDR ) TMP
   ) AS A
LEFT JOIN ( SELECT
     IDKD_LCLS_CD
    , IDKD_MCLS_CD
    , IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , REP_URL_ADDR
    , ENTER_SML_DIV
    , ENTER_SITE_NM
    , ENTER_URL_ADDR
    , SUM(USE_TIME_1)/SUM(BUY_CNT) AS BUY_AVR_PSS_TM
   -- , COUNT(IMSI) AS VST_CNT
   -- , SUM(VALID_VST_BIT) AS SUM_VALID_VST_CNT
   -- , SUM(BUY_CNT) AS SUM_BUY_CNT
   -- , CASE WHEN SUM(VALID_VST_BIT)/COUNT(IMSI) >= 0 AND SUM(VALID_VST_BIT)/COUNT(IMSI) <= 1 THEN SUM(VALID_VST_BIT)/COUNT(IMSI) ELSE NULL END AS VALID_VST_RTO
   -- , CASE WHEN SUM(BUY_CNT)/COUNT(IMSI) >= 0 AND SUM(BUY_CNT)/COUNT(IMSI) <= 1 THEN SUM(BUY_CNT)/COUNT(IMSI) ELSE NULL END AS BUY_RTO
   FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
   WHERE 1=1
    AND ENTER_SITE_NM IS NOT NULL
    AND BUY_CNT IS NOT NULL
   GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR, ENTER_SML_DIV, ENTER_SITE_NM, ENTER_URL_ADDR
  ) AS B
ON A.IDKD_LCLS_CD = B.IDKD_LCLS_CD AND A.IDKD_MCLS_CD = B.IDKD_MCLS_CD AND A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM
 AND A.STORE_ID = B.STORE_ID AND A.SITE_NM = B.SITE_NM AND A.REP_URL_ADDR = B.REP_URL_ADDR
 AND A.ENTER_SML_DIV = B.ENTER_SML_DIV AND A.ENTER_SITE_NM = B.ENTER_SITE_NM AND A.ENTER_URL_ADDR = B.ENTER_URL_ADDR
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_05_TEMP ;

/* 우리상점별, 이탈사이트 점유율 구하기 - 화면 3 VER2 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_06_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_06_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_06_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_06_01_TEMP' AS
SELECT
  IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , STORE_ID
 , SITE_NM
 , REP_URL_ADDR
 , ENTER_SML_DIV
 , ENTER_SITE_NM
 , ENTER_URL_ADDR
 , EXIT_IDKD_LCLS_CD_NM
 , EXIT_IDKD_MCLS_CD_NM
 , EXIT_SITE_NM
 , EXIT_URL_ADDR
 , AVR_PSS_TM
 , VST_CNT
 , SUM_VALID_VST_CNT
 , SUM_BUY_CNT
 , VALID_VST_RTO
 , BUY_RTO
 , CASE WHEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, ENTER_SML_DIV, ENTER_SITE_NM) >= 0
     AND VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, ENTER_SML_DIV, ENTER_SITE_NM) <= 1
     THEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, ENTER_SML_DIV, ENTER_SITE_NM)
   ELSE NULL
   END AS EXIT_PSS_RTO
 , RANK() OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, ENTER_SML_DIV, ENTER_SITE_NM ORDER BY VST_CNT DESC, EXIT_SITE_NM) AS EXIT_SITE_RANK
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , ENTER_SML_DIV
   , ENTER_SITE_NM
   , ENTER_URL_ADDR
   , EXIT_IDKD_LCLS_CD_NM
   , EXIT_IDKD_MCLS_CD_NM
   , EXIT_SITE_NM
   , EXIT_URL_ADDR
   , AVG(USE_TIME_1) AS AVR_PSS_TM
   , COUNT(IMSI) AS VST_CNT
   , SUM(VALID_VST_BIT) AS SUM_VALID_VST_CNT
   , SUM(BUY_CNT) AS SUM_BUY_CNT
   , CASE WHEN SUM(VALID_VST_BIT)/COUNT(IMSI) >= 0 AND SUM(VALID_VST_BIT)/COUNT(IMSI) <= 1 THEN SUM(VALID_VST_BIT)/COUNT(IMSI) ELSE NULL END AS VALID_VST_RTO
   , CASE WHEN SUM(BUY_CNT)/COUNT(IMSI) >= 0 AND SUM(BUY_CNT)/COUNT(IMSI) <= 1 THEN SUM(BUY_CNT)/COUNT(IMSI) ELSE NULL END AS BUY_RTO
  FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
  WHERE 1=1
   AND ENTER_SITE_NM IS NOT NULL
   AND EXIT_SITE_NM IS NOT NULL
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD , IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR,
    ENTER_SML_DIV, ENTER_SITE_NM, ENTER_URL_ADDR,
    EXIT_IDKD_LCLS_CD_NM, EXIT_IDKD_MCLS_CD_NM, EXIT_SITE_NM, EXIT_URL_ADDR ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_06_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_06_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_06_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_06_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_06_02_TEMP' AS
SELECT
        A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , A.ENTER_SML_DIV
 , A.ENTER_SITE_NM
 , A.ENTER_URL_ADDR
 , A.AVR_PSS_TM
 , A.BUY_AVR_PSS_TM
 , A.VST_CNT
 , A.SUM_VALID_VST_CNT
 , A.SUM_BUY_CNT
 , A.VALID_VST_RTO
 , A.BUY_RTO
 , A.ENTER_PSS_RTO
 , A.ENTER_SITE_RANK
 , B.EXIT_IDKD_MCLS_CD_NM
 , B.EXIT_SITE_NM
 , B.EXIT_URL_ADDR
 , B.VST_CNT AS EXIT_VST_CNT
 , B.EXIT_PSS_RTO
 , B.EXIT_SITE_RANK
FROM BDPL200.L2CET_PATH_MART_ALL_05_TEMP AS A
  LEFT JOIN BDPL200.L2CET_PATH_MART_ALL_06_01_TEMP AS B
    ON    A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM
      AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM
      AND A.STORE_ID = B.STORE_ID
      AND A.SITE_NM = B.SITE_NM
      AND A.ENTER_SML_DIV = B.ENTER_SML_DIV
      AND A.ENTER_SITE_NM = B.ENTER_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_06_02_TEMP ;

/* 우리상점별 고객 방문 형태에 따른 효과 분석 - 화면 4 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_07_TEMP' AS
SELECT
  IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , STORE_ID
 , SITE_NM
 , REP_URL_ADDR
 , ENTER_SML_DIV
 , SUM_PSS_RTO
 , SUM_PSS_TM
 , SUM_VALID_VST_RTO
 , RANK() OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM ORDER BY SUM_PSS_RTO DESC, SUM_PSS_TM DESC, SUM_VALID_VST_RTO DESC, ENTER_SML_DIV) AS ENTER_SML_DIV_RANK
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , ENTER_SML_DIV
   , SUM(ENTER_PSS_RTO) AS SUM_PSS_RTO
   , SUM(AVR_PSS_TM) AS SUM_PSS_TM
   , SUM(VALID_VST_RTO) AS SUM_VALID_VST_RTO
  FROM BDPL200.L2CET_PATH_MART_ALL_05_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR, ENTER_SML_DIV ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_07_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_08_TEMP' AS
SELECT
  A.IDKD_LCLS_CD
 , A.IDKD_MCLS_CD
 , A.IDKD_LCLS_CD_NM
 , A.IDKD_MCLS_CD_NM
 , A.STORE_ID
 , A.SITE_NM
 , A.REP_URL_ADDR
 , COALESCE(B.AVR_PSS_TM, 0) AS MAX_SLIN_STAY_TM
 , C.ENTER_SITE_NM AS TOP_EFCY_INFW_CHNL_NM
 , A.ENTER_SML_DIV AS MAX_INFW_CHNL_KD_NM
 , A.SUM_PSS_RTO AS MAX_INFW_CHNL_KD_POSS_RT
FROM BDPL200.L2CET_PATH_MART_ALL_07_TEMP AS A
LEFT JOIN ( SELECT
     IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , AVG(USE_TIME_1) AS AVR_PSS_TM
   FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
   WHERE 1=1
    AND BUY_CNT > 0
   GROUP BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM ) AS B
ON A.IDKD_LCLS_CD_NM = B.IDKD_LCLS_CD_NM AND A.IDKD_MCLS_CD_NM = B.IDKD_MCLS_CD_NM AND A.STORE_ID = B.STORE_ID AND A.SITE_NM = B.SITE_NM
LEFT JOIN ( SELECT
     IDKD_LCLS_CD_NM
    , IDKD_MCLS_CD_NM
    , STORE_ID
    , SITE_NM
    , ENTER_SML_DIV
    , ENTER_SITE_NM
   FROM BDPL200.L2CET_PATH_MART_ALL_05_TEMP
   WHERE 1=1
    AND ENTER_SITE_RANK = 1 ) AS C
ON A.IDKD_LCLS_CD_NM = C.IDKD_LCLS_CD_NM AND A.IDKD_MCLS_CD_NM = C.IDKD_MCLS_CD_NM AND A.STORE_ID = C.STORE_ID AND A.SITE_NM = C.SITE_NM
WHERE 1=1
 AND A.ENTER_SML_DIV_RANK = 1
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_08_TEMP ;

/* 추가 쿼리 */
/* 우리상점별, 이탈사이트 순위,점유율 구하기 - 화면 5 */
--DROP TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_PATH_MART_ALL_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_PATH_MART_ALL_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_PATH_MART_ALL_09_TEMP' AS
SELECT
  IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , STORE_ID
 , SITE_NM
 , REP_URL_ADDR
 , EXIT_IDKD_LCLS_CD_NM
 , EXIT_IDKD_MCLS_CD_NM
 , EXIT_SITE_NM
 , EXIT_URL_ADDR
 , AVR_PSS_TM
 , VST_CNT
 , SUM_VALID_VST_CNT
 , SUM_BUY_CNT
 , VALID_VST_RTO
 , BUY_RTO
 , CASE WHEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM) >= 0
     AND VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM) <= 1
     THEN VST_CNT/SUM(VST_CNT) OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM)
   ELSE NULL
   END AS EXIT_PSS_RTO
 , RANK() OVER(PARTITION BY IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM ORDER BY VST_CNT DESC, AVR_PSS_TM DESC, VALID_VST_RTO DESC, EXIT_SITE_NM) AS EXIT_SITE_RANK
FROM ( SELECT
    IDKD_LCLS_CD
   , IDKD_MCLS_CD
   , IDKD_LCLS_CD_NM
   , IDKD_MCLS_CD_NM
   , STORE_ID
   , SITE_NM
   , REP_URL_ADDR
   , EXIT_IDKD_LCLS_CD_NM
   , EXIT_IDKD_MCLS_CD_NM
   , EXIT_SITE_NM
   , EXIT_URL_ADDR
   , AVG(USE_TIME_1) AS AVR_PSS_TM
   , COUNT(IMSI) AS VST_CNT
   , SUM(VALID_VST_BIT) AS SUM_VALID_VST_CNT
   , SUM(BUY_CNT) AS SUM_BUY_CNT
   , CASE WHEN SUM(VALID_VST_BIT)/COUNT(IMSI) >= 0 AND SUM(VALID_VST_BIT)/COUNT(IMSI) <= 1 THEN SUM(VALID_VST_BIT)/COUNT(IMSI) ELSE NULL END AS VALID_VST_RTO
   , CASE WHEN SUM(BUY_CNT)/COUNT(IMSI) >= 0 AND SUM(BUY_CNT)/COUNT(IMSI) <= 1 THEN SUM(BUY_CNT)/COUNT(IMSI) ELSE NULL END AS BUY_RTO
  FROM BDPL200.L2CET_PATH_MART_ALL_03_TEMP
  WHERE 1=1
   AND EXIT_SITE_NM IS NOT NULL
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, STORE_ID, SITE_NM, REP_URL_ADDR, EXIT_IDKD_LCLS_CD_NM, EXIT_IDKD_MCLS_CD_NM, EXIT_SITE_NM, EXIT_URL_ADDR ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_PATH_MART_ALL_09_TEMP ;

/***************************************************************************************************
  07. 최종 테이블 생성
***************************************************************************************************/
--DROP TABLE IF EXISTS BDPL200.L2CET_INFW_LEV_PATH_1D_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2CET_INFW_LEV_PATH_1D_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2CET_INFW_LEV_PATH_1D_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2CET_INFW_LEV_PATH_1D_TEMP' AS
SELECT
     'MDIA_FLOW_01' AS SCRN_DIVS_CD          -- 화면구분코드
    , 'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
    , IDKD_LCLS_CD     -- KEY 사이트 업종대분류코드
 , IDKD_MCLS_CD     -- KEY 사이트 업종중분류코드
    , IDKD_LCLS_CD_NM                           -- KEY 사이트 업종대분류
 , IDKD_MCLS_CD_NM                           -- KEY 사이트 업종중분류
 , STORE_ID                          -- 상점ID
 , SITE_NM                      -- 상점명
      ------------------------
 , NULL AS INFW_SITE_KD_NM             -- 유입사이트 종류
 , NULL AS INFW_SITE_NM             -- 유입사이트명
 , NULL AS INFW_SITE_URL_ADDR      -- 유입사이트주소
 , AVR_PSS_TM AS AVR_STAY_TM                        -- 평균체류시간
 , BUY_AVR_PSS_TM AS BUY_AVR_STAY_TM
 , VST_CNT AS VSIT_CNT                           -- 방문건수
 , SUM_VALID_VST_CNT AS VALD_VSIT_CNT                 -- 유효방문건수
 , SUM_BUY_CNT AS BUY_CNT                       -- 구매건수
 , VALID_VST_RTO AS VALD_VSIT_RT                     -- 유효방문율
 , BUY_RTO AS BUY_RT                           -- 구매율
 , NULL AS INFW_SITE_POSS_RT             -- 유입 점유율
 , NULL AS INFW_SITE_RANK           -- 유입사이트순위
 , NULL AS LEV_SITE_KD_NM              -- 유출사이트 종류
 , NULL AS LEV_SITE_NM       -- 유출사이트명
 , NULL AS LEV_SITE_URL_ADDR    -- 유출사이트주소
 , NULL AS LEV_SITE_VSIT_CNT              -- 유출사이트방문고객수
 , NULL AS LEV_SITE_POSS_RT              -- 유출점유율
 , NULL AS LEV_SITE_RANK            -- 유출사이트순위
 , NULL AS MAX_SLIN_STAY_TM          -- 매출이 일어난 체류시간의 평균값 (최대매출체류시간)
 , NULL AS TOP_EFCY_INFW_CHNL_NM             -- 최고 효율 유입채널
 , NULL AS MAX_INFW_CHNL_KD_NM         -- 최다 유입채널 유형
 , NULL AS MAX_INFW_CHNL_KD_POSS_RT -- 최다 유입채널 점유율
FROM BDPL200.L2CET_PATH_MART_ALL_04_TEMP --
    UNION ALL
SELECT
  'MDIA_FLOW_02' AS SCRN_DIVS_CD          -- 화면구분코드
 , 'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , IDKD_LCLS_CD     -- KEY 사이트 업종대분류코드
 , IDKD_MCLS_CD     -- KEY 사이트 업종중분류코드
 , IDKD_LCLS_CD_NM                           -- KEY 사이트 업종대분류
 , IDKD_MCLS_CD_NM                           -- KEY 사이트 업종중분류
 , STORE_ID                          -- 상점ID
 , SITE_NM                      -- 상점명
      ------------------------
 , ENTER_SML_DIV AS INFW_SITE_KD_NM                     -- 유입사이트 종류
 , ENTER_SITE_NM AS INFW_SITE_NM                     -- 유입사이트명
 , ENTER_URL_ADDR AS INFW_SITE_URL_ADDR
 , AVR_PSS_TM AS AVR_STAY_TM                        -- 평균체류시간
 , BUY_AVR_PSS_TM AS BUY_AVR_STAY_TM
 , VST_CNT AS VSIT_CNT                           -- 방문건수
 , SUM_VALID_VST_CNT AS VALD_VSIT_CNT                 -- 유효방문건수
 , SUM_BUY_CNT AS BUY_CNT                       -- 구매건수
 , VALID_VST_RTO AS VALD_VSIT_RT                     -- 유효방문율
 , BUY_RTO AS BUY_RT                           -- 구매율
 , ENTER_PSS_RTO AS INFW_SITE_POSS_RT                     -- 유입 점유율
 , ENTER_SITE_RANK AS INFW_SITE_RANK                   -- 유입사이트순위
 , NULL AS LEV_SITE_KD_NM              -- 유출사이트 종류
 , NULL AS LEV_SITE_NM              -- 유출사이트명
 , NULL AS LEV_SITE_URL_ADDR
 , NULL AS LEV_SITE_VSIT_CNT              -- 유출사이트방문고객수
 , NULL AS LEV_SITE_POSS_RT              -- 유출점유율
 , NULL AS LEV_SITE_RANK            -- 유출사이트순위
 , NULL AS MAX_SLIN_STAY_TM          -- 매출이 일어난 체류시간의 평균값 (최대매출체류시간)
 , NULL AS TOP_EFCY_INFW_CHNL_NM             -- 최고 효율 유입채널
 , NULL AS MAX_INFW_CHNL_KD_NM         -- 최다 유입채널 유형
 , NULL AS MAX_INFW_CHNL_KD_POSS_RT -- 최다 유입채널 점유율
FROM BDPL200.L2CET_PATH_MART_ALL_05_TEMP --
    UNION ALL
SELECT
  'MDIA_FLOW_03' AS SCRN_DIVS_CD          -- 화면구분코드
 , 'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , IDKD_LCLS_CD     -- KEY 사이트 업종대분류코드
 , IDKD_MCLS_CD     -- KEY 사이트 업종중분류코드
 , IDKD_LCLS_CD_NM                           -- KEY 사이트 업종대분류
 , IDKD_MCLS_CD_NM                           -- KEY 사이트 업종중분류
 , STORE_ID                          -- 상점ID
 , SITE_NM                      -- 상점명
      ------------------------
 , ENTER_SML_DIV AS INFW_SITE_KD_NM                     -- 유입사이트 종류
 , ENTER_SITE_NM AS INFW_SITE_NM                     -- 유입사이트명
 , ENTER_URL_ADDR AS INFW_SITE_URL_ADDR
 , AVR_PSS_TM AS AVR_STAY_TM                        -- 평균체류시간
 , BUY_AVR_PSS_TM AS BUY_AVR_STAY_TM
 , VST_CNT AS VSIT_CNT                           -- 방문건수
 , SUM_VALID_VST_CNT AS VALD_VSIT_CNT                 -- 유효방문건수
 , SUM_BUY_CNT AS BUY_CNT                       -- 구매건수
 , VALID_VST_RTO AS VALD_VSIT_RT                     -- 유효방문율
 , BUY_RTO AS BUY_RT                           -- 구매율
 , ENTER_PSS_RTO AS INFW_SITE_POSS_RT                     -- 유입 점유율
 , ENTER_SITE_RANK AS INFW_SITE_RANK                   -- 유입사이트순위
 , EXIT_IDKD_MCLS_CD_NM AS LEV_SITE_KD_NM                      -- 유출사이트 종류
 , EXIT_SITE_NM AS LEV_SITE_NM                      -- 유출사이트명
 , EXIT_URL_ADDR AS LEV_SITE_URL_ADDR
 , EXIT_VST_CNT AS LEV_SITE_VSIT_CNT                      -- 유출사이트방문고객수
 , EXIT_PSS_RTO AS LEV_SITE_POSS_RT                      -- 유출점유율
 , EXIT_SITE_RANK AS LEV_SITE_RANK                    -- 유출사이트순위
 , NULL AS MAX_SLIN_STAY_TM          -- 매출이 일어난 체류시간의 평균값 (최대매출체류시간)
 , NULL AS TOP_EFCY_INFW_CHNL_NM             -- 최고 효율 유입채널
 , NULL AS MAX_INFW_CHNL_KD_NM         -- 최다 유입채널 유형
 , NULL AS MAX_INFW_CHNL_KD_POSS_RT -- 최다 유입채널 점유율
FROM BDPL200.L2CET_PATH_MART_ALL_06_02_TEMP --
    UNION ALL
SELECT
  'MDIA_FLOW_04' AS SCRN_DIVS_CD          -- 화면구분코드
 , 'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
    , IDKD_LCLS_CD     -- KEY 사이트 업종대분류코드
 , IDKD_MCLS_CD     -- KEY 사이트 업종중분류코드
 , IDKD_LCLS_CD_NM                           -- KEY 사이트 업종대분류
 , IDKD_MCLS_CD_NM                           -- KEY 사이트 업종중분류
 , STORE_ID                          -- 상점ID
 , SITE_NM                      -- 상점명
      ------------------------
 , NULL AS INFW_SITE_KD_NM             -- 유입사이트 종류
 , NULL AS INFW_SITE_NM             -- 유입사이트명
 , NULL AS INFW_SITE_URL_ADDR
 , NULL AS AVR_STAY_TM                -- 평균체류시간
 , NULL AS BUY_AVR_STAY_TM
 , NULL AS VSIT_CNT                   -- 방문건수
 , NULL AS VALD_VSIT_CNT         -- 유효방문건수
 , NULL AS BUY_CNT               -- 구매건수
 , NULL AS VALD_VSIT_RT             -- 유효방문율
 , NULL AS BUY_RT                   -- 구매율
 , NULL AS INFW_SITE_POSS_RT             -- 유입 점유율
 , NULL AS INFW_SITE_RANK           -- 유입사이트순위
 , NULL AS LEV_SITE_KD_NM              -- 유출사이트 종류
 , NULL AS LEV_SITE_NM              -- 유출사이트명
 , NULL AS LEV_SITE_URL_ADDR
 , NULL AS LEV_SITE_VSIT_CNT              -- 유출사이트방문고객수
 , NULL AS LEV_SITE_POSS_RT              -- 유출점유율
 , NULL AS LEV_SITE_RANK            -- 유출사이트순위
 , MAX_SLIN_STAY_TM                  -- 매출이 일어난 체류시간의 평균값 (최대매출체류시간)
 , TOP_EFCY_INFW_CHNL_NM                     -- 최고 효율 유입채널
 , MAX_INFW_CHNL_KD_NM                 -- 최다 유입채널 유형
 , MAX_INFW_CHNL_KD_POSS_RT         -- 최다 유입채널 점유율
FROM BDPL200.L2CET_PATH_MART_ALL_08_TEMP
    UNION ALL
SELECT
  'MDIA_FLOW_05' AS SCRN_DIVS_CD          -- 화면구분코드
 , 'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , IDKD_LCLS_CD     -- KEY 사이트 업종대분류코드
 , IDKD_MCLS_CD     -- KEY 사이트 업종중분류코드
 , IDKD_LCLS_CD_NM                           -- KEY 사이트 업종대분류
 , IDKD_MCLS_CD_NM                           -- KEY 사이트 업종중분류
 , STORE_ID                          -- 상점ID
 , SITE_NM                      -- 상점명
      ------------------------
 , NULL AS INFW_SITE_KD_NM                     -- 유입사이트 종류
 , NULL AS INFW_SITE_NM                     -- 유입사이트명
 , NULL AS INFW_SITE_URL_ADDR
 , AVR_PSS_TM AS AVR_STAY_TM                        -- 평균체류시간
 , NULL AS BUY_AVR_STAY_TM
 , VST_CNT AS VSIT_CNT                           -- 방문건수
 , SUM_VALID_VST_CNT AS VALD_VSIT_CNT                 -- 유효방문건수
 , SUM_BUY_CNT AS BUY_CNT                       -- 구매건수
 , VALID_VST_RTO AS VALD_VSIT_RT                     -- 유효방문율
 , BUY_RTO AS BUY_RT                           -- 구매율
 , NULL AS INFW_SITE_POSS_RT                     -- 유입 점유율
 , NULL AS INFW_SITE_RANK                   -- 유입사이트순위
 , EXIT_IDKD_MCLS_CD_NM AS LEV_SITE_KD_NM              -- 유출사이트 종류
 , EXIT_SITE_NM AS LEV_SITE_NM              -- 유출사이트명
 , EXIT_URL_ADDR AS LEV_SITE_URL_ADDR
 , NULL AS LEV_SITE_VSIT_CNT              -- 유출사이트방문고객수
 , EXIT_PSS_RTO AS LEV_SITE_POSS_RT              -- 유출점유율
 , EXIT_SITE_RANK AS LEV_SITE_RANK            -- 유출사이트순위
 , NULL AS MAX_SLIN_STAY_TM          -- 매출이 일어난 체류시간의 평균값 (최대매출체류시간)
 , NULL AS TOP_EFCY_INFW_CHNL_NM             -- 최고 효율 유입채널
 , NULL AS MAX_INFW_CHNL_KD_NM         -- 최다 유입채널 유형
 , NULL AS MAX_INFW_CHNL_KD_POSS_RT -- 최다 유입채널 점유율
FROM BDPL200.L2CET_PATH_MART_ALL_09_TEMP
WHERE EXIT_SITE_RANK <= 50
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_INFW_LEV_PATH_1D_TEMP ;



INSERT OVERWRITE TABLE BDPL200.L2CET_INFW_LEV_PATH
PARTITION (
   P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)),
   P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)),
   P_BASIS_DD =  DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)),
   P_BASIS_CLSS = 1
    )
SELECT
  SCRN_DIVS_CD
 , TERM_CLSS_CD
 , TERM_YY
 , TERM_MM
 , TERM_DT_NM
    , IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , STORE_ID
 , SITE_NM
      ------------------------
 , INFW_SITE_KD_NM
 , INFW_SITE_NM
 , INFW_SITE_URL_ADDR
 , CAST(AVR_STAY_TM AS DECIMAL(30,6)) AS AVR_STAY_TM
 , CAST(BUY_AVR_STAY_TM AS DECIMAL(30,6)) AS BUY_AVR_STAY_TM
 , VSIT_CNT
 , VALD_VSIT_CNT
 , BUY_CNT
 , CAST(VALD_VSIT_RT AS DECIMAL(10,6)) AS VALD_VSIT_RT
 , CAST(BUY_RT AS DECIMAL(10,6)) AS BUY_RT
 , CAST(INFW_SITE_POSS_RT AS DECIMAL(10,6)) AS INFW_SITE_POSS_RT
 , INFW_SITE_RANK
 , LEV_SITE_KD_NM
 , LEV_SITE_NM
 , LEV_SITE_URL_ADDR
 , LEV_SITE_VSIT_CNT
 , CAST(LEV_SITE_POSS_RT AS DECIMAL(10,6)) AS LEV_SITE_POSS_RT
 , LEV_SITE_RANK
 , CAST(MAX_SLIN_STAY_TM AS DECIMAL(30,6)) AS MAX_SLIN_STAY_TM
 , TOP_EFCY_INFW_CHNL_NM
 , MAX_INFW_CHNL_KD_NM
 , CAST(MAX_INFW_CHNL_KD_POSS_RT AS DECIMAL(10,6)) AS MAX_INFW_CHNL_KD_POSS_RT
FROM BDPL200.L2CET_INFW_LEV_PATH_1D_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2CET_INFW_LEV_PATH;

