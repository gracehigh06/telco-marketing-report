/****************************************************************************************************************************
 
 제목 : 유동인구분석_1일
 일시 : 2018. 09. 19
 버전 : v01
 
 
 
****************************************************************************************************************************/


/****************************************************************************************************************************
 
 제목 : 유동인구분석_상점별_1일
 일시 : 2018. 09. 11
 버전 : v01
 
 
 
****************************************************************************************************************************/


/* 상점별 구매고객 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_01_TEMP' AS
SELECT DISTINCT
  T1.PRD_NO AS IMSI_NO
 , T1.SEX_DV_CD
 , T1.CUST_AGE
 , T2.STORE_ID
 , T2.STORE_BSST_NM
FROM BDPVIEW.L1AAT_MBL_ENTR_BAS AS T1
INNER JOIN ( SELECT DISTINCT
       A.CUST_NO
      , A.PRD_NO
      , A.STORE_ID
      , A.STORE_BSST_NM
    FROM BDPVIEW.L1DAT_ELST_STLM_TXN AS A
    INNER JOIN ( SELECT CUST_NO
        FROM BDPVIEW.L1AAT_MBL_ENTR_BAS
        WHERE ENTR_STTS_CD in ('A', 'S')
       ) AS B
    ON A.CUST_NO = B.CUST_NO
    LEFT ANTI JOIN BDPVIEW.L1DAT_ELST_STLM_TXN AS C
    ON (A.TRX_ID = C.TRX_ID AND C.TRX_CNCL_YN = 1 AND C.TRX_KIND_CD != "SC0040")
    WHERE A.TRX_CNCL_YN = 0 
     AND A.TRX_APRV_DT  BETWEEN FROM_UNIXTIME(UNIX_TIMESTAMP(ADD_MONTHS(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-12)), 'yyyyMMdd') AND FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyyMMdd')
   ) AS T2
ON T1.CUST_NO = T2.CUST_NO
LEFT ANTI JOIN BDPL200.L2COT_DYNA_ANAL_OCEM_HPNO_LIST AS T3
ON T1.PRD_NO = T3.IMSI_NO
WHERE T1.ENTR_STTS_CD in ('A', 'S')
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP;


/****************************************************************************************************

           서울시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '서울%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP ;


/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE 1=1
         AND SRC_DATA_DV_CD = 'XCDR'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND ESTB_ADDR LIKE '서울%' ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP;


/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'SU' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT T1.BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT  CONCAT( SUBSTR(BUS_STOP_NO, 1, 2), '-', SUBSTR(BUS_STOP_NO, 3, 3) ) AS BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPVIEW.L0EXT_A_P_BUS_ROUTE
      WHERE DISTRICT_CD='1'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'SU'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
  SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
           *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
           SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
           (T6.CL_CVG /1000) AS CLUSTCVG 
  FROM ( SELECT DISTINCT CONCAT( SUBSTR(BUS_STOP_NO, 1, 2), '-', SUBSTR(BUS_STOP_NO, 3, 3) ) AS BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
         FROM BDPVIEW.L0EXT_A_P_BUS_ROUTE
         WHERE DISTRICT_CD='1'
       )  T5 ,
       ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
     FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
    WHERE 1=1
     AND CITY_CD = 'SU'
       ) T6
  HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
  )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP;


/* 버스 정류장별 광고비 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP' AS
SELECT DISTINCT
  T11.BUS_STOP_NO
 , T11.BUS_STOP_NM
 , T11.CCW
 , T11.TOWN
 , CASE WHEN T11.BUS_STOP_NM LIKE '%수유역%' THEN 800000
    WHEN T11.UNIT_COST IS NOT NULL THEN T11.UNIT_COST
    WHEN T11.UNIT_COST IS NULL AND T11.TOWN_MEAN_COST IS NOT NULL THEN T11.TOWN_MEAN_COST
    WHEN T11.UNIT_COST IS NULL AND T11.TOWN_MEAN_COST IS NULL  THEN T11.CCW_MEAN_COST 
  END AS COST, T11.UNIT_COST , T11.TOWN_MEAN_COST , T11.CCW_MEAN_COST
FROM (  SELECT T2.CCW, T2.TOWN , T1.BUS_STOP_NO, T2.BUS_STOP_NM, T1.GPNAME, MAX(T2.UNIT_COST) AS UNIT_COST ,  NULL AS TOWN_MEAN_COST , NULL AS CCW_MEAN_COST
  FROM ( SELECT BUS_STOP_NO , BUS_STOP_NM, GPNAME
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP
    ) T1
  LEFT JOIN ( SELECT DISTINCT BUS_STOP_ID , CCW, TOWN, BUS_STOP_NM, UNIT_COST
     FROM BDPVIEW.L0EXT_F_P_BUS_STOP_AD_COST ) AS T2
  ON T1.BUS_STOP_NO = T2.BUS_STOP_ID
  GROUP BY CCW, TOWN, BUS_STOP_NO , BUS_STOP_NM , GPNAME
        HAVING UNIT_COST IS NOT NULL
  UNION ALL ( SELECT T10.CCW , T10.TOWN , T7.* , T10.TOWN_MEAN_COST, T10.CCW_MEAN_COST
     FROM ( SELECT BUS_STOP_NO, T5.BUS_STOP_NM, T5.GPNAME, T6.UNIT_COST
       FROM ( SELECT T3.* , T4.GPNAME
         FROM ( SELECT BUS_STOP_NO, BUS_STOP_NM , MIN(DISTANCE) AS MIN_DIST
           FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP  
           GROUP BY BUS_STOP_NO , BUS_STOP_NM
           ) T3
         INNER JOIN ( SELECT BUS_STOP_NO , GPNAME , DISTANCE
             FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP ) AS T4
         ON T3.BUS_STOP_NO=T4.BUS_STOP_NO AND T3.MIN_DIST=T4.DISTANCE
         ) T5
       LEFT JOIN ( SELECT DISTINCT BUS_STOP_ID ,BUS_STOP_NM, UNIT_COST
          FROM BDPVIEW.L0EXT_F_P_BUS_STOP_AD_COST ) AS T6
       ON T5.BUS_STOP_NO=T6.BUS_STOP_ID
       WHERE UNIT_COST IS NULL
       ) T7
     INNER JOIN ( SELECT DISTINCT T8.GPNAME, T8.TOWN_MEAN_COST, T8.CCW_MEAN_COST, T9.CCW_NM AS CCW , T9.TOWN_NM AS TOWN
         FROM ( SELECT *
           FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
           WHERE 1=1
           AND CITY_CD = 'SU' ) AS T8
         INNER JOIN BDPVIEW.L1NAT_LTE_CEL_MSTR_BAS AS T9
         ON T8.LTE_CEL_ID = T9.LTE_CEL_ID
        ) T10
     ON T7.GPNAME=CAST(T10.GPNAME AS STRING)
     )
  ) T11
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP ;


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP' AS
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
 , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'SU' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
    WHERE BUS_STOP_NM NOT LIKE '%(가상)%'
    GROUP BY BUS_STOP_NO ) AS T7
ON T6.BUS_STOP_NO = T7.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP' AS 
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM      
  ) AS T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
    FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
    WHERE 1=1
     AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
     AND BSTP_CITY_DIVS_CD = 'BAC001'
    GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_09_TEMP T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP' AS
SELECT T5.STORE_ID, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
      (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.STORE_ID, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP
    ) T1
  GROUP BY STORE_ID
  ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP   
   ) AS T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_11_TEMP
      ) AS T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) AS T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP;


/* 승하차인구 추가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP' AS
SELECT  T1.STORE_ID, T1.BUS_STOP_NO, T1.BUS_STOP_NM,
  T2.TOTAL_CNT, T1.SUM_CNT AS RP_CNT, T1.BRD_NUM , T1.STORE_RATIO, T2.WEIGHT_RATIO, T2.RP_WEIGHT, T3.AD_COST
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_13_TEMP AS T2
ON T1.STORE_ID = T2.STORE_ID AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
    WHERE BUS_STOP_NM NOT LIKE '%(가상)%'
    GROUP BY BUS_STOP_NO
   ) AS T3
ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 & 광고효과/광고가치  */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP' AS
SELECT DISTINCT A.STORE_ID, A.BUS_STOP_NO, A.BUS_STOP_NM,
  A.RP_CNT+ ROUND((CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO),0) AS DYN_POPL_CNT,
  0 AS SCORE , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
UNION ALL (
   SELECT T1.STORE_ID, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T3.DYN_POPL_CNT, T1.SCORE1+T2.SCORE2 AS SCORE , 'B' AS ANAL_THEMA_DV_CD
   FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT*WEIGHT_RATIO)/(AVG(AD_COST)/1000) AS SCORE1
     FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP
     GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
    ) T1
   INNER JOIN ( SELECT A.STORE_ID, A.BUS_STOP_NO, A.BUS_STOP_NM,
         MAX(A.BRD_NUM*0.75*B.PG_RATIO*A.STORE_RATIO*A.RP_WEIGHT)/ (AVG(A.AD_COST)/1000) AS SCORE2
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
       GROUP BY A.STORE_ID, A.BUS_STOP_NO, A.BUS_STOP_NM
      ) AS T2
   ON T1.STORE_ID = T2.STORE_ID AND T1.BUS_STOP_NO = T2.BUS_STOP_NO

   INNER JOIN (  SELECT DISTINCT A.STORE_ID, A.BUS_STOP_NO, A.BUS_STOP_NM,
         A.RP_CNT+ ROUND((CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO),0) AS DYN_POPL_CNT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
      ) AS T3
   ON T1.STORE_ID = T3.STORE_ID AND  T1.BUS_STOP_NO = T3.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP ;


/* 유동인구/광고효과 순위 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_SU_TEMP' AS
SELECT '서울시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 1 AND 50 THEN 'AEO001'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 51 AND 100 THEN 'AEO002'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 101 AND 150 THEN 'AEO003'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 151 AND 200 THEN 'AEO004'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 201 AND 250 THEN 'AEO005'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 251 AND 300 THEN 'AEO006'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 301 AND 350 THEN 'AEO007'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 351 AND 400 THEN 'AEO008'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 401 AND 450 THEN 'AEO009'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 451 AND 500 THEN 'AEO010'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 501 AND 550 THEN 'AEO011'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 551 AND 600 THEN 'AEO012'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 601 AND 650 THEN 'AEO013'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 651 AND 700 THEN 'AEO014'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 701 AND 750 THEN 'AEO015'
     WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 751 AND 800 THEN 'AEO016'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 801 AND 850 THEN 'AEO017'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 851 AND 900 THEN 'AEO018'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 901 AND 950 THEN 'AEO019'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 951 AND 1000 THEN 'AEO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_15_TEMP  
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP ;


INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'SU_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-1' AS JOB_STEP
 , COUNT(*) AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP;
--WHERE CITY_CD = 'SU'

/****************************************************************************************************

           경기도

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '경기%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '경기%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GGI' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP ;

/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='02'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GGI'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='02'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'GGI'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP' AS 
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'GGI' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC002'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GGI_TEMP' AS
SELECT
  '경기도' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GGI_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-2' AS JOB_STEP
 , NULL AS SU_CNT
 , COUNT(*)AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP
--WHERE CITY_CD = 'GGI'
;
 
/****************************************************************************************************

           인천시

****************************************************************************************************/



/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '인천%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_01_TEMP --UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_02_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_03_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_04_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_05_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_06_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_07_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_08_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_09_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_10_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_11_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP ;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '인천%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'ICN' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='23'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'ICN'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='23'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'ICN'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP' AS  
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'ICN' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC003'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP;

/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_ICN_TEMP' AS
SELECT
  '인천시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'ICN_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-3' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , COUNT(*) AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP
--WHERE CITY_CD = 'ICN'
;

/****************************************************************************************************

           대구시

****************************************************************************************************/


/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대구%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_01_TEMP --UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_02_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_03_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_04_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_05_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_06_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_07_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_08_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_09_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_10_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_11_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP ;


/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대구%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DG' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP' AS 
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='22'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DG'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='22'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'DG'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP' AS 
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_08_TEMP AS T1
--WHERE 1=1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'DG' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC005'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DG_TEMP' AS
SELECT
  '대구시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DG_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-4' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , COUNT(*) DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP
--WHERE CITY_CD = 'DG'
;

/****************************************************************************************************

           대전시

****************************************************************************************************/


/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대전%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_01_TEMP --UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_02_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_03_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_04_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_05_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_06_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_07_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_08_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_09_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_10_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_11_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP ;



/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대전%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DJ' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='25'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DJ'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='25'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'DJ'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP' AS 
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'DJ' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC004'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_DJ_TEMP' AS
SELECT
  '대전시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DJ_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-5' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , COUNT(*) DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP
--WHERE CITY_CD = 'DJ'
;

/****************************************************************************************************

           광주시

****************************************************************************************************/


/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '광주%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_01_TEMP --UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_02_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_03_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_04_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_05_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_06_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_07_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_08_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_09_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_10_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_11_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP ;


/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '광주%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GJ' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP' AS 
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='24'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GJ'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='24'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'GJ'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP' AS  
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP' AS 
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'GJ' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC006'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_GJ_TEMP' AS
SELECT
  '광주시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP ;


INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GJ_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-6' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , COUNT(*) GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP
--WHERE CITY_CD = 'GJ'
;

/****************************************************************************************************

           부산시

****************************************************************************************************/



/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '부산%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_01_TEMP --UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_02_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_03_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_04_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_05_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_06_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_07_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_08_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_09_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_10_TEMP UNION ALL
--SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_11_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP ;


/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '부산%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'BSN' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='27'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'BSN'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='27'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'BSN'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */

/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP' AS 
SELECT
  T1.*
 , T2.STORE_ID
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP' AS 
SELECT B.STORE_ID, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_02_TEMP
  ) AS A,
  (  SELECT
     T3.STORE_ID
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP AS T3
  GROUP BY STORE_ID
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_08_TEMP AS T1
INNER JOIN ( SELECT STORE_ID
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP ) AS T2
ON T1.STORE_ID = T2.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP' AS 
SELECT
  T6.STORE_ID
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.STORE_ID, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.STORE_ID, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.STORE_ID, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT STORE_ID, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY STORE_ID, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'BSN' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.STORE_ID, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT STORE_ID, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP
  GROUP BY STORE_ID, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC007'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_09_TEMP AS T3
ON T1.STORE_ID = T3.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP' AS
SELECT
  T5.STORE_ID
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.STORE_ID
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP
                 ) T1
  GROUP BY STORE_ID
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP   
   ) T3 
ON T2.STORE_ID = T3.STORE_ID
INNER JOIN ( SELECT T4.STORE_ID, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_11_TEMP
      ) T4 
    GROUP BY T4.STORE_ID, T4.BUS_STOP_NO
   ) T5
ON T3.STORE_ID = T5.STORE_ID AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP' AS
SELECT
  T1.STORE_ID
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_13_TEMP AS T2
ON T1.STORE_ID=T2.STORE_ID AND T1.BUS_STOP_NO=T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP' AS
SELECT DISTINCT
  A.STORE_ID
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BSN_TEMP' AS
SELECT
  '부산시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, STORE_ID, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY STORE_ID, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP ;



/* 최종테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP' AS
SELECT
  *
 , RANK() OVER(PARTITION BY STORE_ID ORDER BY DYN_POPL_CNT DESC) AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'A'
UNION ALL
SELECT
  *
 , NULL AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'B'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP ;


INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'BSN_STR_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '3-7' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , COUNT(*) AS  BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_TEMP
--WHERE CITY_CD = 'BSN'
;


/****************************************************************************************************************************
 
 제목 : 유동인구분석_U+고객 전체_1일
 일시 : 2018. 09. 14
 버전 : v01
 
 
 
****************************************************************************************************************************/


/**************************************************************************************

         서울시

**************************************************************************************/

/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_06_TEMP AS T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'SU' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6
INNER JOIN
( SELECT  BUS_STOP_NO, BUS_STOP_NM, AVG(COST) AS COST
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP WHERE BUS_STOP_NM NOT LIKE '%(가상)%'
  GROUP BY BUS_STOP_NO, BUS_STOP_NM
) T7
ON T6.BUS_STOP_NO = T7.BUS_STOP_NO  ;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  sex_dv_cd, fg_cust_age, COUNT(*) AS age_cnt
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
    FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
    WHERE 1=1
     AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
     AND BSTP_CITY_DIVS_CD = 'BAC001'
    GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
    GROUP BY BUS_STOP_NO ) AS T3
ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
    GROUP BY BUS_STOP_NO ) AS T3
ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
       GROUP BY BUS_STOP_NO ) AS T3
   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
       GROUP BY BUS_STOP_NO ) AS T3
   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
UNION ALL ( SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE, T6.BUS_STOP_NO, T6.BUS_STOP_NM, T8.DYN_POPL_CNT,
     T6.SCORE1+T7.SCORE2 AS SCORE , 'B' AS ANAL_THEMA_DV_CD
   FROM ( SELECT  T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM,
       SUM(T5.TOTAL_CNT*T5.WEIGHT_RATIO)/(AVG(T5.AD_COST)/1000) AS SCORE1
     FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
       WHERE FLAG_MOBILITY = 'ATC002'
     UNION ALL ( SELECT  DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
        FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
        WHERE FLAG_MOBILITY = 'ATC002'
        ) ) AS T5
     GROUP BY T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM ) AS T6
INNER JOIN ( SELECT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
      MAX(A.BRD_NUM*0.75*B.PG_RATIO*A.RP_WEIGHT*ROUND(A.RATIO,2))/(AVG(A.AD_COST)/1000) AS SCORE2
    FROM ( SELECT T1.* , T2.RATIO
      FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
        FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
        WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
    ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
    UNION ALL ( SELECT  T3.*, T4.RATIO
       FROM ( SELECT DISTINCT FLAG_MOBILITY,
           CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
           FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
         FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
         WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
       INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
       ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE 
       )
     ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
     GROUP BY A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM ) AS T7
ON T6.FLAG_MOBILITY = T7.FLAG_MOBILITY AND T6.SEX_DV_CD = T7.SEX_DV_CD
   AND T6.FG_CUST_AGE = T7.FG_CUST_AGE AND T6.BUS_STOP_NO = T7.BUS_STOP_NO
INNER JOIN ( SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
       ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO) AS DYN_POPL_CNT
    FROM ( SELECT T1.* , T2.RATIO
      FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
        FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
        WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
      INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
      ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
    UNION ALL ( SELECT  T3.*, T4.RATIO
       FROM ( SELECT DISTINCT FLAG_MOBILITY,
            CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
            FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
         FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
         WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
       INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
       ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
       )
        ) A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B 
   ) AS T8
ON T6.FLAG_MOBILITY = T8.FLAG_MOBILITY AND T6.SEX_DV_CD = T8.SEX_DV_CD
   AND T6.FG_CUST_AGE = T8.FG_CUST_AGE AND T6.BUS_STOP_NO = T8.BUS_STOP_NO
  )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP' AS
SELECT '서울시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 1 AND 50 THEN 'AEO001'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 51 AND 100 THEN 'AEO002'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 101 AND 150 THEN 'AEO003'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 151 AND 200 THEN 'AEO004'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 201 AND 250 THEN 'AEO005'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 251 AND 300 THEN 'AEO006'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 301 AND 350 THEN 'AEO007'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 351 AND 400 THEN 'AEO008'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 401 AND 450 THEN 'AEO009'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 451 AND 500 THEN 'AEO010'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 501 AND 550 THEN 'AEO011'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 551 AND 600 THEN 'AEO012'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 601 AND 650 THEN 'AEO013'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 651 AND 700 THEN 'AEO014'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 701 AND 750 THEN 'AEO015'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 751 AND 800 THEN 'AEO016'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 801 AND 850 THEN 'AEO017'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 851 AND 900 THEN 'AEO018'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 901 AND 950 THEN 'AEO019'
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 951 AND 1000 THEN 'AEO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'SU_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-1' AS JOB_STEP
 , COUNT(*) AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP;
----WHERE CITY_CD = 'SU'


/**************************************************************************************

         경기도

**************************************************************************************/



/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'GGI' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6  
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC002'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
--   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
--       GROUP BY BUS_STOP_NO ) AS T3
--   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
--   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
--       GROUP BY BUS_STOP_NO ) AS T3
--   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_GGI_03_TEMP AS B
--UNION ALL ( SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE, T6.BUS_STOP_NO, T6.BUS_STOP_NM, T8.DYN_POPL_CNT,
--     T6.SCORE1+T7.SCORE2 AS SCORE , 'B' AS ANAL_THEMA_DV_CD
--   FROM ( SELECT  T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM,
--       SUM(T5.TOTAL_CNT*T5.WEIGHT_RATIO)/(AVG(T5.AD_COST)/1000) AS SCORE1
--     FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
--          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--       WHERE FLAG_MOBILITY = 'ATC002'
--     UNION ALL ( SELECT  DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
--          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
--        FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--        WHERE FLAG_MOBILITY = 'ATC002'
--        ) ) AS T5
--     GROUP BY T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM ) AS T6
--   INNER JOIN ( SELECT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
--         MAX(A.BRD_NUM*0.75*B.PG_RATIO*A.RP_WEIGHT*ROUND(A.RATIO,2))/(AVG(A.AD_COST)/1000) AS SCORE2
--       FROM ( SELECT T1.* , T2.RATIO
--         FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
--           FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--           WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
--         INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
--         ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
--       UNION ALL ( SELECT  T3.*, T4.RATIO
--          FROM ( SELECT DISTINCT FLAG_MOBILITY,
--              CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
--               FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
--            FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--            WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
--          INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
--          ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE 
--          )
--        ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
--        GROUP BY A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM ) AS T7
--   ON T6.FLAG_MOBILITY = T7.FLAG_MOBILITY AND T6.SEX_DV_CD = T7.SEX_DV_CD
--       AND T6.FG_CUST_AGE = T7.FG_CUST_AGE AND T6.BUS_STOP_NO = T7.BUS_STOP_NO
--   INNER JOIN ( SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
--          ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO) AS DYN_POPL_CNT
--       FROM ( SELECT T1.* , T2.RATIO
--         FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
--           FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--           WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
--         INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
--         ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
--       UNION ALL ( SELECT  T3.*, T4.RATIO
--          FROM ( SELECT DISTINCT FLAG_MOBILITY,
--               CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
--               FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
--            FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--            WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
--          INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
--          ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
--          )
--           ) A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B 
--      ) AS T8
--   ON T6.FLAG_MOBILITY = T8.FLAG_MOBILITY AND T6.SEX_DV_CD = T8.SEX_DV_CD
--       AND T6.FG_CUST_AGE = T8.FG_CUST_AGE AND T6.BUS_STOP_NO = T8.BUS_STOP_NO
--  )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP' AS
SELECT '경기도' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GGI_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-2' AS JOB_STEP
 , NULL AS SU_CNT
 , COUNT(*)AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP
--WHERE CITY_CD = 'GGI'
;

/**************************************************************************************

         인천시

**************************************************************************************/



/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'ICN' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC003'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
--   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
--       GROUP BY BUS_STOP_NO ) AS T3
--   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
--   INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_07_TEMP
--       GROUP BY BUS_STOP_NO ) AS T3
--   ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_ICN_03_TEMP AS B
--UNION ALL ( SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE, T6.BUS_STOP_NO, T6.BUS_STOP_NM, T8.DYN_POPL_CNT,
--     T6.SCORE1+T7.SCORE2 AS SCORE , 'B' AS ANAL_THEMA_DV_CD
--   FROM ( SELECT  T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM,
--       SUM(T5.TOTAL_CNT*T5.WEIGHT_RATIO)/(AVG(T5.AD_COST)/1000) AS SCORE1
--     FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
--          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
--       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--       WHERE FLAG_MOBILITY = 'ATC002'
--     UNION ALL ( SELECT  DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, TOTAL_CNT, RP_CNT,
--          BRD_NUM, WEIGHT_RATIO, RP_WEIGHT, AD_COST
--        FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--        WHERE FLAG_MOBILITY = 'ATC002'
--        ) ) AS T5
--     GROUP BY T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T5.BUS_STOP_NM ) AS T6
--   INNER JOIN ( SELECT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
--         MAX(A.BRD_NUM*0.75*B.PG_RATIO*A.RP_WEIGHT*ROUND(A.RATIO,2))/(AVG(A.AD_COST)/1000) AS SCORE2
--       FROM ( SELECT T1.* , T2.RATIO
--         FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
--           FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--           WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
--         INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
--         ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
--       UNION ALL ( SELECT  T3.*, T4.RATIO
--          FROM ( SELECT DISTINCT FLAG_MOBILITY,
--              CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
--               FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM, RP_WEIGHT, AD_COST
--            FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--            WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
--          INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
--          ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE 
--          )
--        ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B
--        GROUP BY A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM ) AS T7
--   ON T6.FLAG_MOBILITY = T7.FLAG_MOBILITY AND T6.SEX_DV_CD = T7.SEX_DV_CD
--       AND T6.FG_CUST_AGE = T7.FG_CUST_AGE AND T6.BUS_STOP_NO = T7.BUS_STOP_NO
--   INNER JOIN ( SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
--          ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO) AS DYN_POPL_CNT
--       FROM ( SELECT T1.* , T2.RATIO
--         FROM ( SELECT DISTINCT FLAG_MOBILITY , SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
--           FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_09_TEMP
--           WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
--         INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T2
--         ON T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE
--       UNION ALL ( SELECT  T3.*, T4.RATIO
--          FROM ( SELECT DISTINCT FLAG_MOBILITY,
--               CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
--               FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
--            FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_10_TEMP
--            WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
--          INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_03_TEMP AS T4
--          ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
--          )
--           ) A , BDPL200.L2COT_DYNA_ANAL_STR_1D_SU_03_TEMP AS B 
--      ) AS T8
--   ON T6.FLAG_MOBILITY = T8.FLAG_MOBILITY AND T6.SEX_DV_CD = T8.SEX_DV_CD
--       AND T6.FG_CUST_AGE = T8.FG_CUST_AGE AND T6.BUS_STOP_NO = T8.BUS_STOP_NO
--  )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP' AS
SELECT '인천시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'ICN_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-3' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , COUNT(*) AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP
--WHERE CITY_CD = 'ICN'
;

/**************************************************************************************

         대구시

**************************************************************************************/



/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'DG' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC005'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_DG_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP' AS
SELECT '대구시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DG_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-4' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , COUNT(*) DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP
--WHERE CITY_CD = 'DG'
;

/**************************************************************************************

         대전시

**************************************************************************************/



/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'DJ' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC004'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_DJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP' AS
SELECT '대전시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DJ_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-5' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , COUNT(*) DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP
--WHERE CITY_CD = 'DJ'
;

/**************************************************************************************

         광주시

**************************************************************************************/



/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'GJ' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC006'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_GJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP' AS
SELECT '광주시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GJ_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-6' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , COUNT(*) GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP
--WHERE CITY_CD = 'GJ'
;

/**************************************************************************************

         부산시

**************************************************************************************/


/* U+고객 전체 모수 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP' AS
SELECT  T1.* ,
  CASE WHEN CUST_AGE <= 19 THEN 'AGE019'
    WHEN CUST_AGE BETWEEN 20 AND 29 THEN 'AGE020'
    WHEN CUST_AGE BETWEEN 30 AND 39 THEN 'AGE030'
    WHEN CUST_AGE BETWEEN 40 AND 49 THEN 'AGE040'
    WHEN CUST_AGE BETWEEN 50 AND 59 THEN 'AGE050'
    WHEN CUST_AGE >= 60 THEN 'AGE060'
    ELSE 'AGE***'
    END AS FG_CUST_AGE
FROM (  SELECT DISTINCT IMSI_NO, SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR , LAG_LAT, LAG_LOT, SPEED,
      P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD, gpName, FLAG_SP, FLAG_WEIGHT, FLAG_MOBILITY
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_05_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP' AS 
SELECT T6.FLAG_MOBILITY, T6.SEX_DV_CD, T6.FG_CUST_AGE , T6.BUS_STOP_NO,
  T6.BUS_STOP_NM, T6.GPNAME, T6.DISTANCE, T6.CLUSTCVG, T6.MEAN_WEIGHT, T6.TOTAL_CNT --, T7.COST
FROM (  SELECT  T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE,
    T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_06_TEMP  T5
  INNER JOIN
  ( SELECT T3.FLAG_MOBILITY, T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT  ,  SUM(T3.CNT) AS TOTAL_CNT
    FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT
     FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
      GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , END_LTE_CELL_ID 
       ) T1
    INNER JOIN ( SELECT *
        FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
        WHERE 1=1
         AND CITY_CD = 'BSN' ) AS T2
    ON T1.END_LTE_CELL_ID = CAST(T2.LTE_CEL_ID AS STRING)
    ) T3
         GROUP BY T3.FLAG_MOBILITY, T3.SEX_DV_CD,  T3.FG_CUST_AGE, T3.GPNAME
  ) T4
  ON T5.GPNAME = CAST(T4.GPNAME AS STRING)
  ) T6 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP' AS
SELECT T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.CNT/T4.TTL_CNT AS RATIO FROM
 ( SELECT  CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, COUNT(*) AS CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE flag_mobility='ATC002'
  GROUP BY SEX_DV_CD, FG_CUST_AGE
 ) T1 ,
 ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
 ) T4
UNION ALL (
SELECT T2.SEX_DV_CD, T2.FG_CUST_AGE, T2.SEX_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    'AGE000' AS FG_CUST_AGE,  COUNT(*) AS SEX_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY SEX_DV_CD
  ) T2 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT T3.SEX_DV_CD, T3.FG_CUST_AGE, T3.AGE_CNT/T4.TTL_CNT AS RATIO
FROM ( SELECT 'A' AS  SEX_DV_CD, FG_CUST_AGE, COUNT(*) AS AGE_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  GROUP BY FG_CUST_AGE
  ) T3 ,

  ( SELECT COUNT(*) AS TTL_CNT 
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_01_TEMP
  WHERE FLAG_MOBILITY='ATC002'
  ) T4
)
UNION ALL (
SELECT 'A' AS  SEX_DV_CD, 'AGE000' AS FG_CUST_AGE, 1 AS RATIO
);

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP' AS
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , ROUND(T3.RATIO,2) AS RATIO
FROM ( SELECT FLAG_MOBILITY,
    CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
    FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
     GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM      
  ) T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC007'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS T3
ON T1.SEX_DV_CD = T3.SEX_DV_CD AND T1.FG_CUST_AGE = T3.FG_CUST_AGE
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.FG_CUST_AGE, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
       (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO, (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY, T1.SEX_DV_CD, T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD AND T2.FG_CUST_AGE =T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.SEX_DV_CD, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY, T1.SEX_DV_CD, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.SEX_DV_CD ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3 
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.SEX_DV_CD = T3.SEX_DV_CD
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.SEX_DV_CD, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY,  T4.SEX_DV_CD, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.SEX_DV_CD = T5.SEX_DV_CD
AND T3.BUS_STOP_NO = T5.BUS_STOP_NO AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.FG_CUST_AGE, T5.BUS_STOP_NO, T3.TOTAL_CNT,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  T1.FG_CUST_AGE,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM  BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T1
  GROUP BY T1.FLAG_MOBILITY,  T1.FG_CUST_AGE ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY='ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY AND T2.FG_CUST_AGE = T3.FG_CUST_AGE
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
      WHERE FLAG_MOBILITY='ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.FG_CUST_AGE, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.FG_CUST_AGE = T5.FG_CUST_AGE AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP' AS
SELECT T5.FLAG_MOBILITY, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
  (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.FLAG_MOBILITY,  AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *, (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T1
    GROUP BY T1.FLAG_MOBILITY ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
    FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP 
    WHERE FLAG_MOBILITY = 'ATC002' ) AS T3
ON T2.FLAG_MOBILITY = T3.FLAG_MOBILITY
INNER JOIN ( SELECT T4.FLAG_MOBILITY, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_02_TEMP
      WHERE FLAG_MOBILITY = 'ATC002' ) AS T4
    GROUP BY T4.FLAG_MOBILITY, T4.BUS_STOP_NO ) AS T5
ON T3.FLAG_MOBILITY = T5.FLAG_MOBILITY AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP' AS
SELECT T1.* , T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, RATIO, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_05_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;
  
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP' AS
SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
FROM ( SELECT FLAG_MOBILITY, SEX_DV_CD,  "AGE000" AS FG_CUST_AGE , BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP 
  WHERE SEX_DV_CD IS NOT NULL
  GROUP BY FLAG_MOBILITY, SEX_DV_CD, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS RT
ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_06_TEMP AS T2
ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.SEX_DV_CD = T2.SEX_DV_CD  AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD,  FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP
     WHERE FG_CUST_AGE != "AGE***"
     GROUP BY FLAG_MOBILITY, FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_07_TEMP AS T2
    ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.FG_CUST_AGE = T2.FG_CUST_AGE AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
UNION ALL ( SELECT T1.* , RT.RATIO, T2.TOTAL_CNT, T2.WEIGHT_RATIO , T2.RP_WEIGHT --, T3.AD_COST
   FROM ( SELECT FLAG_MOBILITY, "A" AS SEX_DV_CD, "AGE000" AS FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM , BRD_NUM, SUM(SUM_CNT) AS RP_CNT
     FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_04_TEMP
     GROUP BY FLAG_MOBILITY, BUS_STOP_NO, BUS_STOP_NM, BRD_NUM ) AS T1
   INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS RT
   ON T1.SEX_DV_CD = RT.SEX_DV_CD AND T1.FG_CUST_AGE = RT.FG_CUST_AGE
   LEFT JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_08_TEMP AS T2
   ON T1.FLAG_MOBILITY = T2.FLAG_MOBILITY AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP' AS
SELECT DISTINCT A.FLAG_MOBILITY, A.SEX_DV_CD, A.FG_CUST_AGE, A.BUS_STOP_NO, A.BUS_STOP_NM,
    CASE WHEN A.FLAG_MOBILITY='ATC002' THEN ROUND(A.RP_CNT+A.BRD_NUM*0.75*ROUND(A.RATIO,2)*B.PG_RATIO)
     ELSE A.RP_CNT
     END AS DYN_POPL_CNT, 0 AS SCORE, 'A' AS ANAL_THEMA_DV_CD
FROM ( SELECT DISTINCT T1.FLAG_MOBILITY , T1.SEX_DV_CD, T1.FG_CUST_AGE, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T1.RP_CNT, T1.BRD_NUM, T2.RATIO
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_09_TEMP AS T1
  INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS T2
  ON T1.SEX_DV_CD=T2.SEX_DV_CD AND T1.FG_CUST_AGE=T2.FG_CUST_AGE
  UNION ALL ( SELECT T3.*, T4.RATIO
     FROM ( SELECT  DISTINCT FLAG_MOBILITY, CASE WHEN SEX_DV_CD IS NULL THEN '***' ELSE SEX_DV_CD END AS SEX_DV_CD,
         FG_CUST_AGE, BUS_STOP_NO, BUS_STOP_NM, RP_CNT, BRD_NUM
       FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_10_TEMP ) AS T3
     INNER JOIN BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_03_TEMP AS T4
     ON T3.SEX_DV_CD = T4.SEX_DV_CD AND T3.FG_CUST_AGE = T4.FG_CUST_AGE
     )
  ) AS A, BDPL200.L2COT_DYNA_ANAL_STR_1D_BSN_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP' AS
SELECT '부산시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, ANAL_THEMA_DV_CD,
    CASE WHEN SEX_DV_CD='FEMALE' THEN 'F'
      WHEN SEX_DV_CD='MALE' THEN 'M'
      WHEN SEX_DV_CD='A' THEN 'A'
      END AS SEX_DV_CD,   FG_CUST_AGE AS AGELV_DV_CD,
      FLAG_MOBILITY AS ACT_KD_CD,
    CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
      WHEN ANAL_THEMA_DV_CD='B' AND FLAG_MOBILITY='ATC002' AND RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
      END AS RANK_ORDR_NO,
 
    CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
      WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY FLAG_MOBILITY, SEX_DV_CD, FG_CUST_AGE , ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
      END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_11_TEMP 
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
 AND SEX_DV_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'BSN_UPLUS_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '4-7' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , COUNT(*) AS  BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP
--WHERE CITY_CD = 'BSN'
;

/**************************************************************************************

        최종테이블 생성

**************************************************************************************/

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_SU_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GGI_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_ICN_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DG_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_DJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_GJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_BSN_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_UPLUS_1D_TEMP' AS
SELECT
  *
 , RANK() OVER(PARTITION BY ACT_KD_CD, SEX_DV_CD, AGELV_DV_CD ORDER BY DYN_POPL_CNT DESC) AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'A'
UNION ALL
SELECT
  *
 , NULL AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'B'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_TEMP ;



/****************************************************************************************************************************
 
 제목 : 유동인구분석_업종구매고객_1일
 일시 : 2018. 09. 11
 버전 : v01
 
 
 
****************************************************************************************************************************/


/* 상점별 구매고객 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_00_TEMP' AS
SELECT DISTINCT
  T1.PRD_NO AS IMSI_NO
 , T1.SEX_DV_CD
 , T1.CUST_AGE
 , T2.STORE_ID
 , T2.STORE_BSST_NM
FROM BDPVIEW.L1AAT_MBL_ENTR_BAS AS T1
INNER JOIN ( SELECT DISTINCT
       A.CUST_NO
      , A.PRD_NO
      , A.STORE_ID
      , A.STORE_BSST_NM
    FROM BDPVIEW.L1DAT_ELST_STLM_TXN AS A
    INNER JOIN ( SELECT CUST_NO
        FROM BDPVIEW.L1AAT_MBL_ENTR_BAS
        WHERE ENTR_STTS_CD in ('A', 'S')
       ) AS B
    ON A.CUST_NO = B.CUST_NO
    LEFT ANTI JOIN BDPVIEW.L1DAT_ELST_STLM_TXN AS C
    ON (A.TRX_ID = C.TRX_ID AND C.TRX_CNCL_YN = 1 AND C.TRX_KIND_CD != "SC0040")
    WHERE A.TRX_CNCL_YN = 0 
     AND A.TRX_APRV_DT  BETWEEN FROM_UNIXTIME(UNIX_TIMESTAMP(ADD_MONTHS(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-12)), 'yyyyMMdd') AND FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyyMMdd')
   ) AS T2
ON T1.CUST_NO = T2.CUST_NO
LEFT ANTI JOIN BDPL200.L2COT_DYNA_ANAL_OCEM_HPNO_LIST AS T3
ON T1.PRD_NO = T3.IMSI_NO
WHERE T1.ENTR_STTS_CD in ('A', 'S')
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_00_TEMP;

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_01_TEMP' AS
SELECT DISTINCT
  A.IMSI_NO
 , A.SEX_DV_CD
 , A.CUST_AGE
 , B.IDKD_LCLS_CD
 , B.IDKD_MCLS_CD
 , B.IDKD_LCLS_CD_NM
 , B.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_00_TEMP AS A
INNER JOIN ( SELECT DISTINCT
      IDKD_LCLS_CD
     , IDKD_MCLS_CD
     , IDKD_LCLS_CD_NM
     , IDKD_MCLS_CD_NM
     , STORE_ID
      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
    WHERE 1=1
     AND TBL_DIVS_CD = '1' ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP;



/****************************************************************************************************

           서울시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '서울%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP ;


/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE 1=1
         AND SRC_DATA_DV_CD = 'XCDR'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND ESTB_ADDR LIKE '서울%' ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP;


/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'SU' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT T1.BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT  CONCAT( SUBSTR(BUS_STOP_NO, 1, 2), '-', SUBSTR(BUS_STOP_NO, 3, 3) ) AS BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPVIEW.L0EXT_A_P_BUS_ROUTE
      WHERE DISTRICT_CD='1'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'SU'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
  SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
           *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
           SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
           (T6.CL_CVG /1000) AS CLUSTCVG 
  FROM ( SELECT DISTINCT CONCAT( SUBSTR(BUS_STOP_NO, 1, 2), '-', SUBSTR(BUS_STOP_NO, 3, 3) ) AS BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
         FROM BDPVIEW.L0EXT_A_P_BUS_ROUTE
         WHERE DISTRICT_CD='1'
       )  T5 ,
       ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
     FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
    WHERE 1=1
     AND CITY_CD = 'SU'
       ) T6
  HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
  )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP;


/* 버스 정류장별 광고비 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP' AS
SELECT DISTINCT
  T11.BUS_STOP_NO
 , T11.BUS_STOP_NM
 , T11.CCW
 , T11.TOWN
 , CASE WHEN T11.BUS_STOP_NM LIKE '%수유역%' THEN 800000
    WHEN T11.UNIT_COST IS NOT NULL THEN T11.UNIT_COST
    WHEN T11.UNIT_COST IS NULL AND T11.TOWN_MEAN_COST IS NOT NULL THEN T11.TOWN_MEAN_COST
    WHEN T11.UNIT_COST IS NULL AND T11.TOWN_MEAN_COST IS NULL  THEN T11.CCW_MEAN_COST 
  END AS COST, T11.UNIT_COST , T11.TOWN_MEAN_COST , T11.CCW_MEAN_COST
FROM (  SELECT T2.CCW, T2.TOWN , T1.BUS_STOP_NO, T2.BUS_STOP_NM, T1.GPNAME, MAX(T2.UNIT_COST) AS UNIT_COST ,  NULL AS TOWN_MEAN_COST , NULL AS CCW_MEAN_COST
  FROM ( SELECT BUS_STOP_NO , BUS_STOP_NM, GPNAME
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP
    ) T1
  LEFT JOIN ( SELECT DISTINCT BUS_STOP_ID , CCW, TOWN, BUS_STOP_NM, UNIT_COST
     FROM BDPVIEW.L0EXT_F_P_BUS_STOP_AD_COST ) AS T2
  ON T1.BUS_STOP_NO = T2.BUS_STOP_ID
  GROUP BY CCW, TOWN, BUS_STOP_NO , BUS_STOP_NM , GPNAME
        HAVING UNIT_COST IS NOT NULL
  UNION ALL ( SELECT T10.CCW , T10.TOWN , T7.* , T10.TOWN_MEAN_COST, T10.CCW_MEAN_COST
     FROM ( SELECT BUS_STOP_NO, T5.BUS_STOP_NM, T5.GPNAME, T6.UNIT_COST
       FROM ( SELECT T3.* , T4.GPNAME
         FROM ( SELECT BUS_STOP_NO, BUS_STOP_NM , MIN(DISTANCE) AS MIN_DIST
           FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP  
           GROUP BY BUS_STOP_NO , BUS_STOP_NM
           ) T3
         INNER JOIN ( SELECT BUS_STOP_NO , GPNAME , DISTANCE
             FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP ) AS T4
         ON T3.BUS_STOP_NO=T4.BUS_STOP_NO AND T3.MIN_DIST=T4.DISTANCE
         ) T5
       LEFT JOIN ( SELECT DISTINCT BUS_STOP_ID ,BUS_STOP_NM, UNIT_COST
          FROM BDPVIEW.L0EXT_F_P_BUS_STOP_AD_COST ) AS T6
       ON T5.BUS_STOP_NO=T6.BUS_STOP_ID
       WHERE UNIT_COST IS NULL
       ) T7
     INNER JOIN ( SELECT DISTINCT T8.GPNAME, T8.TOWN_MEAN_COST, T8.CCW_MEAN_COST, T9.CCW_NM AS CCW , T9.TOWN_NM AS TOWN
         FROM ( SELECT *
           FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
           WHERE 1=1
           AND CITY_CD = 'SU' ) AS T8
         INNER JOIN BDPVIEW.L1NAT_LTE_CEL_MSTR_BAS AS T9
         ON T8.LTE_CEL_ID = T9.LTE_CEL_ID
        ) T10
     ON T7.GPNAME=CAST(T10.GPNAME AS STRING)
     )
  ) T11
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP ;


/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP' AS
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
 , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'SU' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP
    WHERE BUS_STOP_NM NOT LIKE '%(가상)%'
    GROUP BY BUS_STOP_NO ) AS T7
ON T6.BUS_STOP_NO = T7.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP' AS 
SELECT T1.* , ( T2.RIDE_NUM + T2.EXIT_NUM )  AS BRD_NUM , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM      
  ) AS T1
INNER JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
    FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
    WHERE 1=1
     AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
     AND BSTP_CITY_DIVS_CD = 'BAC001'
    GROUP BY BUS_STOP_NO, BUS_STOP_NM ) AS T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_09_TEMP T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP' AS
SELECT T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO , T3.TOTAL_CNT ,
      (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP
    ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) AS T2
INNER JOIN ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP   
   ) AS T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_11_TEMP
      ) AS T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) AS T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP;


/* 승하차인구 추가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP' AS
SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T1.BUS_STOP_NO, T1.BUS_STOP_NM,
  T2.TOTAL_CNT, T1.SUM_CNT AS RP_CNT, T1.BRD_NUM , T1.STORE_RATIO, T2.WEIGHT_RATIO, T2.RP_WEIGHT, T3.AD_COST
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
INNER JOIN ( SELECT BUS_STOP_NO, AVG(COST) AS AD_COST
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_07_TEMP
    WHERE BUS_STOP_NM NOT LIKE '%(가상)%'
    GROUP BY BUS_STOP_NO
   ) AS T3
ON T1.BUS_STOP_NO = T3.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 & 광고효과/광고가치  */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP' AS
SELECT DISTINCT A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM, A.BUS_STOP_NO, A.BUS_STOP_NM,
  A.RP_CNT+ ROUND((CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO),0) AS DYN_POPL_CNT,
  0 AS SCORE , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP AS B
UNION ALL (
   SELECT T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T1.BUS_STOP_NO, T1.BUS_STOP_NM, T3.DYN_POPL_CNT, T1.SCORE1+T2.SCORE2 AS SCORE , 'B' AS ANAL_THEMA_DV_CD
   FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT*WEIGHT_RATIO)/(AVG(AD_COST)/1000) AS SCORE1
     FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP
     GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
    ) T1
   INNER JOIN ( SELECT A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM, A.BUS_STOP_NO, A.BUS_STOP_NM,
         MAX(A.BRD_NUM*0.75*B.PG_RATIO*A.STORE_RATIO*A.RP_WEIGHT)/ (AVG(A.AD_COST)/1000) AS SCORE2
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP AS B
       GROUP BY A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM, A.BUS_STOP_NO, A.BUS_STOP_NM
      ) AS T2
   ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO

   INNER JOIN (  SELECT DISTINCT A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM, A.BUS_STOP_NO, A.BUS_STOP_NM,
         A.RP_CNT+ ROUND((CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO),0) AS DYN_POPL_CNT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_14_TEMP AS A , BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_03_TEMP AS B
      ) AS T3
   ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM AND  T1.BUS_STOP_NO = T3.BUS_STOP_NO
   )
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP ;


/* 유동인구/광고효과 순위 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP' AS
SELECT '서울시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 1 AND 50 THEN 'AEO001'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 51 AND 100 THEN 'AEO002'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 101 AND 150 THEN 'AEO003'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 151 AND 200 THEN 'AEO004'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 201 AND 250 THEN 'AEO005'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 251 AND 300 THEN 'AEO006'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 301 AND 350 THEN 'AEO007'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 351 AND 400 THEN 'AEO008'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 401 AND 450 THEN 'AEO009'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 451 AND 500 THEN 'AEO010'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 501 AND 550 THEN 'AEO011'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 551 AND 600 THEN 'AEO012'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 601 AND 650 THEN 'AEO013'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 651 AND 700 THEN 'AEO014'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 701 AND 750 THEN 'AEO015'
     WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 751 AND 800 THEN 'AEO016'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 801 AND 850 THEN 'AEO017'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 851 AND 900 THEN 'AEO018'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 901 AND 950 THEN 'AEO019'
    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC) BETWEEN 951 AND 1000 THEN 'AEO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_15_TEMP  
  ) T1
WHERE 1=1
 AND RANK_ORDR_NO IS NOT NULL
 AND RANK_LVL_CD IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'SU_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-1' AS JOB_STEP
 , COUNT(*) AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP;
----WHERE CITY_CD = 'SU'

/****************************************************************************************************

           경기도

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '경기%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '경기%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GGI' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='02'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GGI'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='02'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'GGI'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'GGI' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC002'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP' AS
SELECT
  '경기도' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GGI_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-2' AS JOB_STEP
 , NULL AS SU_CNT
 , COUNT(*)AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP
--WHERE CITY_CD = 'GGI'
;

/****************************************************************************************************

           인천시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '인천%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '인천%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'ICN' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='23'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'ICN'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='23'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'ICN'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'ICN' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC003'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP' AS
SELECT
  '인천시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'ICN_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-3' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , COUNT(*) AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP
--WHERE CITY_CD = 'ICN'
;


/****************************************************************************************************

           대구시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대구%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대구%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DG' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='22'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DG'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='22'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'DG'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'DG' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC005'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP' AS
SELECT
  '대구시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP ;


INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DG_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-4' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , COUNT(*) DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP
--WHERE CITY_CD = 'DG'
;

/****************************************************************************************************

           대전시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대전%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '대전%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DJ' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='25'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'DJ'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='25'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'DJ'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'DJ' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC004'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP' AS
SELECT
  '대전시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DJ_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-5' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , COUNT(*) DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP
--WHERE CITY_CD = 'DJ'
;


/****************************************************************************************************

           광주시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '광주%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '광주%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GJ' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='24'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'GJ'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='24'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'GJ'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'GJ' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC006'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP' AS
SELECT
  '광주시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GJ_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-6' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , COUNT(*) GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP
--WHERE CITY_CD = 'GJ'
;


/****************************************************************************************************

           부산시

****************************************************************************************************/

/* 전체상점별 구매고객의 위치찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP' AS
SELECT DISTINCT
  T1.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T1.BASE_TM
 , T1.END_LTE_CELL_ID
 , T1.ESTB_ADDR
 , T1.LAT_CRDNT_ADDR
 , T1.LOT_CRDNT_ADDR
 , T1.P_BASIS_YYYY
 , T1.P_BASIS_MM
 , T1.P_BASIS_DD
FROM (  SELECT IMSI_NO, BASE_TM, ESTB_ADDR, END_LTE_CELL_ID, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, P_BASIS_YYYY, P_BASIS_MM, P_BASIS_DD
  FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
  WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '부산%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
     ) AS T1
INNER JOIN  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP;

/* PG 점유율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP' AS
SELECT
  A.PG_CNT / B.UPLUS_CNT AS PG_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS PG_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP ) AS A,
  ( SELECT
     COUNT(DISTINCT IMSI_NO ) AS UPLUS_CNT
        FROM BDPVIEW.L1DAT_SSCRB_LOC_HST
        WHERE SRC_DATA_DV_CD = 'XCDR'
      AND ESTB_ADDR LIKE '부산%'
      AND P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
      AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1)) ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP;

/* 고객별 이동속도 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP' AS
SELECT
  T2.IMSI_NO
 , T2.SEX_DV_CD
 , T2.CUST_AGE
 , T2.BASE_TM
 , T2.END_LTE_CELL_ID
 , T2.ESTB_ADDR
 , T2.LAT_CRDNT_ADDR
 , T2.LOT_CRDNT_ADDR
 , T2.LAG_LAT
 , T2.LAG_LOT
 , T2.TIME
 , (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.LAG_LAT AS DOUBLE),5)))*COS(RADIANS(ROUND(CAST (T2.LAT_CRDNT_ADDR AS DOUBLE),5)))
         *COS(RADIANS(ROUND(CAST (T2.LOT_CRDNT_ADDR AS DOUBLE),5))-RADIANS(ROUND(CAST(T2.LAG_LOT AS DOUBLE),5)))+
         SIN(RADIANS(ROUND(CAST(T2.LAG_LAT AS DOUBLE),5)))*SIN(RADIANS(ROUND(CAST(T2.LAT_CRDNT_ADDR AS DOUBLE),5)))))*1000/T2.TIME AS SPEED
    , T2.P_BASIS_YYYY
    , T2.P_BASIS_MM
    , T2.P_BASIS_DD
FROM ( SELECT
    T1.*
   , LAG(T1.LAT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LAT
   , LAG(T1.LOT_CRDNT_ADDR, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) AS LAG_LOT
   , ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
    (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)*60) +
    CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T1.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T1.BASE_TM, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) AS TIME
        FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP AS T1
  ) AS T2
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP' AS
SELECT
  T3.*
 , CASE WHEN T3.FLAG_SP="SPD002" THEN 70/SPEED ELSE 0 END AS FLAG_WEIGHT
 , CASE WHEN T3.FLAG_SP="SPD001" THEN "ATC001"
   WHEN T3.FLAG_SP="SPD003" THEN "ATC003"
   WHEN T3.FLAG_SP="SPD002"
    AND T3.GPNAME=LAG(T3.GPNAME,1,NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM)
    AND ( (CAST(DAY(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*24*60) +  
        (CAST(HOUR(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)*60) +
        CAST(MINUTE(FROM_UNIXTIME(UNIX_TIMESTAMP(CONCAT(T3.BASE_TM,':00'))-UNIX_TIMESTAMP(CONCAT(LAG(T3.BASE_TM, 1, NULL) OVER (PARTITION BY T3.IMSI_NO, T3.GPNAME ORDER BY T3.BASE_TM) ,':00')))) AS FLOAT)-1440
      ) < 60 THEN "ATC001"
   ELSE "ATC002"
   END AS FLAG_MOBILITY -- 조정된 이동 속도별 활동 유형 분류 (ATC001 : 상주, ATC002 : 도보, ATC003 : 차량&대중교통)
FROM ( SELECT
    T1.*
   , T2.GPNAME
   , CASE WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND LAG(T1.SPEED, 2, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  
        AND LEAD(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5  THEN "SPD001"
      WHEN T1.SPEED < 5  AND LAG(T1.SPEED, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM) < 5
        AND (T1.TIME+LAG(T1.TIME, 1, NULL) OVER (PARTITION BY T1.IMSI_NO ORDER BY T1.BASE_TM)) >= 30 THEN "SPD001"
      WHEN T1.SPEED >= 5 AND  T1.SPEED < 300 THEN "SPD002"
      WHEN T1.SPEED >= 300 THEN "SPD003"
     ELSE "SPD001"
    END AS FLAG_SP -- 이동 속도별 활동 유형 분류 (SPD001 : 상주, SPD002 : 도보, SPD003 : 차량&대중교통)
  FROM ( SELECT IMSI_NO ,SEX_DV_CD, CUST_AGE, BASE_TM, END_LTE_CELL_ID, ESTB_ADDR, LAT_CRDNT_ADDR, LOT_CRDNT_ADDR, LAG_LAT, LAG_LOT,
      CASE WHEN TIME IS NULL THEN 10
        ELSE TIME
      END AS TIME,
      CASE WHEN SPEED IS NULL THEN 70
        WHEN IS_NAN(SPEED)=1 THEN 0
        ELSE SPEED
      END AS SPEED
     , P_BASIS_YYYY
     , P_BASIS_MM
     , P_BASIS_DD
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_04_TEMP
    WHERE TIME <> 0 AND TIME IS NOT NULL AND SPEED IS NOT NULL ) AS T1
  INNER JOIN ( SELECT *
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'BSN' ) AS T2
  ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID ) T3
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP ;


/* 거리 및 RULE 기준으로 버스정류장과 기지국 클러스터 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP' AS
SELECT
  T4.BUS_STOP_NO
 , T4.BUS_STOP_NM
 , T4.GPNAME
 , T4.DISTANCE
 , T4.CLUSTCVG
FROM (  SELECT
    DENSE_RANK() OVER (PARTITION BY  T3.BUS_STOP_NO,  T3.BUS_STOP_NM ORDER BY T3.DISTANCE) AS RANKING
   , T3.BUS_STOP_NO , T3.BUS_STOP_NM , T3.GPNAME , T3.ESTB_ADDR , T3.DISTANCE , T3.CLUSTCVG
  FROM ( SELECT BUS_STOP_NO,  T1.BUS_STOP_NM, CAST(T2.GPNAME AS STRING) AS GPNAME, T2.ESTB_ADDR,
      (6371*ACOS(COS(RADIANS(ROUND(CAST (T2.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T1.LAT_VAL AS DOUBLE),4)))
       *COS(RADIANS(ROUND(CAST (T1.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T2.MEANLOT AS DOUBLE),4)))+
       SIN(RADIANS(ROUND(CAST(T2.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T1.LAT_VAL AS DOUBLE),4))))) AS DISTANCE  
      ,(T2.CL_CVG /1000) AS CLUSTCVG
                FROM ( SELECT DISTINCT
                    BUS_STOP_NO, BUS_STOP_NM , LAT_VAL, LOT_VAL
      FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
      WHERE DISTRICT_CD='27'
      ) T1,
      ( SELECT DISTINCT
         GPNAME, ESTB_ADDR, MEANLAT, MEANLOT, CLUSTCVG AS CL_CVG
      FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
      WHERE 1=1
       AND CITY_CD = 'BSN'
      ) T2
    HAVING DISTANCE < 0.285
    ) T3
  ) T4
WHERE T4.RANKING = 1 AND (DISTANCE+CLUSTCVG) < 0.5 OR (DISTANCE+CLUSTCVG) < 0.1   
UNION (
SELECT T5.BUS_STOP_NO, T5.BUS_STOP_NM, CAST(T6.GPNAME AS STRING) AS GPNAME,
    (6371*ACOS(COS(RADIANS(ROUND(CAST (T6.MEANLAT AS DOUBLE),4)))*COS(RADIANS(ROUND(CAST (T5.LAT_VAL AS DOUBLE),4)))
         *COS(RADIANS(ROUND(CAST (T5.LOT_VAL AS DOUBLE),4))-RADIANS(ROUND(CAST(T6.MEANLOT AS DOUBLE),4)))+
         SIN(RADIANS(ROUND(CAST(T6.MEANLAT AS DOUBLE),4)))*SIN(RADIANS(ROUND(CAST(T5.LAT_VAL AS DOUBLE),4))))) AS DISTANCE ,
         (T6.CL_CVG /1000) AS CLUSTCVG 
FROM ( SELECT DISTINCT BUS_STOP_NO, BUS_STOP_NM, LAT_VAL, LOT_VAL
       FROM BDPL200.L2COT_BUS_LNE_BSTP_INFO_TEMP
       WHERE DISTRICT_CD='27'
     )  T5 ,
     ( SELECT DISTINCT GPNAME, ESTB_ADDR, MEANLAT, MEANLOT , CLUSTCVG AS CL_CVG
    FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
  WHERE 1=1
   AND CITY_CD = 'BSN'
     ) T6
HAVING (DISTANCE+CLUSTCVG) < 0.3 && DISTANCE < (CLUSTCVG)
)
;
 
COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP ;


/* 버스 정류장별 광고비 매칭 -> 쓰지 않음 */



/* 위치 정보가 수집된 상점 ID별 고객과 매칭 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP' AS 
SELECT
  T1.*
 , T2.IDKD_LCLS_CD
 , T2.IDKD_MCLS_CD
 , T2.IDKD_LCLS_CD_NM
 , T2.IDKD_MCLS_CD_NM
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_05_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_01_TEMP AS T2
ON T1.IMSI_NO = T2.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP ;


/* 상점 비율 (STORE_RATIO) 산출 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP' AS 
SELECT B.IDKD_LCLS_CD, B.IDKD_MCLS_CD, B.IDKD_LCLS_CD_NM, B.IDKD_MCLS_CD_NM, B.STR_CNT, B.STR_CNT/A.TTL_CNT AS STORE_RATIO
FROM ( SELECT
    COUNT(DISTINCT IMSI_NO) AS TTL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_02_TEMP
  ) AS A,
  (  SELECT
     T3.IDKD_LCLS_CD
   , T3.IDKD_MCLS_CD
   , T3.IDKD_LCLS_CD_NM
   , T3.IDKD_MCLS_CD_NM
    , COUNT(DISTINCT T3.IMSI_NO) AS STR_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP AS T3
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  HAVING STR_CNT >= 100   -- 고객 최소 50명 이상 식별된 상점만 가져오기 - 로직 변경 (기존 : STR_CNT >= 100)
  ) AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP ;

/* 고객 최소 50명 이상 식별된 상점만 남기기 - INNER JOIN - 로직 변경 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP' AS 
SELECT T1.*
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_08_TEMP AS T1
INNER JOIN ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP ) AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP' AS 
SELECT
  T6.IDKD_LCLS_CD
 , T6.IDKD_MCLS_CD
 , T6.IDKD_LCLS_CD_NM
 , T6.IDKD_MCLS_CD_NM
 , T6.BUS_STOP_NO
 , T6.BUS_STOP_NM
 , T6.GPNAME
 , T6.DISTANCE
 , T6.CLUSTCVG
 , T6.MEAN_WEIGHT
 , T6.TOTAL_CNT
-- , T7.AD_COST
FROM ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T5.BUS_STOP_NO,
    T5.BUS_STOP_NM, T5.GPNAME, T5.DISTANCE, T5.CLUSTCVG, T4.MEAN_WEIGHT, T4.TOTAL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_06_TEMP AS T5
  INNER JOIN
  ( SELECT  T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, CAST(T3.GPNAME AS STRING) AS GPNAME, SUM(T3.WEIGHT)/SUM(T3.CNT) AS MEAN_WEIGHT , SUM(T3.CNT) AS TOTAL_CNT 
   FROM ( SELECT  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM, T2.GPNAME, T1.END_LTE_CELL_ID, T1.CNT, T1.WEIGHT 
     FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID, COUNT(*) AS CNT , SUM(FLAG_WEIGHT) AS WEIGHT
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_10_TEMP
       WHERE FLAG_MOBILITY = "ATC002"
       GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, END_LTE_CELL_ID 
       ) T1
     INNER JOIN ( SELECT *
         FROM BDPL200.L2COT_DYNA_ANAL_CLUSTER_TEMP
         WHERE 1=1
          AND CITY_CD = 'BSN' ) AS T2
     ON T1.END_LTE_CELL_ID = T2.LTE_CEL_ID
     ) T3
   GROUP BY T3.IDKD_LCLS_CD, T3.IDKD_MCLS_CD, T3.IDKD_LCLS_CD_NM, T3.IDKD_MCLS_CD_NM, T3.GPNAME
  ) T4
  ON T5.GPNAME = T4.GPNAME
  ) T6
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP' AS 
SELECT
  T1.*
 , ( T2.RIDE_NUM + T2.EXIT_NUM ) AS BRD_NUM -- 승하차 인구수
 , T3.STORE_RATIO
FROM ( SELECT IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM, SUM(TOTAL_CNT) AS SUM_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, BUS_STOP_NO, BUS_STOP_NM
  ) AS T1
LEFT JOIN ( SELECT BUS_STOP_NO, BUS_STOP_NM, SUM(RIDE_NUM) AS RIDE_NUM, SUM(EXIT_NUM) AS EXIT_NUM
   FROM BDPL200.L2COT_BUS_RIDE_DALY_SUM_BYAR          -- 승하차인구 테이블셋 가상으로 만들어 매핑 (추후 데이터 생성시 수정 필요)
      WHERE 1=1
    AND TRANSLATE(WORK_DT, '-', '') BETWEEN '99999999' AND '99999999'
    AND BSTP_CITY_DIVS_CD = 'BAC007'
      GROUP BY BUS_STOP_NO, BUS_STOP_NM
   ) T2
ON T1.BUS_STOP_NO = T2.BUS_STOP_NO AND T1.BUS_STOP_NM = T1.BUS_STOP_NM
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_09_TEMP AS T3
ON T1.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP' AS
SELECT
  T5.IDKD_LCLS_CD, T5.IDKD_MCLS_CD, T5.IDKD_LCLS_CD_NM, T5.IDKD_MCLS_CD_NM
 , T5.BUS_STOP_NO
 , T3.TOTAL_CNT
 , (T3.WG/T2.AVG_WG) AS WEIGHT_RATIO
 , (T5.BUS_WG/T2.AVG_WG) AS RP_WEIGHT
FROM ( SELECT
    T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
   , AVG(T1.WEIGHT) AS AVG_WG
  FROM ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WEIGHT
    FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP
                 ) T1
  GROUP BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM
  ) T2
INNER JOIN ( SELECT *
     , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
       FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP   
   ) T3 
ON T2.IDKD_LCLS_CD = T3.IDKD_LCLS_CD AND T2.IDKD_MCLS_CD = T3.IDKD_MCLS_CD AND T2.IDKD_LCLS_CD_NM = T3.IDKD_LCLS_CD_NM AND T2.IDKD_MCLS_CD_NM = T3.IDKD_MCLS_CD_NM
INNER JOIN ( SELECT T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO, AVG(T4.WG) AS BUS_WG
    FROM ( SELECT * , (MEAN_WEIGHT)/LN((DISTANCE+CLUSTCVG)*(DISTANCE+CLUSTCVG)*1000000+0.1) AS WG
      FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_11_TEMP
      ) T4 
    GROUP BY T4.IDKD_LCLS_CD, T4.IDKD_MCLS_CD, T4.IDKD_LCLS_CD_NM, T4.IDKD_MCLS_CD_NM, T4.BUS_STOP_NO
   ) T5
ON T3.IDKD_LCLS_CD = T5.IDKD_LCLS_CD AND T3.IDKD_MCLS_CD = T5.IDKD_MCLS_CD AND T3.IDKD_LCLS_CD_NM = T5.IDKD_LCLS_CD_NM AND T3.IDKD_MCLS_CD_NM = T5.IDKD_MCLS_CD_NM AND T3.BUS_STOP_NO = T5.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP;


/* 승하차인구 조인 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP' AS
SELECT
  T1.IDKD_LCLS_CD, T1.IDKD_MCLS_CD, T1.IDKD_LCLS_CD_NM, T1.IDKD_MCLS_CD_NM
 , T1.BUS_STOP_NO
 , T1.BUS_STOP_NM
 , T2.TOTAL_CNT
 , T1.SUM_CNT AS RP_CNT
 , T1.BRD_NUM
 , T1.STORE_RATIO
 , T2.WEIGHT_RATIO
 , T2.RP_WEIGHT
FROM  BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_12_TEMP AS T1
INNER JOIN BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_13_TEMP AS T2
ON T1.IDKD_LCLS_CD = T2.IDKD_LCLS_CD AND T1.IDKD_MCLS_CD = T2.IDKD_MCLS_CD AND T1.IDKD_LCLS_CD_NM = T2.IDKD_LCLS_CD_NM AND T1.IDKD_MCLS_CD_NM = T2.IDKD_MCLS_CD_NM AND T1.BUS_STOP_NO = T2.BUS_STOP_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP ;


/* 기지국 기준 유동인구 + 조정된 승하차인구 -- 광고효과/광고가치 는 제거 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP' AS
SELECT DISTINCT
  A.IDKD_LCLS_CD, A.IDKD_MCLS_CD, A.IDKD_LCLS_CD_NM, A.IDKD_MCLS_CD_NM
 , A.BUS_STOP_NO
 , A.BUS_STOP_NM
 , A.RP_CNT+ (CASE WHEN A.BRD_NUM IS NULL THEN 0 ELSE A.BRD_NUM END *0.75*B.PG_RATIO*A.STORE_RATIO) AS DYN_POPL_CNT
-- , 0 AS SCORE
 , 'A' AS ANAL_THEMA_DV_CD
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_14_TEMP AS A, BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_03_TEMP AS B
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP ;


/* 유동인구로 순위 산출 -- 광고효과/광고가치 는 순위 산출 불가 */
--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP' AS
SELECT
  '부산시' AS DISTRICT_NM
 , T1.*
-- , T2.CCW_NM
-- , T2.TOWN_NM
FROM ( SELECT  
    BUS_STOP_NO AS BUS_STOP_NO, BUS_STOP_NM AS BUS_STOP_NM, IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD,
  CASE WHEN ANAL_THEMA_DV_CD='A' THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC )
--    WHEN ANAL_THEMA_DV_CD='B' AND RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC ) <= 1000 THEN RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY SCORE DESC )
    END AS RANK_ORDR_NO,
  CASE WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100 BETWEEN 0 AND 5 THEN 'FPO001'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 5 AND 10 THEN 'FPO002'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 10 AND 15 THEN 'FPO003'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 15 AND 20 THEN 'FPO004'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 20 AND 25 THEN 'FPO005'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 25 AND 30 THEN 'FPO006'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD  ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 30 AND 35 THEN 'FPO007'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 35 AND 40 THEN 'FPO008'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 40 AND 45 THEN 'FPO009'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 45 AND 50 THEN 'FPO010'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 50 AND 55 THEN 'FPO011'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 55 AND 60 THEN 'FPO012'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 60 AND 65 THEN 'FPO013'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 65 AND 70 THEN 'FPO014'
     WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 70 AND 75 THEN 'FPO015'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 75 AND 80 THEN 'FPO016'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 80 AND 85 THEN 'FPO017'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 85 AND 90 THEN 'FPO018'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 90 AND 95 THEN 'FPO019'
    WHEN ANAL_THEMA_DV_CD='A' AND PERCENT_RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM, ANAL_THEMA_DV_CD ORDER BY DYN_POPL_CNT DESC) * 100  BETWEEN 95 AND 100 THEN 'FPO020'
    END AS RANK_LVL_CD, DYN_POPL_CNT
  FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_15_TEMP
  ) T1
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP ;


/* 최종테이블 생성 */

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP' AS
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_SU_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GGI_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_ICN_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DG_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_DJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_GJ_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP' AS
SELECT
  *
 , RANK() OVER(PARTITION BY IDKD_LCLS_CD, IDKD_MCLS_CD, IDKD_LCLS_CD_NM, IDKD_MCLS_CD_NM ORDER BY DYN_POPL_CNT DESC) AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'A'
UNION ALL
SELECT
  *
 , NULL AS ALL_RANK_ORDR_NO
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_01_TEMP
WHERE 1=1
 AND ANAL_THEMA_DV_CD = 'B'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP ;

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'BSN_IDKD_TEMP' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '5-7' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , COUNT(*) AS  BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BSN_TEMP
--WHERE CITY_CD = 'BSN'
;

/***************************************** INSERT할 1일 최종테이블 ***********************************************/

--DROP TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_1D_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_DYNA_ANAL_1D_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL_1D_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_DYNA_ANAL_1D_TEMP' AS
SELECT
  'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , '' AS IDKD_LCLS_CD
 , '' AS IDKD_MCLS_CD
 , '' AS IDKD_LCLS_CD_NM
 , '' AS IDKD_MCLS_CD_NM
 , STORE_ID
 , 'A' AS CUST_DIVS_CD
 , DISTRICT_NM AS CITY_NM
 , BUS_STOP_NO AS BSTP_NO
 , BUS_STOP_NM AS BSTP_NM
 , ANAL_THEMA_DV_CD AS ANAL_THMA_DIVS_CD
 , NULL AS SEX_DV_CD
 , NULL AS AGELV_DV_CD
 , NULL AS ACT_KD_CD
 , RANK_ORDR_NO AS RANK_ORD_NO
 , RANK_LVL_CD
 , DYN_POPL_CNT AS DYNA_CNT
 , ALL_RANK_ORDR_NO AS ALL_RANK_ORD_NO
FROM BDPL200.L2COT_DYNA_ANAL_STR_1D_BYAR_TEMP
UNION ALL
SELECT
  'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , '' AS IDKD_LCLS_CD
 , '' AS IDKD_MCLS_CD
 , '' AS IDKD_LCLS_CD_NM
 , '' AS IDKD_MCLS_CD_NM
 , '~common~' AS STORE_ID
 , 'C' AS CUST_DIVS_CD
 , DISTRICT_NM AS CITY_NM
 , BUS_STOP_NO AS BSTP_NO
 , BUS_STOP_NM AS BSTP_NM
 , ANAL_THEMA_DV_CD AS ANAL_THMA_DIVS_CD
 , SEX_DV_CD
 , AGELV_DV_CD
 , ACT_KD_CD
 , RANK_ORDR_NO AS RANK_ORD_NO
 , RANK_LVL_CD
 , DYN_POPL_CNT AS DYNA_CNT
 , ALL_RANK_ORDR_NO AS ALL_RANK_ORD_NO
FROM BDPL200.L2COT_DYNA_ANAL_UPLUS_1D_TEMP
UNION ALL
SELECT
  'D' AS TERM_CLSS_CD
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy') AS TERM_YY
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM') AS TERM_MM
 , FROM_UNIXTIME(UNIX_TIMESTAMP(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)), 'yyyy-MM-dd') AS TERM_DT_NM
 , IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , '~common~' AS STORE_ID
 , 'B' AS CUST_DIVS_CD
 , DISTRICT_NM AS CITY_NM
 , BUS_STOP_NO AS BSTP_NO
 , BUS_STOP_NM AS BSTP_NM
 , ANAL_THEMA_DV_CD AS ANAL_THMA_DIVS_CD
 , NULL AS SEX_DV_CD
 , NULL AS AGELV_DV_CD
 , NULL AS ACT_KD_CD
 , RANK_ORDR_NO AS RANK_ORD_NO
 , RANK_LVL_CD
 , DYN_POPL_CNT AS DYNA_CNT
 , ALL_RANK_ORDR_NO AS ALL_RANK_ORD_NO
FROM BDPL200.L2COT_DYNA_ANAL_IDKD_1D_BYAR_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL_1D_TEMP ;


INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'SU_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-1' AS JOB_STEP
 , COUNT(*) AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP;
----WHERE CITY_CD = 'SU'

INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GGI_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-2' AS JOB_STEP
 , NULL AS SU_CNT
 , COUNT(*)AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'GGI'
;
INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'ICN_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-3' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , COUNT(*) AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'ICN'
;
INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DG_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-4' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , COUNT(*) DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'DG'
;
INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'DJ_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-5' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , COUNT(*) DJ_CNT 
 , NULL AS GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'DJ'
;
INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'GJ_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-6' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , COUNT(*) GJ_CNT 
 , NULL AS BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'GJ'
;
INSERT INTO TABLE BDPL200.L2COT_DYNA_ANAL_TEST_LOG
SELECT
 'BSN_TEMP_END' AS TEMP_NAME
 , CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP) AS LOG_TIME
 , '6-7' AS JOB_STEP
 , NULL AS SU_CNT
 , NULL AS GGI_CNT 
 , NULL AS ICN_CNT
 , NULL AS DG_CNT 
 , NULL AS DJ_CNT 
 , NULL AS GJ_CNT 
 , COUNT(*) AS  BSN_CNT
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
--WHERE CITY_CD = 'BSN'
;

INSERT OVERWRITE TABLE BDPL200.L2COT_DYNA_ANAL
PARTITION (
   P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
  , P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
  , P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP), -1))
  , P_BASIS_CLSS = 1
   )
SELECT
  TERM_CLSS_CD
 , TERM_YY
 , TERM_MM
 , TERM_DT_NM
 , IDKD_LCLS_CD
 , IDKD_MCLS_CD
 , IDKD_LCLS_CD_NM
 , IDKD_MCLS_CD_NM
 , STORE_ID
 , CUST_DIVS_CD
 , CITY_NM
 , BSTP_NO
 , BSTP_NM
 , ANAL_THMA_DIVS_CD
 , SEX_DV_CD
 , AGELV_DV_CD
 , ACT_KD_CD
 , RANK_ORD_NO
 , RANK_LVL_CD
 , ROUND(DYNA_CNT) AS DYNA_CNT
 , ALL_RANK_ORD_NO
FROM BDPL200.L2COT_DYNA_ANAL_1D_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_DYNA_ANAL ;
