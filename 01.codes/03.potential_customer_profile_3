--SET REQUEST_POOL=RPIDD;
--SET MEM_LIMIT=7G;

/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_소셜미디어 이용_U+모바일전체고객_1주
 일시 : 2018. 07. 17
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP' AS
SELECT DISTINCT
  CUST_NO
 , PRD_NO
FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
WHERE 1=1
 AND ENTR_STTS_CD = 'A'
 AND PRD_NO IS NOT NULL 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP ;

/* 접속 SNS사이트 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP' AS
SELECT DISTINCT
  SITE_NM AS IDFY_SITE_NM
 , HOST_SITE_NM
FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
WHERE 1=1
 AND REPLACE(TRIM(SITE_NM), ' ', '') IN ('QQ(중국메신저앱)', 'Tumblr', 'Twitter', '구글블로그', '네이버밴드',
          '네이버블로그', '유튜브', '인스타그램', '카카오스토리', '페이스북')
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP' AS
SELECT
  IMSI_NO
 , HH
 , HOST_SITE_NM
 , COUNT(HOST_SITE_NM) AS VIEW_CNT
 , SUM(PSS_TM) AS SUM_PSS_TM
FROM (
  SELECT
    IMSI_NO
   , HOST_SITE_NM
   , SUBSTR(STRT_TM, 12, 2) AS HH
   , PSS_TM
  FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
  WHERE 1=1
   AND PSS_TM >= 10                -- 60초 초과
  --    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
   AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
     OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
    ) ) AS A
GROUP BY IMSI_NO, HH, HOST_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP' AS
SELECT
  A.IMSI_NO
 , A.HH
 , B.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_99_TEMP AS B
ON A.HOST_SITE_NM = B.HOST_SITE_NM
GROUP BY A.IMSI_NO, A.HH, B.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ;

/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.IMSI_NO
 , A.HH
 , A.IDFY_SITE_NM
 , A.VIEW_CNT
 , A.SUM_PSS_TM
 , CASE WHEN A.HH = '01' OR A.HH = '02' THEN '01_01시~03시'
   WHEN A.HH = '03' OR A.HH = '04' THEN '02_03시~05시'
   WHEN A.HH = '05' OR A.HH = '06' THEN '03_05시~07시'
   WHEN A.HH = '07' OR A.HH = '08' THEN '04_07시~09시'
   WHEN A.HH = '09' OR A.HH = '10' THEN '05_09시~11시'
   WHEN A.HH = '11' OR A.HH = '12' THEN '06_11시~13시'
   WHEN A.HH = '13' OR A.HH = '14' THEN '07_13시~15시'
   WHEN A.HH = '15' OR A.HH = '16' THEN '08_15시~17시'
   WHEN A.HH = '17' OR A.HH = '18' THEN '09_17시~19시'
   WHEN A.HH = '19' OR A.HH = '20' THEN '10_19시~21시'
   WHEN A.HH = '21' OR A.HH = '22' THEN '11_21시~23시'
   WHEN A.HH = '23' OR A.HH = '00' THEN '12_23시~01시'
   END AS HH_DV
FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP' AS
SELECT
  CUST_NO
 , HH_DV
 , IDFY_SITE_NM
 , SUM(VIEW_CNT) AS VIEW_CNT
 , SUM(SUM_PSS_TM) AS SUM_PSS_TM
FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_02_TEMP
GROUP BY CUST_NO, HH_DV, IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP ;


/* U+모바일전체고객에 대한 SNS 사이트별 시간대 접속고객의 점유율 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP' AS
SELECT
  IDFY_SITE_NM
 , HH_DV
 , COUNT(DISTINCT CUST_NO) AS CUST_CNT
 , '1' AS JOIN_KEY
FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
GROUP BY IDFY_SITE_NM, HH_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP' AS
SELECT
  A.IDFY_SITE_NM
 , A.HH_DV
 , A.CUST_CNT
 , B.MBL_CUST_CNT
-- , A.CUST_CNT/B.MBL_CUST_CNT AS MBL_PSS_RTO
 , CASE WHEN A.CUST_CNT/B.MBL_CUST_CNT >= 0 AND A.CUST_CNT/B.MBL_CUST_CNT <= 1 THEN A.CUST_CNT/B.MBL_CUST_CNT WHEN IS_NAN(A.CUST_CNT/B.MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_04_TEMP AS A
LEFT JOIN ( SELECT
     COUNT(DISTINCT CUST_NO) AS MBL_CUST_CNT
    , '1' AS JOIN_KEY
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_00_TEMP ) AS B
ON A.JOIN_KEY = B.JOIN_KEY
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_소셜미디어 이용_구매고객_1주
 일시 : 2018. 07. 27
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 

****************************************************************************************************************************/



/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP ;


/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.HH_DV
 , A.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM ( SELECT
    IMSI_NO
   , HH
   , IDFY_SITE_NM
   , VIEW_CNT
   , SUM_PSS_TM
   , CASE WHEN HH = '01' OR HH = '02' THEN '01_01시~03시'
     WHEN HH = '03' OR HH = '04' THEN '02_03시~05시'
     WHEN HH = '05' OR HH = '06' THEN '03_05시~07시'
     WHEN HH = '07' OR HH = '08' THEN '04_07시~09시'
     WHEN HH = '09' OR HH = '10' THEN '05_09시~11시'
     WHEN HH = '11' OR HH = '12' THEN '06_11시~13시'
     WHEN HH = '13' OR HH = '14' THEN '07_13시~15시'
     WHEN HH = '15' OR HH = '16' THEN '08_15시~17시'
     WHEN HH = '17' OR HH = '18' THEN '09_17시~19시'
     WHEN HH = '19' OR HH = '20' THEN '10_19시~21시'
     WHEN HH = '21' OR HH = '22' THEN '11_21시~23시'
     WHEN HH = '23' OR HH = '00' THEN '12_23시~01시'
     END AS HH_DV
  FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
GROUP BY B.CUST_NO, A.HH_DV, A.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP ;


/* 업종별 SNS 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , RANK () OVER(PARTITION BY STORE_ID, IDFY_SITE_NM ORDER BY VST_CUST_CNT DESC, SUM_VST_CNT DESC, SUM_PSS_TM DESC, IDFY_SITE_NM DESC) AS SITE_HH_DV_RANK -- 사이트내 시간대 방문순위
FROM ( SELECT
    A.STORE_ID
   , B.IDFY_SITE_NM
   , B.HH_DV
   , COUNT(DISTINCT B.CUST_NO) AS VST_CUST_CNT
   , SUM(B.VIEW_CNT) AS SUM_VST_CNT
   , SUM(B.SUM_PSS_TM) AS SUM_PSS_TM
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  GROUP BY A.STORE_ID, B.IDFY_SITE_NM, B.HH_DV ) TMP
WHERE HH_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP ;

/* 전체 SNS 중 해당 SNS의 점유비율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , B.CUST_CNT AS STORE_CUST_CNT
-- , A.VST_CUST_CNT/B.CUST_CNT AS PSS_RTO  -- 해당상점의 SNS 사이트의 시간대별 접속객수 / 해당상점의 고객SEG 총 객수
 , CASE WHEN A.VST_CUST_CNT/B.CUST_CNT >= 0 AND A.VST_CUST_CNT/B.CUST_CNT <= 1 THEN A.VST_CUST_CNT/B.CUST_CNT WHEN IS_NAN(A.VST_CUST_CNT/B.CUST_CNT) = 1 THEN NULL ELSE NULL END AS PSS_RTO
-- , RANK() OVER(PARTITION BY A.STORE_ID ORDER BY A.VST_CUST_CNT DESC, A.SUM_VST_CNT DESC, A.SUM_PSS_TM DESC, A.IDFY_SITE_NM) AS SITE_RANK -- 상점내 사이트 방문순위
FROM BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_03_TEMP AS A
LEFT JOIN ( SELECT
     STORE_ID
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
   GROUP BY STORE_ID ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP ;

/* U+모바일전체고객의 SNS사이트, 시간대별 점유율 LEFT JOIN */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , C.VST_CUST_CNT AS ALL_TM_VST_CUST_CNT
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , A.STORE_CUST_CNT
 , A.PSS_RTO
-- , A.SITE_RANK
 , B.CUST_CNT AS MBL_VST_CUST_CNT
 , D.CUST_CNT AS ALL_TM_MBL_VST_CUST_CNT
 , B.MBL_CUST_CNT
 , B.MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_04_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP AS B
ON A.IDFY_SITE_NM = B.IDFY_SITE_NM AND A.HH_DV = B.HH_DV
LEFT JOIN ( SELECT
     A1.STORE_ID
    , B1.IDFY_SITE_NM
    , COUNT(DISTINCT B1.CUST_NO) AS VST_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP AS A1
   LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_02_TEMP AS B1
   ON A1.CUST_NO = B1.CUST_NO
   GROUP BY A1.STORE_ID, B1.IDFY_SITE_NM ) AS C
ON A.STORE_ID = C.STORE_ID AND A.IDFY_SITE_NM = C.IDFY_SITE_NM
LEFT JOIN ( SELECT
     IDFY_SITE_NM
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
   GROUP BY IDFY_SITE_NM ) AS D
ON A.IDFY_SITE_NM = D.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_BUY_1W_06_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , ALL_TM_VST_CUST_CNT
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , SITE_HH_DV_RANK
 , STORE_CUST_CNT
 , PSS_RTO
-- , SITE_RANK
 , MBL_VST_CUST_CNT
 , ALL_TM_MBL_VST_CUST_CNT
 , MBL_CUST_CNT
 , MBL_PSS_RTO
 , ALL_TM_MBL_PSS_RTO
 , ALL_TM_PSS_RTO
-- , PSS_RTO_DIFF
-- , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFF DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS PSS_RTO_DIFF_RANK
 , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY ALL_TM_PSS_RTO DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS SNS_RANK
FROM ( SELECT
    STORE_ID
   , IDFY_SITE_NM
   , ALL_TM_VST_CUST_CNT
   , HH_DV
   , VST_CUST_CNT
   , SUM_VST_CNT
   , SUM_PSS_TM
   , SITE_HH_DV_RANK
   , STORE_CUST_CNT
   , PSS_RTO
--   , SITE_RANK
   , MBL_VST_CUST_CNT
   , ALL_TM_MBL_VST_CUST_CNT
   , MBL_CUST_CNT
   , MBL_PSS_RTO
--   , ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT AS ALL_TM_MBL_PSS_RTO
   , CASE WHEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT >= 0 AND ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT <= 1 THEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT WHEN IS_NAN(ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_MBL_PSS_RTO
--   , ALL_TM_VST_CUST_CNT/STORE_CUST_CNT AS ALL_TM_PSS_RTO
   , CASE WHEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT >= 0 AND ALL_TM_VST_CUST_CNT/STORE_CUST_CNT <= 1 THEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT WHEN IS_NAN(ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_PSS_RTO
--   , (ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) - (ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) AS PSS_RTO_DIFF
  FROM BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_05_TEMP ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_BUY_1W_06_TEMP ;



/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_소셜미디어 이용_방문가망고객_1주
 일시 : 2018. 07. 19
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 가망고객 */



/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP ;


/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.HH_DV
 , A.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM ( SELECT
    IMSI_NO
   , HH
   , IDFY_SITE_NM
   , VIEW_CNT
   , SUM_PSS_TM
   , CASE WHEN HH = '01' OR HH = '02' THEN '01_01시~03시'
     WHEN HH = '03' OR HH = '04' THEN '02_03시~05시'
     WHEN HH = '05' OR HH = '06' THEN '03_05시~07시'
     WHEN HH = '07' OR HH = '08' THEN '04_07시~09시'
     WHEN HH = '09' OR HH = '10' THEN '05_09시~11시'
     WHEN HH = '11' OR HH = '12' THEN '06_11시~13시'
     WHEN HH = '13' OR HH = '14' THEN '07_13시~15시'
     WHEN HH = '15' OR HH = '16' THEN '08_15시~17시'
     WHEN HH = '17' OR HH = '18' THEN '09_17시~19시'
     WHEN HH = '19' OR HH = '20' THEN '10_19시~21시'
     WHEN HH = '21' OR HH = '22' THEN '11_21시~23시'
     WHEN HH = '23' OR HH = '00' THEN '12_23시~01시'
     END AS HH_DV
  FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
GROUP BY B.CUST_NO, A.HH_DV, A.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP ;


/* 업종별 SNS 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , RANK () OVER(PARTITION BY STORE_ID, IDFY_SITE_NM ORDER BY VST_CUST_CNT DESC, SUM_VST_CNT DESC, SUM_PSS_TM DESC, IDFY_SITE_NM) AS SITE_HH_DV_RANK -- 사이트내 시간대 방문순위
FROM ( SELECT
    A.STORE_ID
   , B.IDFY_SITE_NM
   , B.HH_DV
   , COUNT(DISTINCT B.CUST_NO) AS VST_CUST_CNT
   , SUM(B.VIEW_CNT) AS SUM_VST_CNT
   , SUM(B.SUM_PSS_TM) AS SUM_PSS_TM
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  GROUP BY A.STORE_ID, B.IDFY_SITE_NM, B.HH_DV ) TMP
WHERE HH_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP ;


/* 전체 SNS 중 해당 SNS의 점유비율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , B.CUST_CNT AS STORE_CUST_CNT
-- , A.VST_CUST_CNT/B.CUST_CNT AS PSS_RTO  -- 해당상점의 SNS 사이트의 시간대별 접속객수 / 해당상점의 고객SEG 총 객수
 , CASE WHEN A.VST_CUST_CNT/B.CUST_CNT >= 0 AND A.VST_CUST_CNT/B.CUST_CNT <= 1 THEN A.VST_CUST_CNT/B.CUST_CNT WHEN IS_NAN(A.VST_CUST_CNT/B.CUST_CNT) = 1 THEN NULL ELSE NULL END AS PSS_RTO
-- , RANK() OVER(PARTITION BY A.STORE_ID ORDER BY A.VST_CUST_CNT DESC, A.SUM_VST_CNT DESC, A.SUM_PSS_TM DESC, A.IDFY_SITE_NM) AS SITE_RANK -- 상점내 사이트 방문순위
FROM BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_03_TEMP AS A
LEFT JOIN ( SELECT
     STORE_ID
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
   GROUP BY STORE_ID ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP ;


/* U+모바일전체고객의 SNS사이트, 시간대별 점유율 LEFT JOIN */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , C.VST_CUST_CNT AS ALL_TM_VST_CUST_CNT
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , A.STORE_CUST_CNT
 , A.PSS_RTO
-- , A.SITE_RANK
 , B.CUST_CNT AS MBL_VST_CUST_CNT
 , D.CUST_CNT AS ALL_TM_MBL_VST_CUST_CNT
 , B.MBL_CUST_CNT
 , B.MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_04_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP AS B
ON A.IDFY_SITE_NM = B.IDFY_SITE_NM AND A.HH_DV = B.HH_DV
LEFT JOIN ( SELECT
     A1.STORE_ID
    , B1.IDFY_SITE_NM
    , COUNT(DISTINCT B1.CUST_NO) AS VST_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP AS A1
   LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_02_TEMP AS B1
   ON A1.CUST_NO = B1.CUST_NO
   GROUP BY A1.STORE_ID, B1.IDFY_SITE_NM ) AS C
ON A.STORE_ID = C.STORE_ID AND A.IDFY_SITE_NM = C.IDFY_SITE_NM
LEFT JOIN ( SELECT
     IDFY_SITE_NM
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
   GROUP BY IDFY_SITE_NM ) AS D
ON A.IDFY_SITE_NM = D.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_HPOS_1W_06_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , ALL_TM_VST_CUST_CNT
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , SITE_HH_DV_RANK
 , STORE_CUST_CNT
 , PSS_RTO
-- , SITE_RANK
 , MBL_VST_CUST_CNT
 , ALL_TM_MBL_VST_CUST_CNT
 , MBL_CUST_CNT
 , MBL_PSS_RTO
 , ALL_TM_MBL_PSS_RTO
 , ALL_TM_PSS_RTO
-- , PSS_RTO_DIFF
-- , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFF DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS PSS_RTO_DIFF_RANK
 , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY ALL_TM_PSS_RTO DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS SNS_RANK
FROM ( SELECT
    STORE_ID
   , IDFY_SITE_NM
   , ALL_TM_VST_CUST_CNT
   , HH_DV
   , VST_CUST_CNT
   , SUM_VST_CNT
   , SUM_PSS_TM
   , SITE_HH_DV_RANK
   , STORE_CUST_CNT
   , PSS_RTO
--   , SITE_RANK
   , MBL_VST_CUST_CNT
   , ALL_TM_MBL_VST_CUST_CNT
   , MBL_CUST_CNT
   , MBL_PSS_RTO
--   , ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT AS ALL_TM_MBL_PSS_RTO
   , CASE WHEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT >= 0 AND ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT <= 1 THEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT WHEN IS_NAN(ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_MBL_PSS_RTO
--   , ALL_TM_VST_CUST_CNT/STORE_CUST_CNT AS ALL_TM_PSS_RTO
   , CASE WHEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT >= 0 AND ALL_TM_VST_CUST_CNT/STORE_CUST_CNT <= 1 THEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT WHEN IS_NAN(ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_PSS_RTO
--   , (ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) - (ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) AS PSS_RTO_DIFF
  FROM BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_05_TEMP ) TMP
;


COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_HPOS_1W_06_TEMP ;


/* 방문고객 */



/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP ;


/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.HH_DV
 , A.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM ( SELECT
    IMSI_NO
   , HH
   , IDFY_SITE_NM
   , VIEW_CNT
   , SUM_PSS_TM
   , CASE WHEN HH = '01' OR HH = '02' THEN '01_01시~03시'
     WHEN HH = '03' OR HH = '04' THEN '02_03시~05시'
     WHEN HH = '05' OR HH = '06' THEN '03_05시~07시'
     WHEN HH = '07' OR HH = '08' THEN '04_07시~09시'
     WHEN HH = '09' OR HH = '10' THEN '05_09시~11시'
     WHEN HH = '11' OR HH = '12' THEN '06_11시~13시'
     WHEN HH = '13' OR HH = '14' THEN '07_13시~15시'
     WHEN HH = '15' OR HH = '16' THEN '08_15시~17시'
     WHEN HH = '17' OR HH = '18' THEN '09_17시~19시'
     WHEN HH = '19' OR HH = '20' THEN '10_19시~21시'
     WHEN HH = '21' OR HH = '22' THEN '11_21시~23시'
     WHEN HH = '23' OR HH = '00' THEN '12_23시~01시'
     END AS HH_DV
  FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
GROUP BY B.CUST_NO, A.HH_DV, A.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP ;

/* 업종별 SNS 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , RANK () OVER(PARTITION BY STORE_ID, IDFY_SITE_NM ORDER BY VST_CUST_CNT DESC, SUM_VST_CNT DESC, SUM_PSS_TM DESC, IDFY_SITE_NM DESC) AS SITE_HH_DV_RANK -- 사이트내 시간대 방문순위
FROM ( SELECT
    A.STORE_ID
   , B.IDFY_SITE_NM
   , B.HH_DV
   , COUNT(DISTINCT B.CUST_NO) AS VST_CUST_CNT
   , SUM(B.VIEW_CNT) AS SUM_VST_CNT
   , SUM(B.SUM_PSS_TM) AS SUM_PSS_TM
  FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  GROUP BY A.STORE_ID, B.IDFY_SITE_NM, B.HH_DV ) TMP
WHERE HH_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP ;

/* 전체 SNS 중 해당 SNS의 점유비율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , B.CUST_CNT AS STORE_CUST_CNT
-- , A.VST_CUST_CNT/B.CUST_CNT AS PSS_RTO  -- 해당상점의 SNS 사이트의 시간대별 접속객수 / 해당상점의 고객SEG 총 객수
 , CASE WHEN A.VST_CUST_CNT/B.CUST_CNT >= 0 AND A.VST_CUST_CNT/B.CUST_CNT <= 1 THEN A.VST_CUST_CNT/B.CUST_CNT WHEN IS_NAN(A.VST_CUST_CNT/B.CUST_CNT) = 1 THEN NULL ELSE NULL END AS PSS_RTO
-- , RANK() OVER(PARTITION BY A.STORE_ID ORDER BY A.VST_CUST_CNT DESC, A.SUM_VST_CNT DESC, A.SUM_PSS_TM DESC, A.IDFY_SITE_NM) AS SITE_RANK -- 상점내 사이트 방문순위
FROM BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_03_TEMP AS A
LEFT JOIN ( SELECT
     STORE_ID
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP
   GROUP BY STORE_ID ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP ;

/* U+모바일전체고객의 SNS사이트, 시간대별 점유율 LEFT JOIN */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP' AS
SELECT
  A.STORE_ID
 , A.IDFY_SITE_NM
 , C.VST_CUST_CNT AS ALL_TM_VST_CUST_CNT
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , A.STORE_CUST_CNT
 , A.PSS_RTO
-- , A.SITE_RANK
 , B.CUST_CNT AS MBL_VST_CUST_CNT
 , D.CUST_CNT AS ALL_TM_MBL_VST_CUST_CNT
 , B.MBL_CUST_CNT
 , B.MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_04_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP AS B
ON A.IDFY_SITE_NM = B.IDFY_SITE_NM AND A.HH_DV = B.HH_DV
LEFT JOIN ( SELECT
     A1.STORE_ID
    , B1.IDFY_SITE_NM
    , COUNT(DISTINCT B1.CUST_NO) AS VST_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_VST_1W_02_TEMP AS A1
   LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_02_TEMP AS B1
   ON A1.CUST_NO = B1.CUST_NO
   GROUP BY A1.STORE_ID, B1.IDFY_SITE_NM ) AS C
ON A.STORE_ID = C.STORE_ID AND A.IDFY_SITE_NM = C.IDFY_SITE_NM
LEFT JOIN ( SELECT
     IDFY_SITE_NM
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
   GROUP BY IDFY_SITE_NM ) AS D
ON A.IDFY_SITE_NM = D.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_VST_1W_06_TEMP' AS
SELECT
  STORE_ID
 , IDFY_SITE_NM
 , ALL_TM_VST_CUST_CNT
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , SITE_HH_DV_RANK
 , STORE_CUST_CNT
 , PSS_RTO
-- , SITE_RANK
 , MBL_VST_CUST_CNT
 , ALL_TM_MBL_VST_CUST_CNT
 , MBL_CUST_CNT
 , MBL_PSS_RTO
 , ALL_TM_MBL_PSS_RTO
 , ALL_TM_PSS_RTO
-- , PSS_RTO_DIFF
-- , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY PSS_RTO_DIFF DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS PSS_RTO_DIFF_RANK
 , DENSE_RANK() OVER(PARTITION BY STORE_ID ORDER BY ALL_TM_PSS_RTO DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS SNS_RANK
FROM ( SELECT
    STORE_ID
   , IDFY_SITE_NM
   , ALL_TM_VST_CUST_CNT
   , HH_DV
   , VST_CUST_CNT
   , SUM_VST_CNT
   , SUM_PSS_TM
   , SITE_HH_DV_RANK
   , STORE_CUST_CNT
   , PSS_RTO
--   , SITE_RANK
   , MBL_VST_CUST_CNT
   , ALL_TM_MBL_VST_CUST_CNT
   , MBL_CUST_CNT
   , MBL_PSS_RTO
--   , ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT AS ALL_TM_MBL_PSS_RTO
   , CASE WHEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT >= 0 AND ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT <= 1 THEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT WHEN IS_NAN(ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_MBL_PSS_RTO
--   , ALL_TM_VST_CUST_CNT/STORE_CUST_CNT AS ALL_TM_PSS_RTO
   , CASE WHEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT >= 0 AND ALL_TM_VST_CUST_CNT/STORE_CUST_CNT <= 1 THEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT WHEN IS_NAN(ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_PSS_RTO
--   , (ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) - (ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) AS PSS_RTO_DIFF
  FROM BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_05_TEMP ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_VST_1W_06_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_소셜미디어 이용_업종고객_1주
 일시 : 2018. 07. 13
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP ;


/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.HH_DV
 , A.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM ( SELECT
    IMSI_NO
   , HH
   , IDFY_SITE_NM
   , VIEW_CNT
   , SUM_PSS_TM
   , CASE WHEN HH = '01' OR HH = '02' THEN '01_01시~03시'
     WHEN HH = '03' OR HH = '04' THEN '02_03시~05시'
     WHEN HH = '05' OR HH = '06' THEN '03_05시~07시'
     WHEN HH = '07' OR HH = '08' THEN '04_07시~09시'
     WHEN HH = '09' OR HH = '10' THEN '05_09시~11시'
     WHEN HH = '11' OR HH = '12' THEN '06_11시~13시'
     WHEN HH = '13' OR HH = '14' THEN '07_13시~15시'
     WHEN HH = '15' OR HH = '16' THEN '08_15시~17시'
     WHEN HH = '17' OR HH = '18' THEN '09_17시~19시'
     WHEN HH = '19' OR HH = '20' THEN '10_19시~21시'
     WHEN HH = '21' OR HH = '22' THEN '11_21시~23시'
     WHEN HH = '23' OR HH = '00' THEN '12_23시~01시'
     END AS HH_DV
  FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
GROUP BY B.CUST_NO, A.HH_DV, A.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP ;

/* 업종별 SNS 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , IDFY_SITE_NM
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , RANK () OVER(PARTITION BY LRG_DIV, MID_DIV, IDFY_SITE_NM ORDER BY VST_CUST_CNT DESC, SUM_VST_CNT DESC, SUM_PSS_TM DESC, IDFY_SITE_NM) AS SITE_HH_DV_RANK -- 사이트내 시간대 방문순위
FROM ( SELECT
    A.LRG_DIV
   , A.MID_DIV
   , B.IDFY_SITE_NM
   , B.HH_DV
   , COUNT(DISTINCT B.CUST_NO) AS VST_CUST_CNT
   , SUM(B.VIEW_CNT) AS SUM_VST_CNT
   , SUM(B.SUM_PSS_TM) AS SUM_PSS_TM
  FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  GROUP BY A.LRG_DIV, A.MID_DIV, B.IDFY_SITE_NM, B.HH_DV ) TMP
WHERE HH_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP ;


/* 전체 SNS 중 해당 SNS의 점유비율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP' AS
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , A.IDFY_SITE_NM
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , B.CUST_CNT AS STORE_CUST_CNT
-- , A.VST_CUST_CNT/B.CUST_CNT AS PSS_RTO  -- 해당상점의 SNS 사이트의 시간대별 접속객수 / 해당상점의 고객SEG 총 객수
 , CASE WHEN A.VST_CUST_CNT/B.CUST_CNT >= 0 AND A.VST_CUST_CNT/B.CUST_CNT <= 1 THEN A.VST_CUST_CNT/B.CUST_CNT WHEN IS_NAN(A.VST_CUST_CNT/B.CUST_CNT) = 1 THEN NULL ELSE NULL END AS PSS_RTO
-- , RANK() OVER(PARTITION BY A.LRG_DIV, A.MID_DIV ORDER BY A.VST_CUST_CNT DESC, A.SUM_VST_CNT DESC, A.SUM_PSS_TM DESC, A.IDFY_SITE_NM) AS SITE_RANK -- 상점내 사이트 방문순위
FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_03_TEMP AS A
LEFT JOIN ( SELECT
     LRG_DIV
    , MID_DIV
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP
   GROUP BY LRG_DIV, MID_DIV ) AS B
ON A.LRG_DIV = B.LRG_DIV AND A.MID_DIV = B.MID_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP ;

/* U+모바일전체고객의 SNS사이트, 시간대별 점유율 LEFT JOIN */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP' AS
SELECT
  A.LRG_DIV
 , A.MID_DIV
 , A.IDFY_SITE_NM
 , C.VST_CUST_CNT AS ALL_TM_VST_CUST_CNT
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , A.STORE_CUST_CNT
 , A.PSS_RTO
-- , A.SITE_RANK
 , B.CUST_CNT AS MBL_VST_CUST_CNT
 , D.CUST_CNT AS ALL_TM_MBL_VST_CUST_CNT
 , B.MBL_CUST_CNT
 , B.MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_04_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP AS B
ON A.IDFY_SITE_NM = B.IDFY_SITE_NM AND A.HH_DV = B.HH_DV
LEFT JOIN ( SELECT
     A1.LRG_DIV
    , A1.MID_DIV
    , B1.IDFY_SITE_NM
    , COUNT(DISTINCT B1.CUST_NO) AS VST_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_INKND_1W_01_TEMP AS A1
   LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_02_TEMP AS B1
   ON A1.CUST_NO = B1.CUST_NO
   GROUP BY A1.LRG_DIV, A1.MID_DIV, B1.IDFY_SITE_NM ) AS C
ON A.LRG_DIV = C.LRG_DIV AND A.MID_DIV = C.MID_DIV AND A.IDFY_SITE_NM = C.IDFY_SITE_NM
LEFT JOIN ( SELECT
     IDFY_SITE_NM
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
   GROUP BY IDFY_SITE_NM ) AS D
ON A.IDFY_SITE_NM = D.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_1W_06_TEMP' AS
SELECT
  LRG_DIV
 , MID_DIV
 , IDFY_SITE_NM
 , ALL_TM_VST_CUST_CNT
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , SITE_HH_DV_RANK
 , STORE_CUST_CNT
 , PSS_RTO
-- , SITE_RANK
 , MBL_VST_CUST_CNT
 , ALL_TM_MBL_VST_CUST_CNT
 , MBL_CUST_CNT
 , MBL_PSS_RTO
 , ALL_TM_MBL_PSS_RTO
 , ALL_TM_PSS_RTO
-- , PSS_RTO_DIFF
-- , DENSE_RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY PSS_RTO_DIFF DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS PSS_RTO_DIFF_RANK
 , DENSE_RANK() OVER(PARTITION BY LRG_DIV, MID_DIV ORDER BY ALL_TM_PSS_RTO DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS SNS_RANK
FROM ( SELECT
    LRG_DIV
   , MID_DIV
   , IDFY_SITE_NM
   , ALL_TM_VST_CUST_CNT
   , HH_DV
   , VST_CUST_CNT
   , SUM_VST_CNT
   , SUM_PSS_TM
   , SITE_HH_DV_RANK
   , STORE_CUST_CNT
   , PSS_RTO
--   , SITE_RANK
   , MBL_VST_CUST_CNT
   , ALL_TM_MBL_VST_CUST_CNT
   , MBL_CUST_CNT
   , MBL_PSS_RTO
--   , ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT AS ALL_TM_MBL_PSS_RTO
   , CASE WHEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT >= 0 AND ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT <= 1 THEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT WHEN IS_NAN(ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_MBL_PSS_RTO
--   , ALL_TM_VST_CUST_CNT/STORE_CUST_CNT AS ALL_TM_PSS_RTO
   , CASE WHEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT >= 0 AND ALL_TM_VST_CUST_CNT/STORE_CUST_CNT <= 1 THEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT WHEN IS_NAN(ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_PSS_RTO
--   , (ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) - (ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) AS PSS_RTO_DIFF
  FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_05_TEMP ) TMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_1W_06_TEMP ;



/********************************************************** 대분류 & 중분류전체 ***********************************************************/




/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP ;


/* 시간 묶어서 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP' AS
SELECT
  B.CUST_NO
 , A.HH_DV
 , A.IDFY_SITE_NM
 , SUM(A.VIEW_CNT) AS VIEW_CNT
 , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM
FROM ( SELECT
    IMSI_NO
   , HH
   , IDFY_SITE_NM
   , VIEW_CNT
   , SUM_PSS_TM
   , CASE WHEN HH = '01' OR HH = '02' THEN '01_01시~03시'
     WHEN HH = '03' OR HH = '04' THEN '02_03시~05시'
     WHEN HH = '05' OR HH = '06' THEN '03_05시~07시'
     WHEN HH = '07' OR HH = '08' THEN '04_07시~09시'
     WHEN HH = '09' OR HH = '10' THEN '05_09시~11시'
     WHEN HH = '11' OR HH = '12' THEN '06_11시~13시'
     WHEN HH = '13' OR HH = '14' THEN '07_13시~15시'
     WHEN HH = '15' OR HH = '16' THEN '08_15시~17시'
     WHEN HH = '17' OR HH = '18' THEN '09_17시~19시'
     WHEN HH = '19' OR HH = '20' THEN '10_19시~21시'
     WHEN HH = '21' OR HH = '22' THEN '11_21시~23시'
     WHEN HH = '23' OR HH = '00' THEN '12_23시~01시'
     END AS HH_DV
  FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_01_TEMP ) AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_00_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
GROUP BY B.CUST_NO, A.HH_DV, A.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP ;

/* 업종별 SNS 순위 매기기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , IDFY_SITE_NM
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , RANK () OVER(PARTITION BY LRG_DIV, IDFY_SITE_NM ORDER BY VST_CUST_CNT DESC, SUM_VST_CNT DESC, SUM_PSS_TM DESC, IDFY_SITE_NM) AS SITE_HH_DV_RANK -- 사이트내 시간대 방문순위
FROM ( SELECT
    A.LRG_DIV
--   , A.MID_DIV
   , B.IDFY_SITE_NM
   , B.HH_DV
   , COUNT(DISTINCT B.CUST_NO) AS VST_CUST_CNT
   , SUM(B.VIEW_CNT) AS SUM_VST_CNT
   , SUM(B.SUM_PSS_TM) AS SUM_PSS_TM
  FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP AS A
  LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP AS B
  ON A.CUST_NO = B.CUST_NO
  GROUP BY A.LRG_DIV, B.IDFY_SITE_NM, B.HH_DV ) TMP
WHERE HH_DV IS NOT NULL
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP ;

/* 전체 SNS 중 해당 SNS의 점유비율 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP' AS
SELECT
  A.LRG_DIV
-- , A.MID_DIV
 , A.IDFY_SITE_NM
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , B.CUST_CNT AS STORE_CUST_CNT
-- , A.VST_CUST_CNT/B.CUST_CNT AS PSS_RTO  -- 해당상점의 SNS 사이트의 시간대별 접속객수 / 해당상점의 고객SEG 총 객수
 , CASE WHEN A.VST_CUST_CNT/B.CUST_CNT >= 0 AND A.VST_CUST_CNT/B.CUST_CNT <= 1 THEN A.VST_CUST_CNT/B.CUST_CNT WHEN IS_NAN(A.VST_CUST_CNT/B.CUST_CNT) = 1 THEN NULL ELSE NULL END AS PSS_RTO
-- , RANK() OVER(PARTITION BY A.LRG_DIV ORDER BY A.VST_CUST_CNT DESC, A.SUM_VST_CNT DESC, A.SUM_PSS_TM DESC, A.IDFY_SITE_NM) AS SITE_RANK -- 상점내 사이트 방문순위
FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_03_TEMP AS A
LEFT JOIN ( SELECT
     LRG_DIV
--    , MID_DIV
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP
   GROUP BY LRG_DIV ) AS B
ON A.LRG_DIV = B.LRG_DIV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP ;

/* U+모바일전체고객의 SNS사이트, 시간대별 점유율 LEFT JOIN */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP' AS
SELECT
  A.LRG_DIV
-- , A.MID_DIV
 , A.IDFY_SITE_NM
 , C.VST_CUST_CNT AS ALL_TM_VST_CUST_CNT
 , A.HH_DV
 , A.VST_CUST_CNT
 , A.SUM_VST_CNT
 , A.SUM_PSS_TM
 , A.SITE_HH_DV_RANK
 , A.STORE_CUST_CNT
 , A.PSS_RTO
-- , A.SITE_RANK
 , B.CUST_CNT AS MBL_VST_CUST_CNT
 , D.CUST_CNT AS ALL_TM_MBL_VST_CUST_CNT
 , B.MBL_CUST_CNT
 , B.MBL_PSS_RTO
FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_04_TEMP AS A
LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_05_TEMP AS B
ON A.IDFY_SITE_NM = B.IDFY_SITE_NM AND A.HH_DV = B.HH_DV
LEFT JOIN ( SELECT
     A1.LRG_DIV
--    , A1.MID_DIV
    , B1.IDFY_SITE_NM
    , COUNT(DISTINCT B1.CUST_NO) AS VST_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_INKND_LRG_1W_01_TEMP AS A1
   LEFT JOIN BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_02_TEMP AS B1
   ON A1.CUST_NO = B1.CUST_NO
   GROUP BY A1.LRG_DIV, B1.IDFY_SITE_NM ) AS C
ON A.LRG_DIV = C.LRG_DIV AND A.IDFY_SITE_NM = C.IDFY_SITE_NM
LEFT JOIN ( SELECT
     IDFY_SITE_NM
    , COUNT(DISTINCT CUST_NO) AS CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_SNS_MBL_1W_03_TEMP
   GROUP BY IDFY_SITE_NM ) AS D
ON A.IDFY_SITE_NM = D.IDFY_SITE_NM
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_SNS_INKND_LRG_1W_06_TEMP' AS
SELECT
  LRG_DIV
-- , MID_DIV
 , IDFY_SITE_NM
 , ALL_TM_VST_CUST_CNT
 , HH_DV
 , VST_CUST_CNT
 , SUM_VST_CNT
 , SUM_PSS_TM
 , SITE_HH_DV_RANK
 , STORE_CUST_CNT
 , PSS_RTO
-- , SITE_RANK
 , MBL_VST_CUST_CNT
 , ALL_TM_MBL_VST_CUST_CNT
 , MBL_CUST_CNT
 , MBL_PSS_RTO
 , ALL_TM_MBL_PSS_RTO
 , ALL_TM_PSS_RTO
-- , PSS_RTO_DIFF
-- , DENSE_RANK() OVER(PARTITION BY LRG_DIV ORDER BY PSS_RTO_DIFF DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS PSS_RTO_DIFF_RANK
 , DENSE_RANK() OVER(PARTITION BY LRG_DIV ORDER BY ALL_TM_PSS_RTO DESC, ALL_TM_VST_CUST_CNT DESC, ALL_TM_MBL_VST_CUST_CNT DESC ) AS SNS_RANK
FROM ( SELECT
    LRG_DIV
  -- , MID_DIV
   , IDFY_SITE_NM
   , ALL_TM_VST_CUST_CNT
   , HH_DV
   , VST_CUST_CNT
   , SUM_VST_CNT
   , SUM_PSS_TM
   , SITE_HH_DV_RANK
   , STORE_CUST_CNT
   , PSS_RTO
--   , SITE_RANK
   , MBL_VST_CUST_CNT
   , ALL_TM_MBL_VST_CUST_CNT
   , MBL_CUST_CNT
   , MBL_PSS_RTO
--   , ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT AS ALL_TM_MBL_PSS_RTO
   , CASE WHEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT >= 0 AND ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT <= 1 THEN ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT WHEN IS_NAN(ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_MBL_PSS_RTO
--   , ALL_TM_VST_CUST_CNT/STORE_CUST_CNT AS ALL_TM_PSS_RTO
   , CASE WHEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT >= 0 AND ALL_TM_VST_CUST_CNT/STORE_CUST_CNT <= 1 THEN ALL_TM_VST_CUST_CNT/STORE_CUST_CNT WHEN IS_NAN(ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) = 1 THEN NULL ELSE NULL END AS ALL_TM_PSS_RTO
--   , (ALL_TM_VST_CUST_CNT/STORE_CUST_CNT) - (ALL_TM_MBL_VST_CUST_CNT/MBL_CUST_CNT) AS PSS_RTO_DIFF
  FROM BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_05_TEMP ) TMP
;


COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_SNS_INKND_LRG_1W_06_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_웹사이트 이용_구매고객_1주
 일시 : 2018. 07. 13
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/



--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP' AS
SELECT '01_1회' AS VST_CNT_DV, '01_1분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '02_2회' AS VST_CNT_DV, '02_1분이상 2분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '03_3회' AS VST_CNT_DV, '03_2분이상 4분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '04_4회' AS VST_CNT_DV, '04_4분이상 6분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '05_5회' AS VST_CNT_DV, '05_6분이상 10분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '06_6회이상' AS VST_CNT_DV, '06_10분이상' AS AVG_PSS_TM_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP;

/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP ;

/* 해당 웹사이트 이용 집계 추출 */

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP' AS
SELECT DISTINCT
  STORE_ID
 , HOST_SITE_NM
FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
WHERE 1=1
 AND TBL_DIVS_CD = '1'
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (   ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP' AS
SELECT
    C.STORE_ID
   , A.IMSI_NO   -- 고객당 방문횟수
   , COUNT(A.IMSI_NO) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.PSS_TM) AS SUM_PSS_TM
FROM (
   SELECT
       IMSI_NO
      , HOST_SITE_NM
      , PSS_TM
   FROM BDPVIEW.L1DAT_LTE_DATA_USE_SSCRB_TM_SUM  -- L1_LTE데이터사용가입자시간집계
   WHERE 1=1
    AND PSS_TM >= 10                -- 60초 초과
--    AND NOT(HOST_SITE_NM IS NULL OR HOST_SITE_NM = '.')
    AND (  
--      ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-1)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-2)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-3)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-4)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-5)) )
--      OR ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-6)) )
       ( P_BASIS_YYYY = YEAR(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_MM = MONTH(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) AND P_BASIS_DD = DAY(DAYS_ADD(CAST('${VAR:C_YYYYMMDD} ${VAR:C_HHMISS}' AS TIMESTAMP),-7)) )
      )
                ) AS A
--INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
--ON A.IMSI_NO = B.PRD_NO
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_00_TEMP AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY C.STORE_ID, A.IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP' AS
SELECT
  STORE_ID
 , IMSI_NO   -- 고객당 방문횟수
 , SUM(VIEW_CNT) AS VIEW_CNT
 , SUM(SUM_PSS_TM) AS SUM_PSS_TM
FROM (
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_01_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_02_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_03_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_04_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_05_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_06_TEMP UNION ALL
SELECT * FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_07_TEMP
) TMP
GROUP BY STORE_ID, IMSI_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP ;

--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP' AS
SELECT
    A.STORE_ID
   , B.CUST_NO
   , SUM(A.VIEW_CNT) AS VIEW_CNT   -- 고객당 방문횟수
   , SUM(A.SUM_PSS_TM) AS SUM_PSS_TM    -- 고객당 총체류시간
   , SUM(A.SUM_PSS_TM)/SUM(A.VIEW_CNT) AS AVG_PSS_TM  -- 고객당 1회 방문 기준 평균체류시간
FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_08_TEMP AS A
INNER JOIN BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_01_TEMP AS B    
ON A.IMSI_NO = B.PRD_NO
--INNER JOIN ( SELECT
--      STORE_ID
--     , HOST_SITE_NM
--      FROM BDPL200.L2CET_COPB_HOST_SITE_IDFY_INFO
--    WHERE 1=1
--     AND TBL_DIVS_CD = '1' ) AS C  -- 상점별 업종 분류 및 사이트 테이블 - L2COT_DIV_SITE_01_03 에서 store_id 매핑하여 생성함
--ON A.HOST_SITE_NM = C.HOST_SITE_NM
GROUP BY A.STORE_ID, B.CUST_NO
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP ;


/* 해당 웹사이트별 주 방문 횟수 및 평균 체류시간 집계 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP' AS
SELECT
  STORE_ID
 , CUST_NO
 , VIEW_CNT
 , SUM_PSS_TM
 , AVG_PSS_TM
 , CASE WHEN VIEW_CNT <= 1 THEN '01_1회'
   WHEN VIEW_CNT <= 2 THEN '02_2회'
   WHEN VIEW_CNT <= 3 THEN '03_3회'
   WHEN VIEW_CNT <= 4 THEN '04_4회'
   WHEN VIEW_CNT <= 5 THEN '05_5회'
   ELSE '06_6회이상'
   END AS VST_CNT_DV
 , CASE WHEN AVG_PSS_TM < 60 THEN '01_1분미만'
   WHEN AVG_PSS_TM < 120 THEN '02_1분이상 2분미만'
   WHEN AVG_PSS_TM < 240 THEN '03_2분이상 4분미만'
   WHEN AVG_PSS_TM < 360 THEN '04_4분이상 6분미만'
   WHEN AVG_PSS_TM < 600 THEN '05_6분이상 10분미만'
   ELSE '06_10분이상'
   END AS AVG_PSS_TM_DV
FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP ;


--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP' AS
SELECT
  A.STORE_ID
 , A.VST_CNT_DV
 , COALESCE(B.VST_CNT_DV_CUST_CNT, 0) AS VST_CNT_DV_CUST_CNT
 , A.AVG_PSS_TM_DV
 , COALESCE(C.AVG_PSS_TM_DV_CUST_CNT, 0) AS AVG_PSS_TM_DV_CUST_CNT
FROM ( SELECT
    A1.STORE_ID
   , B1.VST_CNT_DV
   , B1.AVG_PSS_TM_DV
  FROM ( SELECT DISTINCT
      STORE_ID
    FROM BDPL200.L2COT_LTNT_CUST_BUY_1W_01_TEMP ) AS A1
  CROSS JOIN ( SELECT
        VST_CNT_DV
       , AVG_PSS_TM_DV
      FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_00_TEMP ) AS B1 ) AS A
LEFT JOIN ( SELECT
     STORE_ID
    , VST_CNT_DV
    , COUNT(DISTINCT CUST_NO) AS VST_CNT_DV_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP
   GROUP BY STORE_ID, VST_CNT_DV ) AS B
ON A.STORE_ID = B.STORE_ID AND A.VST_CNT_DV = B.VST_CNT_DV
LEFT JOIN ( SELECT
     STORE_ID
    , AVG_PSS_TM_DV
    , COUNT(DISTINCT CUST_NO) AS AVG_PSS_TM_DV_CUST_CNT
   FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_03_TEMP
   GROUP BY STORE_ID, AVG_PSS_TM_DV ) AS C
ON A.STORE_ID = C.STORE_ID AND A.AVG_PSS_TM_DV = C.AVG_PSS_TM_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP ;

/* 방문횟수, 체류시간 점유율 및 순위 생성 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_05_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_05_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_05_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_BUY_1W_05_TEMP' AS
SELECT
  A.STORE_ID
 , B.STORE_AVG_VST_CNT
 , B.STORE_AVG_PSS_TM
 , A.VST_CNT_DV  -- 방문횟수 구분
 , A.VST_CNT_DV_CUST_CNT  -- 방문횟수 구분별 고객수
-- , A.VST_CNT_DV_CUST_CNT/SUM(A.VST_CNT_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) AS VST_CNT_DV_PSS_RTO  -- 방문횟수 구분별 점유비율
 , CASE WHEN A.VST_CNT_DV_CUST_CNT/SUM(A.VST_CNT_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) >= 0 AND A.VST_CNT_DV_CUST_CNT/SUM(A.VST_CNT_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) <= 1 THEN A.VST_CNT_DV_CUST_CNT/SUM(A.VST_CNT_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) WHEN IS_NAN(A.VST_CNT_DV_CUST_CNT/SUM(A.VST_CNT_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID)) = 1 THEN NULL ELSE NULL END AS VST_CNT_DV_PSS_RTO
 , RANK() OVER(PARTITION BY A.STORE_ID ORDER BY A.VST_CNT_DV_CUST_CNT DESC, A.AVG_PSS_TM_DV_CUST_CNT DESC) AS VST_CNT_DV_RANK  -- 방문횟수 구분별 RANK
 , A.AVG_PSS_TM_DV  -- 평균체류시간별
 , A.AVG_PSS_TM_DV_CUST_CNT
-- , A.AVG_PSS_TM_DV_CUST_CNT/SUM(A.AVG_PSS_TM_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) AS AVG_PSS_TM_DV_PSS_RTO
 , CASE WHEN A.AVG_PSS_TM_DV_CUST_CNT/SUM(A.AVG_PSS_TM_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) >= 0 AND A.AVG_PSS_TM_DV_CUST_CNT/SUM(A.AVG_PSS_TM_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) <= 1 THEN A.AVG_PSS_TM_DV_CUST_CNT/SUM(A.AVG_PSS_TM_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID) WHEN IS_NAN(A.AVG_PSS_TM_DV_CUST_CNT/SUM(A.AVG_PSS_TM_DV_CUST_CNT) OVER(PARTITION BY A.STORE_ID)) = 1 THEN NULL ELSE NULL END AS AVG_PSS_TM_DV_PSS_RTO
 , RANK() OVER(PARTITION BY A.STORE_ID ORDER BY A.AVG_PSS_TM_DV_CUST_CNT DESC, A.VST_CNT_DV_CUST_CNT DESC) AS AVG_PSS_TM_DV_RANK
FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_04_TEMP AS A
LEFT JOIN ( SELECT
     STORE_ID
    , AVG(VIEW_CNT) AS STORE_AVG_VST_CNT
    , SUM(SUM_PSS_TM)/SUM(VIEW_CNT) AS STORE_AVG_PSS_TM
   FROM BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_02_TEMP
   GROUP BY STORE_ID ) AS B
ON A.STORE_ID = B.STORE_ID
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_BUY_1W_05_TEMP ;


/****************************************************************************************************************************
 제목 : 잠재 고객 프로파일_웹사이트 이용_방문가망고객_1
 일시 : 2018. 07. 19
 버전 : v01
 

 업종별 URL 테이블 : BDPL200.L2COT_DIV_SITE_01_03
 
    
****************************************************************************************************************************/


/* 가망고객 */




--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_00_TEMP;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_00_TEMP;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_00_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_HPOS_1W_00_TEMP' AS
SELECT '01_1회' AS VST_CNT_DV, '01_1분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '02_2회' AS VST_CNT_DV, '02_1분이상 2분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '03_3회' AS VST_CNT_DV, '03_2분이상 4분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '04_4회' AS VST_CNT_DV, '04_4분이상 6분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '05_5회' AS VST_CNT_DV, '05_6분이상 10분미만' AS AVG_PSS_TM_DV UNION ALL
SELECT '06_6회이상' AS VST_CNT_DV, '06_10분이상' AS AVG_PSS_TM_DV
;

COMPUTE INCREMENTAL STATS BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_00_TEMP;

/* 고객 전화번호 찾기 */
--DROP TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_01_TEMP ;
--TRUNCATE TABLE IF EXISTS BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_01_TEMP ;
INSERT OVERWRITE TABLE BDPL200.L2COT_LTNT_CUST_WEB_HPOS_1W_01_TEMP --STORED AS PARQUET
--LOCATION '/BDP/impala_table/L2/00/L2COT_LTNT_CUST_WEB_HPOS_1W_01_TEMP' AS
SELECT
  A.CUST_NO
 , B.PRD_NO
FROM ( SELECT DISTINCT
     CUST_NO
  FROM BDPL200.L2COT_LTNT_CUST_HPOS_1W_02_TEMP
  --ORDER BY CUST_NO 
  ) AS A 
INNER JOIN ( SELECT DISTINCT
      CUST_NO
     , PRD_NO
    FROM BDPVIEW.L1AAT_MBL_ENTR_BAS       -- L1모바일 가입마스터
    WHERE 1=1
     AND ENTR_STTS_CD = 'A'
     AND PRD_NO IS NOT NULL ) AS B
ON A.CUST_NO = B.CUST_NO 
;
